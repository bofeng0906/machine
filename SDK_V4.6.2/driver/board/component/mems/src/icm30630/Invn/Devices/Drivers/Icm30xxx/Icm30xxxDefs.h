/*
 * ________________________________________________________________________________________________________
 * Copyright (c) 2015-2015 InvenSense Inc. All rights reserved.
 *
 * This software, related documentation and any modifications thereto (collectively “Software”) is subject
 * to InvenSense and its licensors' intellectual property rights under U.S. and international copyright
 * and other intellectual property rights laws.
 *
 * InvenSense and its licensors retain all intellectual property and proprietary rights in and to the Software
 * and any use, reproduction, disclosure or distribution of the Software without an express license agreement
 * from InvenSense is strictly prohibited.
 *
 * EXCEPT AS OTHERWISE PROVIDED IN A LICENSE AGREEMENT BETWEEN THE PARTIES, THE SOFTWARE IS
 * PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
 * TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * EXCEPT AS OTHERWISE PROVIDED IN A LICENSE AGREEMENT BETWEEN THE PARTIES, IN NO EVENT SHALL
 * INVENSENSE BE LIABLE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, OR ANY
 * DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE
 * OF THE SOFTWARE.
 * ________________________________________________________________________________________________________
 */

/** @defgroup DriverIcm30xxxDefs Icm30xxx driver definitions
 *  @brief    HW definitions for ICM30xxx devices
 *  @ingroup  DriverIcm30xxx
 *  @{
 */

#ifndef _INV_ICM30XXX_DEFS_H_
#define _INV_ICM30XXX_DEFS_H_

#ifdef __cplusplus
extern "C" {
#endif

// oscillator frequency in Hz
#define ICM30XXX_OSC_FREQ 32768

/************* Icm30xxx Register Banks ***************/
#define ICM30XXX_REG_BANK_0 0x00
#define ICM30XXX_REG_BANK_1 0x01
#define BANK_1_OFFSET 0x100

/************** Icm30xxx Register Map ****************/
// Both banks
#define ICM30XXX_REG_BANK_SEL 0x7F
#define ICM30XXX_BANK_SELECT_BIT 0x01
#define ICM30XXX_SPI_ADDR_MSB_BIT 0x02

// Bank 0
#define ICM30XXX_WHOAMI_B0 0x00

#define ICM30XXX_MOD_EN_B0 0x02
	#define ICM30XXX_I2C_IF_DIS_BIT 0x01
	#define ICM30XXX_DMP_EN_BIT 0x04
	#define ICM30XXX_M0_EN_BIT 0x08
	#define ICM30XXX_I2C_MST_EN_BIT 0x10
	#define ICM30XXX_SPI_MST_EN_BIT 0x20
	#define ICM30XXX_SERIF_FIFO_EN_BIT 0x02

#define ICM30XXX_MOD_RUN_ONCE_0_B0 0x04
	#define SEC_INTF_CH2_RUN_BIT 0x04
	#define SEC_INTF_CH1_RUN_BIT 0x02
	#define SEC_INTF_CH0_RUN_BIT 0x01

#define ICM30XXX_MOD_RUN_ONCE_1_B0 0x05
	#define SEC_INTF_DMP_RUN_BIT 0x80

#define ICM30XXX_PWR_MGMT_1_B0 0x06
	#define ICM30XXX_SOFT_RESET_BIT 0x80
	#define ICM30XXX_DEEP_SLEEP_EN_BIT 0x10
	#define ICM30XXX_STANDBY_EN_BIT 0x08
	#define ICM30XXX_LP_EN_BIT 0x04
	#define ICM30XXX_PD_REQ_BIT 0x02
	#define ICM30XXX_SLEEP_REQ_BIT 0x01

#define ICM30XXX_INT_PIN_CFG_B0 0x0e
#define ICM30XXX_SRAM_CFG_B0 0xFB

#define ICM30XXX_SCRATCH_INT_EN_B0 0x0F
    #define ICM30XXX_FIFO_WM_INT_PIN_BIT 0x10
    #define ICM30XXX_RAW_DATA_RDY_INT_PIN_BIT 0x08

#define ICM30XXX_FIFO_DATA_RDY_INT_EN_B0 0x10

#define ICM30XXX_FIFO_WM_INT_EN_B0		0x13

#define ICM30XXX_INT0_STATUS_B0 0x18
#define ICM30XXX_SCRATCH_INT0_STATUS_B0 0x19
#define ICM30XXX_SCRATCH_INT1_STATUS_B0 0x20
#define ICM30XXX_SCRATCH_INT2_STATUS_B0 0x21

#define ICM30XXX_EXT_SLV_SENS_DATA_00_B0 0x2A
#define ICM30XXX_EXT_SLV_SENS_DATA_01_B0 0x2B

#define ICM30XXX_MEM_ADDR_SEL_0_B0 0x70
#define ICM30XXX_MEM_R_W_B0 0x74

#define ICM30XXX_FLASH_ERASE_B0 0x7C
	#define ICM30XXX_FLASH_ERASE_MASS_EN_BIT 0x80
	#define ICM30XXX_FLASH_ERASE_PAGE_EN_BIT 0x40

#define ICM30XXX_MAX_FLASH_PAGE_ADDRESS 0x1F		// 32 2K pages of flash... this is not a register

#define ICM30XXX_IDLE_STATUS_B0 0x7D
	#define ICM30XXX_FLASH_LOAD_DONE_BIT 0x02
	#define ICM30XXX_FLASH_IDLE_BIT 0x01

#define ICM30XXX_PROD_ID_B0 0x80

#define ICM30XXX_INTOSC1_B0 0x84

#define ICM30XXX_MOD_CTRL_B0 0x89
	#define ICM30XXX_HCLK_SCLK_MUX_EN_BIT 0x80
	#define ICM30XXX_SPI_MST_DIS_BIT 0x40
	#define ICM30XXX_I2C_MST1_DIS_BIT 0x20
	#define ICM30XXX_I2C_MST0_DIS_BIT 0x10
	#define ICM30XXX_SERIF_FIFO_DIS_BIT	0x04
#define ICM30XXX_MOD_CTRL2_B0 0x8A
	#define ICM30XXX_FIFO_EMPTY_IND_DIS_BIT 0x8

#define ICM30XXX_SEC_INTF_CH0_CONFIG_B0 0xA0
#if 1 //jhyun
#define ICM30XXX_SEC_INTF_CH0_ODR_CONFIG_B0	0xA1
#endif
	#define ICM30XXX_SEC_INTF_CH0_EN_BIT 0x80
	#define ICM30XXX_SEC_INTF_CH0_MST_MAP_BITS_SPI 0x40

#define ICM30XXX_SEC_INTF_CH1_CONFIG_B0 0xA2
#define ICM30XXX_SEC_INTF_CH1_ODR_CONFIG_B0	0xA3
#define ICM30XXX_SEC_INTF_CH2_CONFIG_B0 0xA4

	#define ICM30XXX_SEC_INTF_EN_BIT 0x80
	#define ICM30XXX_SEC_INTF_MST_MAP_BITS_I2C_MST0 0x00
	#define ICM30XXX_SEC_INTF_MST_MAP_BITS_I2C_MST1 0x20

#define ICM30XXX_SEC_INTF_PRGM_START_ADDR_0_B0 0xB9
#define ICM30XXX_SEC_INTF_SLV_INT_CFG_B0 0xBD

#define ICM30XXX_CHANNEL_FIFO_MAP_0_B0 0xC0
#define ICM30XXX_CHANNEL_FIFO_MAP_1_B0 0xC1
#define ICM30XXX_CHANNEL_FIFO_MAP_2_B0 0xC2
#define ICM30XXX_CHANNEL_FIFO_MAP_3_B0 0xC3
#define ICM30XXX_CHANNEL_FIFO_MAP_4_B0 0xC4

#define ICM30XXX_FIFO_PKT_SIZE_OVERRIDE_B0 0xE8
#define ICM30XXX_FIFO_RST_B0	0xEA
#define ICM30XXX_FIFO_MODE_B0	0xEB

#define ICM30XXX_FLASH_CFG_B0 0xFC
	#define ICM30XXX_FLASH_CACHE_BYPASS_BIT 0x10
	#define ICM30XXX_FLASH_IFRN_DIS_BIT 0x02

#define ICM30XXX_TEST_MODES_B0 0xFD
	#define ICM30XXX_TEST_MODES_SKU_TYPE_BIT 0x04
	#define ICM30XXX_TEST_MODES_DAP_EN_BIT 0x01

#define ICM30XXX_FIFO_INDEX_B0		0x75
#define ICM30XXX_FIFO_COUNTH_B0		0x76
#define ICM30XXX_FIFO_COUNTL_B0		0x77
#define ICM30XXX_FIFO_R_W_B0			0x78

#define ICM30XXX_FIFO_3_SIZE_B0		0xD4
#define ICM30XXX_FIFO_2_SIZE_B0		0xD5
#define ICM30XXX_FIFO_1_SIZE_B0		0xD6
#define ICM30XXX_FIFO_0_SIZE_B0		0xD7

#define ICM30XXX_FIFO_3_WM_B0			0xDC
#define ICM30XXX_FIFO_2_WM_B0			0xDD
#define ICM30XXX_FIFO_1_WM_B0			0xDE
#define ICM30XXX_FIFO_0_WM_B0			0xDF

#define ICM30XXX_FIFO_3_PKT_SIZE_B0	0xE4
#define ICM30XXX_FIFO_2_PKT_SIZE_B0	0xE5
#define ICM30XXX_FIFO_1_PKT_SIZE_B0	0xE6
#define ICM30XXX_FIFO_0_PKT_SIZE_B0	0xE7

// Bank 1
#define ICM30XXX_PRGRM_STRT_ADDR_DRDY_0_B1 0x00		// Bits{[31:28],[23:20]}  of DMP data ready program start address
#define ICM30XXX_PRGRM_STRT_ADDR_TIMER_0_B1 0x03		// Bits{[31:28],[23:20]}]  of DMP timer program start address
#define ICM30XXX_PRGRM_STRT_ADDR_DEMAND_0_B1 0x06		// Bits{[31:28],[23:20]}  of DMP demand program start address?

#define ICM30XXX_DMP_INT_ENABLE_B1 0x10
	#define ICM30XXX_EXT_INT_DMP_TRIGGER_EN_BIT 0x40

#define ICM30XXX_M0_INT_ENABLE_B1 0x20
	#define ICM30XXX_EXT_INT_M0_TRIGGER_EN_BIT 0x80
	#define ICM30XXX_FIFO_DATA_RDY_M0_INT_EN_BIT 0x02
    #define ICM30XXX_CH_DATA_RDY_M0_INT_EN_BIT 0x01
	#define ICM30XXX_FIFO_WM_M0_EN_BIT 0x08

#define ICM30XXX_CH_DRDY_INT_STATUS_CM0_1_B1 0x22
#define ICM30XXX_SCRATCH_M0_INT_STATUS_B1 0x26

#define ICM30XXX_TESTMUX1_B1 0x40
#define ICM30XXX_TESTMUX2_B1 0x41
#define ICM30XXX_TESTMUX3_B1 0x42
#define ICM30XXX_TESTMUX4_B1 0x43
#define ICM30XXX_TESTMUX5_B1 0x44
#define ICM30XXX_TESTMUX6_B1 0x45
#define ICM30XXX_TESTMUX7_B1 0x46

#define ICM30XXX_ROM_CFG_B1 0x50
#define ICM30XXX_STCALIB_CFG_B1 0x60		// POR value of 0x03

// DMA Configuration

#define ICM30XXX_DMA_CH_0_START_ADDR 0x40002000
#define ICM30XXX_DMA_CHANNEL_ADDRESS_OFFSET 0x20
#define ICM30XXX_DMA_CH_1_START_ADDR ICM30XXX_DMA_CH_0_START_ADDR + ICM30XXX_DMA_CHANNEL_ADDRESS_OFFSET		// these may be unnecessary
#define ICM30XXX_DMA_CH_2_START_ADDR ICM30XXX_DMA_CH_1_START_ADDR + ICM30XXX_DMA_CHANNEL_ADDRESS_OFFSET
#define ICM30XXX_DMA_CH_3_START_ADDR ICM30XXX_DMA_CH_2_START_ADDR + ICM30XXX_DMA_CHANNEL_ADDRESS_OFFSET
#define ICM30XXX_DMA_CH_4_START_ADDR ICM30XXX_DMA_CH_3_START_ADDR + ICM30XXX_DMA_CHANNEL_ADDRESS_OFFSET
#define ICM30XXX_DMA_CH_5_START_ADDR ICM30XXX_DMA_CH_4_START_ADDR + ICM30XXX_DMA_CHANNEL_ADDRESS_OFFSET

#define ICM30XXX_DMA_INTERRUPT_REGISTER 0x40002100

#define ICM30XXX_DMA_SOURCE_ADDRESS_OFFSET 0x00
#define ICM30XXX_DMA_DEST_ADDRESS_OFFSET 0x04

#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_0_OFFSET 0x08
	#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_0_WORD_SIZE_BITS 0x02		// 32 bits
#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_1_OFFSET 0x09
	#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_1_MAX_BURST_BITS 0x80		// burst of 16
#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_2_OFFSET 0x0A
	#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_2_START_BIT 0x02
	#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_2_TYPE_BITS 0x00		// bits 5:7, 000 = buffered memory to memory dma
	#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_2_CHG_BIT 0x04
	#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_2_STRT_BIT 0x02


#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_3_OFFSET 0x0B
	#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_3_INT_BIT 0x01
	#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_3_TC_BIT 0x02
	#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_3_SINC_BIT 0x04		// we are using sinc and dinc
	#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_3_SDEC_BIT 0x08
	#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_3_DINC_BIT 0x20
	#define ICM30XXX_DMA_CONTROL_REGISTER_BYTE_3_DDEC_BIT 0x40

#define ICM30XXX_DMA_TRANSFER_COUNT_OFFSET 0x0C


/*************** Timer Register Map *****************/

// Extended Registers, use with INV_TIMER_BASE_ADDR
#define ICM30XXX_TIMER_BASE_ADDR  0x50020000
    #define ICM30XXX_EXT_TIME_STAMP_TIMER_CNTR 0x00
    #define ICM30XXX_EXT_TIME_STAMP_TIMER_VALUE 0x04
    #define ICM30XXX_EXT_TIME_STAMP_TIMER_RELOAD 0x08


// the following might belong someplace like transport.h
#define MAX_SECONDARY_TRANSFER_SIZE 16		// can only write 16 bytes via the secondary SPI (I2C?)

// SPI Commands:  4 bits, [7:4]
#define SPI_MASTER_WRITE_COMMAND 0x10
#define SPI_MASTER_READ_COMMAND  0x20
#define SPI_MASTER_WAIT_COMMAND  0x40
#define SPI_MASTER_READ_UPDATE_COMMAND  0x80
#define SPI_MASTER_STOP_COMMAND  0xB7		// anything other than the above commands = STOP
// bits [5:4] of program byte 0
#define SPI_CLK_FREQ_PCLK 0x00
#define SPI_CLK_FREQ_PCLK_DIV_2 0x10    // 2'b01 in bits [5:4]
#define SPI_CLK_FREQ_PCLK_DIV_4 0x20    // 2'b10 in bits [5:4]
#define SPI_CLK_FREQ_PCLK_DIV_8 0x30    // 2'b11 in bits [5:4]
// bits [1:0] of program byte 0
#define SPI_SLAVE_0_ID 0x00
#define SPI_SLAVE_1_ID 0x01
#define SPI_SLAVE_2_ID 0x10

// i2c Commands:  4 bits, [7:4]
#define I2C_MASTER_WRITE_COMMAND		0x10
#define I2C_MASTER_READ_COMMAND			0x20
#define I2C_MASTER_WAIT_COMMAND			0x40
#define I2C_MASTER_READ_DONE_COMMAND	0x80
#define I2C_MASTER_STOP_COMMAND			0x00

/*************** Specific defines for ICM30630 **********/

// Memory Map

#define ICM30630_FLASH_SIZE      (64*1024)
#define ICM30630_SRAM_SIZE       (64*1024)

#define ICM30630_BANK0_BASE_ADDR 0x50000000
#define ICM30630_FLASH_START_ADDR 0x00000000
#define ICM30630_SRAM_START_ADDR  0x20000000

#define ICM30630_SRAM_DMP4_START_ADDR	ICM30630_SRAM_START_ADDR + 0x0000C000
// DEFINE THE SHARED MEMORY SO WE CAN USE IT FOR SPI AND I2C
#define ICM30630_SRAM_SHARED_MEMORY_START_ADDR	ICM30630_SRAM_START_ADDR + 0x0000E000
#define ICM30630_SRAM_SHARED_MEMORY_DMP4_INTERFACE	ICM30630_SRAM_SHARED_MEMORY_START_ADDR + 0x00000180
#define ICM30630_SRAM_SHARED_MEMORY_DMP4_INTERFACE_SZ     512

// FIXME: to be removed
#define ICM30630_SRAM_SHARED_MEMORY_DMP_IN	ICM30630_SRAM_SHARED_MEMORY_START_ADDR + 0x00000180
#define ICM30630_SRAM_SHARED_MEMORY_DMP_OUT	ICM30630_SRAM_SHARED_MEMORY_START_ADDR + 0x000001C0

// Define Secondary interface addresses in shared SRAM
#define ICM30630_SPI_SCRIPT_START_ADDR ICM30630_SRAM_SHARED_MEMORY_START_ADDR
// I2C_0 START ADDR is 32 BYTES AFTER SPI... and so on
#define ICM30630_I2C_0_SCRIPT_START_ADDR ICM30630_SPI_SCRIPT_START_ADDR + 32
#define ICM30630_I2C_1_SCRIPT_START_ADDR ICM30630_I2C_0_SCRIPT_START_ADDR + 32          // the addres should be based on slave channel, not on i2c master

#define ICM30630_GPIO_START_ADDR  0x40000000
#define ICM30630_SENSOR_REGISTERS_START_ADDR 0x40000C00

#define ICM30630_SPI_MASTER_START_ADDR			0x50012000
#define ICM30630_I2C_MASTER0_START_ADDR			0x50010000
#define ICM30630_I2C_MASTER1_START_ADDR			0x50011000
	#define ICM30630_I2C_MASTER_OFFSET_MAXSPEED	0x34

/*************** Specific defines for ICM30670 ************/

// Memory Map

#define ICM30670_FLASH_SIZE      (64*1024)
#define ICM30670_SRAM_SIZE       (64*1024)

#define ICM30670_BANK0_BASE_ADDR 0x50000000
#define ICM30670_FLASH_START_ADDR 0x00000000
#define ICM30670_SRAM_START_ADDR  0x20000000

#define ICM30670_SRAM_DMP4_START_ADDR	ICM30670_SRAM_START_ADDR + 0x0000A000
// DEFINE THE SHARED MEMORY SO WE CAN USE IT FOR SPI AND I2C
#define ICM30670_SRAM_SHARED_MEMORY_START_ADDR	ICM30670_SRAM_START_ADDR + 0x0000E800
#define ICM30670_SRAM_SHARED_MEMORY_DMP4_INTERFACE	ICM30670_SRAM_SHARED_MEMORY_START_ADDR + 0x00000180
#define ICM30670_SRAM_SHARED_MEMORY_DMP4_INTERFACE_SZ     1024

// FIXME: to be removed
#define ICM30670_SRAM_SHARED_MEMORY_DMP_IN	ICM30670_SRAM_SHARED_MEMORY_START_ADDR + 0x00000180
#define ICM30670_SRAM_SHARED_MEMORY_DMP_OUT	ICM30670_SRAM_SHARED_MEMORY_START_ADDR + 0x000001C0

// Define Secondary interface addresses in shared SRAM
#define ICM30670_SPI_SCRIPT_START_ADDR ICM30670_SRAM_SHARED_MEMORY_START_ADDR
// I2C_0 START ADDR is 32 BYTES AFTER SPI... and so on
#define ICM30670_I2C_0_SCRIPT_START_ADDR ICM30670_SPI_SCRIPT_START_ADDR + 32
#define ICM30670_I2C_1_SCRIPT_START_ADDR ICM30670_I2C_0_SCRIPT_START_ADDR + 32          // the addres should be based on slave channel, not on i2c master

#define ICM30670_GPIO_START_ADDR  0x40000000
#define ICM30670_SENSOR_REGISTERS_START_ADDR 0x40000C00

#define ICM30670_SPI_MASTER_START_ADDR			0x50012000
#define ICM30670_I2C_MASTER0_START_ADDR			0x50010000
#define ICM30670_I2C_MASTER1_START_ADDR			0x50011000
    #define ICM30670_I2C_MASTER_OFFSET_MAXSPEED	0x34

/*************** Specific defines for ICM30670 ************/

#define BERLIN_ZSP_DRAM_START_ADDR  0x60000000
#define BERLIN_ZSP_IRAM_START_ADDR  0x60020000

#define BERLIN_ZSP_SCONFIG_1_B0    0x08
	#define BERLIN_IBOOT_BIT          0x01
	#define BERLIN_INT0_BIT           0x08
	#define BERLIN_ZSPSYSRSTN_BIT     0x10
	#define BERLIN_ZSPCORERSTN_BIT    0x20
	#define BERLIN_HRESETN_BIT        0x40


#ifdef __cplusplus
}
#endif

#endif /* _INV_ICM30XXX_DEFS_H_ */

/** @} */
