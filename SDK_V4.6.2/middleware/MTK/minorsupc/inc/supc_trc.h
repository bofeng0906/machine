/* Copyright Statement:
 *
 * (C) 2005-2016  MediaTek Inc. All rights reserved.
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. ("MediaTek") and/or its licensors.
 * Without the prior written permission of MediaTek and/or its licensors,
 * any reproduction, modification, use or disclosure of MediaTek Software,
 * and information contained herein, in whole or in part, shall be strictly prohibited.
 * You may only use, reproduce, modify, or distribute (as applicable) MediaTek Software
 * if you have agreed to and been bound by the applicable license agreement with
 * MediaTek ("License Agreement") and been granted explicit permission to do so within
 * the License Agreement ("Permitted User").  If you are not a Permitted User,
 * please cease any access or use of MediaTek Software immediately.
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT MEDIATEK SOFTWARE RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES
 * ARE PROVIDED TO RECEIVER ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
 * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
 * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
 * SUPPLIED WITH MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
 * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
 * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
 * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
 * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
 * CUMULATIVE LIABILITY WITH RESPECT TO MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
 * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE MEDIATEK SOFTWARE AT ISSUE,
 * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
 * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 */

#ifndef _SUPC_TRC_H
#define _SUPC_TRC_H

#include "kal_trace.h"

#ifndef GEN_FOR_PC

#ifndef _STACK_CONFIG_H
#error "stack_config.h should be included before tst_config.h"
#endif

#else
#include "kal_trace.h"
#endif /* GEN_FOR_PC */


#ifndef _KAL_TRACE_H
#error "kal_trace.h should be included before tst_trace.h"
#endif

#if !defined(GEN_FOR_PC)
#if defined(__TST_MODULE__) || defined(__CUSTOM_RELEASE__)
#include "supc_trc_gen.h"
#endif /* TST Trace Defintion */
#endif

BEGIN_TRACE_MAP(MOD_SUPC)

/* ----------------- TRACE_FUNC trace class ------------------- */

TRC_MSG(FUNC_SUPC_MSG_HANDLER, "[----------------SUPC msg handler-----------]")
// TRC_MSG( FUNC_SUPC_MSG_HANDLER, "NDIS: driver capabilities: key_mgmt 0x%x enc 0x%x auth 0x%x")

/* ----------------- TRACE_STATE trace class ------------------ */


/* ----------------- TRACE_INFO trace class ------------------- */
/****************************************************************************
 *
 ****************************************************************************/

//init related trace

TRC_MSG(INFO_SUPC_NDIS_AUTH_MODE, "NDIS: %d - auth %d encr %d")
TRC_MSG(INFO_SUPC_NDIS_KEY_MNG, "NDIS: driver capabilities: key_mgmt 0x%x enc 0x%x auth 0x%x")
TRC_MSG(DUMP_SUPC_802_11_PMKID, "OID_802_11_PMKID (flush)")
TRC_MSG(DUMP_SUPC_SRAND,        "temp: %d, L1T_GETFN(): %d, L1T_GetFN()+temp:%d ")
TRC_MSG(DUMP_SUPC_MAC_AADR,     "Own MAC address: ")

TRC_MSG(INFO_SUPC_CHECK_WAPI_CHALLENGE, "wapi_check challenge 0x%08x-0x%08x-0x%08x-0x%08x")
TRC_MSG(INFO_SUPC_CHECK_WAPI_RESPONSE,  "wapi_check response 0x%08x-0x%08x-0x%08x-0x%08x")
TRC_MSG(INFO_SUPC_PENDING_CERT_IN_DEINIT,  "pending_cert_req = %d, tx_deinit_cnf = %d")
TRC_MSG(INFO_SUPC_NO_HANDLER_IN_DEINIT,  "no handler for this msg")
TRC_MSG(INFO_SUPC_SUPPORT_PRE_AUTH,  "supc support pre_authentication: %d")


//scan related trace
TRC_MSG(INFO_SUPC_SCAN_FULL_IND,  "Scan num %d exceeds max number = %d")
TRC_MSG(INFO_SUPC_SCAN_NUM,  "get scan result=%d total=%d")
TRC_MSG(INFO_SUPC_SCAN_MORE_IND,  "there more scan result in wndrv to be reported")
TRC_MSG(INFO_SUPC_SCAN_DONE_IND,  "stop scan monitor timer, after site_survey_ind")
TRC_MSG(INFO_SUPC_SCAN_STOP_TIMER,  "Stop scan monitor timer event id: %x")
TRC_MSG(INFO_SUPC_SCAN_FITLER_AP,  "fileter_duplicate row AP")
TRC_MSG(INFO_SUPC_SCAN_WAPI_AP_IND,    "supc_send_abm_wifi_ap_list_cnf:WAPI AP:")
TRC_MSG(INFO_SUPC_SCAN_NOT_PENDING_IND,   "doesn't pend in scaning, msg handler over")
TRC_MSG(INFO_SUPC_SCAN_WRONG_STA_IND,   "Ignore site survey indication, wrong state = %d, msg handler over")
TRC_MSG(INFO_SUPC_SCAN_BUSY,   "SUPC is busy now, ap list request must be ignored")
TRC_MSG(INFO_SUPC_SCAN_MONI_TIMER_START, "Start scan monitor timer event id: %x, delay: %d sec")
TRC_MSG(INFO_SUPC_SITE_SURVEY_NOT_IND,     "previous site survey req not indicated already")
TRC_MSG(INFO_SUPC_CANCELL_SCAN,     "Cancelling scan request")
TRC_MSG(INFO_SUPC_FAIL_GET_SCAN_RESULT,     "Failed to get scan results - try scanning again")
TRC_MSG(INFO_SUPC_NO_SUITABLE_AP,    "No suitable AP found.")







//conn related trace
TRC_MSG(INFO_SUPC_GET_PRIVATE_KEY_BEFORE,   "Get privkey(before dealloc): private_key :%x")
TRC_MSG(INFO_SUPC_GET_PRIVATE_KEY_AFTER,   "Get privkey(after dealloc): private_key :%x")
TRC_MSG(INFO_SUPC_GET_PRIVATE2_KEY_BEFORE,   "Get privkey2(before dealloc): private_key2 :%x")
TRC_MSG(INFO_SUPC_GET_PRIVATE_KEY2_AFTER,   "Get privkey2(after dealloc): private_key2 :%x")
TRC_MSG(INFO_SUPC_PRIVKEY_RAND_PD,    "ssid->privkey_random_passwd : %x")
TRC_MSG(INFO_SUPC_PRIVKEY2_RAND_PD,   "ssid->privkey2_random_passwd : %x")
TRC_MSG(INFO_SUPC_CLIENT_CERT_BEFORE_DEALLOC,     "ssid->client_cert (before DEALLOC): %x")
TRC_MSG(INFO_SUPC_CLIENT_CERT_BEFORE_ALLOC,   "ssid->client_cert (before ALLOC): %x")
TRC_MSG(INFO_SUPC_CLIENT_CERT_AFTER_ALLOC,    "ssid->client_cert (after ALLOC): %x")
TRC_MSG(INFO_SUPC_CLIENT_CERT2_BEFORE_DEALLOC,    "ssid->client_cert2 (before DEALLOC): %x")
TRC_MSG(INFO_SUPC_CLIENT_CERT2_BEFORE_ALLOC,  "ssid->client_cert2 (before ALLOC): %x")
TRC_MSG(INFO_SUPC_CLIENT_CERT2_AFTER_ALLOC,   "ssid->client_cert2 (after ALLOC): %x")
TRC_MSG(INFO_SUPC_IGNORE_CONNECT_IND,      "ignore it wpa_s state=%d")
TRC_MSG(INFO_SUPC_ASSOC_EVENT_CLR_REPLAY_CNT,         "Association event - clear replay counter")
TRC_MSG(INFO_SUPC_SET_SSID_AFTER_CONN,        "set wpa_s->ssid, wpa_s->ssid:")
TRC_MSG(INFO_SUPC_CONNECT_HIDEN_AP,           "connect to hiden wlan!")
TRC_MSG(INFO_SUPC_CONNECT_TO_NEW_BSSID,      "Associated to a new BSS:%02x:%02x:%02x:%02x:%02x:%02x ")
TRC_MSG(INFO_SUPC_CONNECT_WITH_BSSID_CHANNLE,   "Associated with  %02x:%02x:%02x:%02x:%02x:%02x , ch=%d")
TRC_MSG(INFO_SUPC_ADD_BLACK_LIST_FROM_CONN_IND,   "WPA: Add Blacklist from connect_ind")
TRC_MSG(INFO_SUPC_BLACK_BSSID_NUM,   "WPA: Blacklist BSSID Num = %d")
TRC_MSG(INFO_SUPC_BLACK_LIST_NUM,         "WPA: p = %d")
TRC_MSG(INFO_SUPC_CANCEL_HANDOVER_TIMER_WHEN_CONN_IND,  "cancel handover timer if key mgmt none or wpa_none!!")
TRC_MSG(INFO_SUPC_ADD_BLACK_LIST_FROM_CONN_FAIL,   "WPA: Add Blacklist from connect_fail_ind")
TRC_MSG(INFO_SUPC_ADD_BLACK_LIST_FROM_DIS_CONN,   "WPA: Add Blacklist from disconnect_ind")
TRC_MSG(INFO_SUPC_DISCONN_EVENT_IN_IBSS,      "Disconnect event - ignore in IBSS/WPA-None mode")
TRC_MSG(INFO_SUPC_WPA_STA_IN_DISCONN_EVENT,      "wpa state = %d")
TRC_MSG(INFO_SUPC_REMOVE_KEY_IN_DISCONN,      "Disconnect event - remove keys")
TRC_MSG(INFO_SUPC_INVALID_INJECT_MSG,      "Invalid inject msg")
TRC_MSG(INFO_SUPC_INJECT_MSG,     "do inject msg for connect")
TRC_MSG(INFO_SUPC_PROFILE_EXCEED,     "Num of profiles %d exceeds max number = %d")
TRC_MSG(INFO_SUPC_WAIT_NEXT_CONN_REQ,     "return and wait for next connect_req")
TRC_MSG(INFO_SUPC_GEN_FAKE_CONF_TO_MMI,    "bad input, and generate a fake  conn_cnf to MMI")
TRC_MSG(INFO_SUPC_PENDING_CERT_IN_DISCONN_REQ,  "pending_cert_req = %d, tx_disconenct_cnf = %d")
TRC_MSG(INFO_SUPC_CERTID_IN_PRIKEY_CB,  "trans_id = %d, cert_id = %d (in private_key_cb)")
TRC_MSG(INFO_SUPC_CLIENT_CERTID_IN_SSID,  "client_cert_id in ssid : %d")
TRC_MSG(INFO_SUPC_CLIENT_CERTID2_IN_SSID,  "client_cert2_id in ssid : %d")
TRC_MSG(INFO_SUPC_CERT_MISMATCH_IN_PRIKEY_CB,  "trans_id(%d,%d) or cert_id(%d,%d) in context mismatch with private_key_cb")
TRC_MSG(INFO_SUPC_PHASE1_EAP,  "ssid->phase1 : %d")
TRC_MSG(INFO_SUPC_PHASE2_EAP,  "ssid->phase2 : %d")
TRC_MSG(INFO_SUPC_READ_PROFILE_DETAILS,  "supc_read_profiles: details")
TRC_MSG(INFO_SUPC_ADD_PRIO_NETWORK,  "wpa_config_add_prio_network ++ ")
TRC_MSG(INFO_SUPC_ADD_PRIO_INSERT_PRIO,  "insert at prio=%d ")
TRC_MSG(INFO_SUPC_MATCH_NO_PRIO,  "match no prio")
TRC_MSG(INFO_SUPC_UPDATE_PRIO_LIST,  "wpa_config_update_prio_list")
TRC_MSG(INFO_SUPC_UPDATE_PRIO_LIST_RET,  "wpa_config_update_prio_list ret=%d")
TRC_MSG(INFO_SUPC_ADD_NEW_NETWORK_SSID,  "new ssid's id=%d, last ssid=%x")
TRC_MSG(INFO_SUPC_GET_ENCRYPT_MODE,  "supc_get_encrypt_mode,encry_mode=%d")
TRC_MSG(INFO_SUPC_GET_AUTH_MODE,  "supc_get_auth_mode,auth_mode=%d")
TRC_MSG(INFO_SUPC_ASSOC_PARA_DUMP,  "input para: chnl:%d wpa_len=%d gp_suite=%d,key_mgmt=%d, mode=%d, paire_suite=%d, auth_alg=%d, wep_enable=%d")
TRC_MSG(INFO_SUPC_ASSOC_OPEN_MODE,  "associate open-mode")
TRC_MSG(INFO_SUPC_ASSOC_WPA_MODE,  "associate WPA")
TRC_MSG(INFO_SUPC_ASSOC_WPA2_MODE,  "associate WPA2")
TRC_MSG(INFO_SUPC_WPA_LEN_0,  "WPA IE len is 0")
TRC_MSG(INFO_SUPC_WPA_IE_LEN_SHORT,  "WPA IE len too short %d")
TRC_MSG(INFO_SUPC_MALFORMED_WPA_IE,  "malformed WPA IE or unknown version")
TRC_MSG(INFO_SUPC_WPA_LEN_MISMATCH_TOO_MUCH,  "WPA IE length mismatch, %d too much")
TRC_MSG(INFO_SUPC_WPA_IE_COUNT_BOTCH_ERROR, "WPA IE count botch (pairwise),count %d left %d")
TRC_MSG(INFO_SUPC_WPA_IE_SHORT_KEY_MGMT, "WPA IE too short (for key mgmt)")
TRC_MSG(INFO_SUPC_WPA_IE_COUNT_BOTCH_ERROR_FOR_MGMT, "WPA IE count botch (key mgmt),count %d left %d")
TRC_MSG(INFO_SUPC_WPA_IE_SHORT_CAPA, "WPA IE too short (for capabilities)")
TRC_MSG(INFO_SUPC_WPA_IE_HAVE_TRAILING_BYTES, "WPA IE has %d trailing bytes")
TRC_MSG(INFO_SUPC_RSN_IE_0, "RSN IE len is 0")
TRC_MSG(INFO_SUPC_RSN_IE_TOO_SHORT, "RSN IE len too short %d")
TRC_MSG(INFO_SUPC_RSN_IE_MALFORMED, "malformed RSN IE or unknown version")
TRC_MSG(INFO_SUPC_RSN_LEN_MISMATCH_TOO_MUCH, "RSN IE length mismatch, %d too much")
TRC_MSG(INFO_SUPC_RSN_LEN_COUNT_BOTCH_ERROR, "RSN IE count botch (pairwise), count %d left %d")
TRC_MSG(INFO_SUPC_RSN_LEN_SHORT_KEY_MGMT, "RSN IE too short (for key mgmt)")
TRC_MSG(INFO_SUPC_RSN_LEN_COUNT_BOTCH_ERROR_FOR_MGMT, "RSN IE count botch (key mgmt),count %d left %d")
TRC_MSG(INFO_SUPC_RSN_IE_SHORT_CAPA, "RSN IE too short (for capabilities)")
TRC_MSG(INFO_SUPC_PMKID_UNDERFLOW, "PMKID underflow (num_pmkid=%d left=%d)")
TRC_MSG(INFO_SUPC_RSN_IE_HAVE_TRAILING_BYTES, "RSN IE has %d trailing bytes - ignored")
TRC_MSG(INFO_SUPC_GEN_INVALID_GROUP_CIPHER, "Invalid group cipher (%d).")
TRC_MSG(INFO_SUPC_GEN_INVALID_PAIRWISE_CIPHER, "Invalid pairwise cipher (%d).")
TRC_MSG(INFO_SUPC_GEN_INVALID_KEY_MGMT_TPYE, "Invalid key management type (%d).")
TRC_MSG(INFO_SUPC_COULD_NOT_READ_SSID_FROM_DRV, "Could not read SSID from driver.")
TRC_MSG(INFO_SUPC_COULD_NOT_READ_BSSID_FROM_DRV, "Could not read BSSID from driver.")
TRC_MSG(INFO_SUPC_NULL_WPA_CONF, "Error!! wpa_s->conf is NULL")
TRC_MSG(INFO_SUPC_INVALID_MODE_WPA_NONE, "WPA: Invalid mode %d (not IBSS/ad-hoc) for WPA-None")
TRC_MSG(INFO_SUPC_NO_PSK_FOR_WPA_NONE, "WPA: No PSK configured for WPA-None")
TRC_MSG(INFO_SUPC_INVALID_GROUP_CIPHER_WPA_NONE, "WPA: Invalid group cipher %d for WPA-None")
TRC_MSG(INFO_SUPC_BSSID_AL_IN_P_BLACKLIST, "BSSID %02x:%02x:%02x:%02x:%02x:%02x is already in permanent blacklist of profile %d")
TRC_MSG(INFO_SUPC_P_BLACKLIST_FULL, "Permanent blacklist is full!Num=%d")
TRC_MSG(INFO_SUPC_ADD_P_BLACKLIST, "Added BSSID %02x:%02x:%02x:%02x:%02x:%02x into permanent blacklist of profile %d")
TRC_MSG(INFO_SUPC_REMOVE_P_BLACKLIST, "Removed BSSID %02x:%02x:%02x:%02x:%02x:%02x from permanent blacklist of profile %d")
TRC_MSG(INFO_SUPC_CLR_P_BLACKLIST, "Removed BSSID %02x:%02x:%02x:%02x:%02x:%02x from permanent blacklist of profile %d(clear)")
TRC_MSG(INFO_SUPC_AL_IN_SUCC_LIST, "BSSID %02x:%02x:%02x:%02x:%02x:%02x is already in success list of profile %d")
TRC_MSG(INFO_SUPC_SUCC_LIST_FULL, "Success list is full!Num=%d")
TRC_MSG(INFO_SUPC_ADD_IN_SUCC_LIST, "Added BSSID %02x:%02x:%02x:%02x:%02x:%02x into success list of profile %d")
TRC_MSG(INFO_SUPC_CLR_SUCC_LIST, "Removed BSSID %02x:%02x:%02x:%02x:%02x:%02x from success list of profile %d (clear)")
TRC_MSG(INFO_SUPC_USE_WPA_IE_FROM_ASSOC, "WPA: Using WPA IE from AssocReq to set cipher suites")
TRC_MSG(INFO_SUPC_SET_CIPHER_BASED_CONFIG, "WPA: Set cipher suites based on configuration")
TRC_MSG(INFO_SUPC_FAIL_PARSE_WPA_IE_SELECTED_BSS, "WPA: Failed to parse WPA IE for the selected BSS.")
TRC_MSG(INFO_SUPC_SELECTED_CIHPER_SUITES, "WPA: Selected cipher suites: group %d pairwise %d key_mgmt %d")
TRC_MSG(INFO_SUPC_SET_SUITES_ALLOC_BUFFER_FAIL, "WPA: SUPC_ALLOC_BUFF failed")
TRC_MSG(INFO_SUPC_SET_SUITES_GTK_CCMP, "WPA: using GTK CCMP")
TRC_MSG(INFO_SUPC_SET_SUITES_GTK_TKIP, "WPA: using GTK TKIP")
TRC_MSG(INFO_SUPC_SET_SUITES_GTK_WEP104, "WPA: using GTK WEP104")
TRC_MSG(INFO_SUPC_SET_SUITES_GTK_WEP40, "WPA: using GTK WEP40")
TRC_MSG(INFO_SUPC_SET_SUITES_GTK_SMS4, "WPA: using GROUP SMS4")
TRC_MSG(INFO_SUPC_SET_SUITES_GTK_FAIL, "WPA: Failed to select group cipher.")
TRC_MSG(INFO_SUPC_SET_SUITES_PTK_CCMP, "WPA: using PTK CCMP")
TRC_MSG(INFO_SUPC_SET_SUITES_PTK_TKIP, "WPA: using PTK TKIP")
TRC_MSG(INFO_SUPC_SET_SUITES_PTK_NONE, "WPA: using PTK NONE")
TRC_MSG(INFO_SUPC_SET_SUITES_PTK_SMS4, "WPA: using PAIRE SMS4")
TRC_MSG(INFO_SUPC_SET_SUITES_PTK_FAIL, "WPA: Failed to select pairwise cipher.")
TRC_MSG(INFO_SUPC_SET_SUITES_8021X, "WPA: using KEY_MGMT 802.1X")
TRC_MSG(INFO_SUPC_SET_SUITES_PSK, "WPA: using KEY_MGMT WPA-PSK")
TRC_MSG(INFO_SUPC_SET_WPA_NONE, "WPA: using KEY_MGMT WPA-NONE")
TRC_MSG(INFO_SUPC_SET_WAI, "WPA: using KEY_MGMT WAPI WAI")
TRC_MSG(INFO_SUPC_SET_WAPI_PSK, "WPA: using KEY_MGMT WAPI PSK")
TRC_MSG(INFO_SUPC_SET_AKM_FAIL, "WPA: Failed to select authenticated key management type.")
TRC_MSG(INFO_SUPC_SET_SUITES_GEN_IE_FAIL, "WPA: Failed to generate WPA IE.")
TRC_MSG(INFO_SUPC_SET_SUITES_DUMP_IE,    "WPA: Own WPA IE")
TRC_MSG(INFO_SUPC_NO_AP_CLR_T_BLACKLIST,    "No APs found - clear temporal blacklist and try again")
TRC_MSG(INFO_SUPC_AL_ASSOC_AP,    "Already associated with the selected AP. reassoc flag %d")
TRC_MSG(INFO_SUPC_DRV_USE_DISABLED_GROUP_CIPHER,    "WPA: Driver used disabled group cipher 0x%x (mask 0x%x) - reject")
TRC_MSG(INFO_SUPC_DRV_USE_DISABLED_PAIR_CIPHER,    "WPA: Driver used disabled pairwise cipher 0x%x (mask 0x%x) - reject")
TRC_MSG(INFO_SUPC_DRV_USE_DISABLED_KEY_MGMT,    "WPA: Driver used disabled key management 0x%x (mask 0x%x) - reject")
TRC_MSG(INFO_SUPC_NO_ASSOC_IE_FROM_BSS,   "WPA: No assoc IE for the connected BSS.")
TRC_MSG(INFO_SUPC_PARSE_ASSOC_IE_FROM_BSS_FAIL,   "WPA: Failed to parse WPA IE for the connected BSS.")
TRC_MSG(INFO_SUPC_SET_SUITE_11I_D90,   "RSN: using IEEE 802.11i/D9.0")
TRC_MSG(INFO_SUPC_SET_SUITE_USE_WAPI,   "WAPI: using WAPI")
TRC_MSG(INFO_SUPC_SET_SUITE_11I_D30,   "WPA: using IEEE 802.11i/D3.0")
TRC_MSG(INFO_SUPC_FAIL_PARSE_WAPI_IE_FOR_BSS,   "WPA: Failed to parse WAPI IE for the selected BSS.")
TRC_MSG(INFO_SUPC_FAIL_PARSE_RSN_WPA_IE_FOR_BSS,   "WPA: Failed to parse WPA/RSN IE for the selected BSS.")
TRC_MSG(INFO_SUPC_IE_MISATCH_BSSID,   "WPA: (src=%02x:%02x:%02x:%02x:%02x:%02x),reason_as")




TRC_MSG(INFO_SUPC_CONF_NULL_IND, "Error!! wpa_s->conf is NULL")
TRC_MSG(INFO_SUPC_DUMP_SUPC_START,   "---wpa supplicant---------++")
TRC_MSG(INFO_SUPC_DUMP_SUPC_CONFIG,  "supplicant: state=%d proto= %d, key_mgmt=%d, pair_cipher=%d, gp_cipher=%d")
TRC_MSG(INFO_SUPC_DUMP_OWN_MAC,  "supplicant: own MAC: ")
TRC_MSG(INFO_SUPC_DUMP_BSSID,    "current bssid: ")
TRC_MSG(INFO_SUPC_PROFILE_NUM,   "profile num= %d")
TRC_MSG(INFO_SUPC_MMI_REQ_STA,    "report mmi flag=%d, ap list flag=%d, handover time=%d, scan peing flag=%d, conn pending = %d")
TRC_MSG(INFO_SUPC_SHOW_CURRENT_SSID, "current ssid-----------")
TRC_MSG(INFO_SUPC_SHOW_CURRENT_SSID_END, "-----------------------")
TRC_MSG(INFO_SUPC_DUMP_NULL_CONF,     "wpa_s->conifg is NULL!")
TRC_MSG(INFO_SUPC_DUMP_CONF_START,     "dump ssid in conf")
TRC_MSG(INFO_SUPC_DUMP_CONF_SSID,     "-------SSID %d--------")
TRC_MSG(INFO_SUPC_DBG_SHOW_SSID_NULL,       "ssid is NULL")
TRC_MSG(INFO_SUPC_DUMP_CERT,    "ca_cert=%d ca_cert2=%d cli_cert=%d cli_cert2=%d")
TRC_MSG(INFO_SUPC_DUMP_PROFILE_BASIC,       "profile id = %d , prio=%d channel=%d")
TRC_MSG(INFO_SUPC_DUMP_KEY_MGMT,    "key_mgmt = %d proto=%d auth_alg=%d pairwise_cipher=%d gp_cipher=%d")
TRC_MSG(INFO_SUPC_DUMP_PROFILE,     "-------[%d] profiles -----")
TRC_MSG(INFO_SUPC_PROFILE_BSSID,      "BSSID: ")
TRC_MSG(INFO_SUPC_DUMP_PROFILE_INFO,  "prio=%d, profID=%d, proto=%d, key_mgmt=%d, eap=%d")
TRC_MSG(INFO_SUPC_PROFILE_PSK,    "PSK")
TRC_MSG(INFO_SUPC_DUMP_PROFILE_OVER,  "------- dump profile over   -----")
TRC_MSG(INFO_SUPC_DUMP_SUPC_OVER,     "---wpa supplicant OVER---------")
TRC_MSG(INFO_SUPC_IBSS_INF_COEXISTD, "IBSS and INFRA net coexist, skip select bss")
TRC_MSG(INFO_SUPC_RESTART_SCAN_PRIO, "restart scan at prio=%d")
TRC_MSG(INFO_SUPC_NO_AP_CLR_TMP_LIST,    "No APs found - clear temporal blacklist and try again")
TRC_MSG(INFO_SUPC_NO_AP_CLR_LIST,    "No APs found - clear blacklist and try again")
TRC_MSG(INFO_SUPC_SEARCH_PRIO,   "Selecting BSS from priority group %d")
TRC_MSG(INFO_SUPC_SEARCH_WPA_AP_START,   "Try WPA-enabled AP....")
TRC_MSG(INFO_SUPC_SEARCH_WPA_AP, "AP(%d)==> check AP SSID:")
TRC_MSG(INFO_SUPC_WPA_AP_WAPI,   "BSSID(=%02x:%02x:%02x:%02x:%02x:%02x) wpa_ie_len(%d) rsn_ie_len(%d) wapi_ie_len(%d) )")
TRC_MSG(INFO_SUPC_WPA_AP,    "AP(%d) => BSSID(=%02x:%02x:%02x:%02x:%02x:%02x) \n wpa_ie_len(%d) rsn_ie_len(%d)\n nettype(%d)")

TRC_MSG(INFO_SUPC_SKIP_NULL_SSID,    "skip this AP's ssid len = 0")
TRC_MSG(INFO_SUPC_SKIP_BLACKLIST,    "skip - blacklisted")
TRC_MSG(INFO_SUPC_SKIP_NO_WPA_WAPI,  "   skip - no WPA/RSN/WAPI IE")
TRC_MSG(INFO_SUPC_SKIP_NO_WPA,   "   skip - no WPA/RSN IE")
TRC_MSG(INFO_SUPC_SKIP_PBLACKLIST,   "   skip - permanmently blacklisted")
TRC_MSG(INFO_SUPC_SKIP_TBLACKLIST,   "   skip - temporarily blacklisted")
TRC_MSG(INFO_SUPC_SKIP_SSID_MISMATCH,    "   skip - SSID mismatch, ssid =")
TRC_MSG(INFO_SUPC_SKIP_BSSID_MISMATCH,   "   skip - BSSID mismatch")
TRC_MSG(INFO_SUPC_SKIP_NETWORK_TYPE_MISMATCH,    "	skip - network type mismatch")

TRC_MSG(INFO_SUPC_SKIP_CAN_NOT_PARSE_WPA_WAPI_IE, " skip - could not parse WPA/RSN/WAPI IE")
TRC_MSG(INFO_SUPC_SKIP_CAN_NOT_PARSE_WPA_IE, "   skip - could not parse WPA/RSN IE")
TRC_MSG(INFO_SUPC_SKIP_PROTP_MISMATCH, "   skip - proto mismatch")
TRC_MSG(INFO_SUPC_SKIP_PTK_MISMATCH, "   skip - PTK cipher mismatch")
TRC_MSG(INFO_SUPC_SKIP_EKY_MGMT_MISMATCH, "   skip - key mgmt mismatch, ssid mgmt=%d, bss mgmt=%d")
TRC_MSG(INFO_SUPC_SELECTED_SSID, "select SSID:")
TRC_MSG(INFO_SUPC_SELECTED_BSSID, "select WPA AP: %02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_SUPC_SEARCH_NON_WPA_AP_START,   "Try non-WPA AP....")
TRC_MSG(INFO_SUPC_SEARCH_NON_WPA_AP, "AP(%d)==> check NON_WPA AP SSID:")
TRC_MSG(INFO_SUPC_SKIP_NON_WPA_NETWORK,  "   skip - non-WPA network not allowed")
TRC_MSG(INFO_SUPC_SKIP_WPA_NETWORK,  "   skip - WPA network")
TRC_MSG(INFO_SUPC_SKIP_PRIVACY_MISMATCH, "   skip - privacy mismatch")

TRC_MSG(INFO_SUPC_SELECTED_NON_WPA_BSSID, "select  non-WPA AP: %02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_SUPC_REMOVE_BSS_FROM_AUTH_TIMEOUT_LIST,   "Removed BSSID %02x:%02x:%02x:%02x:%02x:%02x from auth timeout list of profile %d (clear)")
TRC_MSG(INFO_SUPC_BSSIDIN_TBLACKLIST, "BSSID %02x:%02x:%02x:%02x:%02x:%02x is already in temporal blacklist of profile %d")
TRC_MSG(INFO_SUPC_REMOVE_BSSID_FROM_TBLACKLIST, "Removed BSSID %02x:%02x:%02x:%02x:%02x:%02x from temporal blacklist of profile %d (clear)")
TRC_MSG(INFO_SUPC_TBLACKLIST_FULL, "Temporal blacklist is full!Num=%d")
TRC_MSG(INFO_SUPC_ADD_BSSID_TO_TBLACKLIST, "Added BSSID %02x:%02x:%02x:%02x:%02x:%02x into temporal blacklist of profile %d")


TRC_MSG(INFO_SUPC_ADD_BSSID_TO_PBLACKLIST_IN_UPDATE_REQ, "Added params Permanent Blacklist BSSID %02x:%02x:%02x:%02x:%02x:%02x in blacklist_update_req")
TRC_MSG(INFO_SUPC_ADD_BSSID_TO_TBLACKLIST_IN_UPDATE_REQ, "Added params Temporal Blacklist BSSID %02x:%02x:%02x:%02x:%02x:%02x in blacklist_update_req")
TRC_MSG(INFO_SUPC_T_BLACKLIST_NUM, "WPA: Associating Temporal Blacklist number : %d")
TRC_MSG(INFO_SUPC_P_BLACKLIST_NUM, "WPA: Associating Permanent Blacklist number :%d")
TRC_MSG(INFO_SUPC_ALL_BLACKLIST_NUM, "WPA: Associating Total Blacklist number :%d")

TRC_MSG(INFO_SUPC_CREATE_IBSS, "WPA: we are the creater in IBSS mode")
TRC_MSG(INFO_SUPC_NO_AP_SCAN_AGAIN, "No suitable AP found,Scan after %d secs")


TRC_MSG(INFO_SUPC_TRY_ASSOC, "Trying to associate with SSID,SSID is")
TRC_MSG(INFO_SUPC_TRY_ASSOC_BSSID, "bssid is")
TRC_MSG(INFO_SUPC_TRY_ASSOC_NULL_BSS, "Trying to associate with AP with empty BSSID,SSID is")
TRC_MSG(DUMP_SUPC_PMKID, "RSN: PMKID")
TRC_MSG(INFO_SUPC_FAIL_SET_WPA_KEY_MGMT, "WPA: Failed to set WPA key management and encryption suites")
TRC_MSG(INFO_SUPC_FAIL_SET_WPA_KEY_MGMT_NO_SCAN, "WPA: Failed to set WPA key management and encryption suites (no scan results)")
TRC_MSG(INFO_SUPC_FAIL_SET_NON_WPA_OPEN_MODE, "set non wpa policy for open-mode")
TRC_MSG(INFO_SUPC_WPA_KEY_MGMT, "wpa_s->key_mgmt=%d pair_cipher=%d, gp_cipher=%d")
TRC_MSG(INFO_SUPC_SSID_KEY_MGMT, "ssid: key_mgmt=%d pair_cipher=%d gp_cipher=%d")
TRC_MSG(INFO_SUPC_CIPHER_TO_DRVIVER, "cipher_pair=%d, cipher_gp=%d")
TRC_MSG(INFO_SUPC_KEY_MGMT_BEFORE_ASSOC, "before assoc, ssid->proto=%d pair_cipher=%d gp_cipher=%d")

TRC_MSG(INFO_SUPC_NETWORK_BLOCK_DEBUG, "---- network block -----")
TRC_MSG(INFO_SUPC_NETWORK_BLOCK_DEBUG_END, "------------------------")
TRC_MSG(INFO_SUPC_WAPI_KEY_MGMT, "WAPI key mgmt %d ")
TRC_MSG(INFO_SUPC_WAPI_CNTAPPARA_SET, "WAPI: WAI_CNTAPPARA_SET result %d")
TRC_MSG(INFO_SUPC_WAPI_PSK_AUTH_TYPE, "auth %d type %d length %d")
TRC_MSG(INFO_SUPC_WAPI_PSK_DUMP, "kv:")
TRC_MSG(INFO_SUPC_WAPI_GET_USER_CERT_FAIL, "WPA: Failed to get WAPI user certificate")
TRC_MSG(INFO_SUPC_WAPI_GET_AS_CERT_FAIL, "WPA: Failed to get WAPI as certificate")
TRC_MSG(INFO_SUPC_WAPI_GET_PRI_KEY_FAIL, "WPA: Failed to get WAPI private key")
TRC_MSG(INFO_SUPC_ASSOC_REQ_FAIL, "Association request to the driver failed")



// timer related trace
TRC_MSG(INFO_SUPC_REQ_SCAN_SETTING, "Setting scan request: %d sec %d usec")
TRC_MSG(INFO_SUPC_REQ_SCAN_TIMES, "now scan retry %d times")
TRC_MSG(INFO_SUPC_STOP_SCAN_TIMER, "supc_stop_scan_timer")
TRC_MSG(INFO_SUPC_START_SCAN_TIMER, "Start scan timer event id: %x")
TRC_MSG(INFO_SUPC_STOP_SCAN_EVENT_ID, "Stop scan event id: %x")
TRC_MSG(INFO_SUPC_STOP_AUTH_EVENT_ID, "Stop auth event id: %x")
TRC_MSG(INFO_SUPC_RESTART_AUTH_TIMER_WHEN_ASSOC,  "after assoc, restart auth timer")
TRC_MSG(INFO_SUPC_STOP_REPROT_MMI_TIMER,  "Stop report mmi event id: 0x%x")
TRC_MSG(INFO_SUPC_STOP_CONNTERMEASURE_TIMER,  "Stop countermeasure event id: %x")
TRC_MSG(INFO_SUPC_STOP_WAPI_AUTH_TIMER,  "Stop WAPI auth event id: %x")
TRC_MSG(INFO_SUPC_STOP_HANDOVER_TIMER,  "stop handover timer id=0x%x")
TRC_MSG(INFO_SUPC_STOP_PRE_AUTH_TIMER,  "Stop preauth event id: %x")
TRC_MSG(INFO_SUPC_STOP_PMKSA_CACHE_TIMER,  "Stop PMKSA cache timer, event id : %x")
TRC_MSG(INFO_SUPC_STOP_T_BLACKLIST_TIMER,  "Stop temporal blacklist event id: %x")
TRC_MSG(INFO_SUPC_STOP_P_BLACKLIST_TIMER,  "Stop permanent blacklist event id: %x")
TRC_MSG(INFO_SUPC_START_REPROT_MMI_TIMER,  "Start report mmi timer event id: %x after %d sec")
TRC_MSG(INFO_SUPC_REPROT_MMI_TIMER_OUT,    "supc_report_mmi_timer_expiry_handler")
TRC_MSG(INFO_SUPC_SCAN_TIMER_OUT,    "supc_wpa_scan_timer_expiry_handler")
TRC_MSG(INFO_SUPC_SCAN_TIMER_RETRY,   "supc_scan_timer_expire %d of %d,")
TRC_MSG(INFO_SUPC_AUTH_TIMER_OUT,    "supc_wpa_auth_timer_expiry_handler")
TRC_MSG(INFO_SUPC_AUTH_BSS_TIMEOUT,  "Authentication with %02x:%02x:%02x:%02x:%02x:%02x timed out.")
TRC_MSG(INFO_SUPC_CONNTERMEASURE_TIMER_OUT,  "WPA countermeasure timer expiry")
TRC_MSG(INFO_SUPC_CONNTERMEASURE_STOPED,   "TKIP countermeasures stopped")
TRC_MSG(INFO_SUPC_T_BLACKLIST_TIMER_OUT,  "Temporal blacklist is expired ")
TRC_MSG(INFO_SUPC_P_BLACKLIST_TIMER_OUT,  "Permanent blacklist is expired ")
TRC_MSG(INFO_SUPC_START_AUTH_EVENT_ID, "Start auth timer event id: %x, delay: %d sec")
TRC_MSG(INFO_SUPC_START_WAPI_AUTH_EVENT_ID, "Start WAPI auth timer event id: %x, delay: %d sec")
TRC_MSG(INFO_SUPC_PASS_WAPI_AUTH_TIMER, "pass start auth timer due to WAPI already deinit")
TRC_MSG(INFO_SUPC_START_PRE_AUTH_EVENT_ID, "Start preauth timer event id: %x, delay: %d sec")
TRC_MSG(INFO_SUPC_START_HANDOVER_EVENT_ID,  "Start handover timer event id: %x, delay: %d sec")
TRC_MSG(INFO_SUPC_START_COUNTERMEASURE_EVENT_ID, "Start wpa countermeasure timer event id: %x, delay: %d sec")
TRC_MSG(INFO_SUPC_START_PMKSA_CACHE_EVENT_ID, "Start pmksa cache timer event id: %x, delay: %d sec")
TRC_MSG(INFO_SUPC_START_T_BLACKLIST_EVENT_ID, "Start temporal blacklist timer event id: %x, delay: %d sec")
TRC_MSG(INFO_SUPC_START_P_BLACKLIST_EVENT_ID, "Start permanent blacklist timer event id: %x, delay: %d sec")
TRC_MSG(INFO_SUPC_PRE_AUTH_TIMER_OUT_WITH_BSS, "RSN: pre-authentication with %02x:%02x:%02x:%02x:%02x:%02x timed out")
TRC_MSG(INFO_SUPC_PMKSA_CACHE_TIMER_OUT, "RSN: expired PMKSA cache entry for %02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_SUPC_STOP_WPS_WALK_TIMER_EVENT,     "Stop wps_walk_timer event id: %x")
TRC_MSG(INFO_SUPC_START_WPS_WALK_TIMER_EVENT,     "Start wps_pin_walk timer event id: %x, delay: %d sec")
TRC_MSG(INFO_SUPC_STOP_REGISTRAR_PBC_TIMER_EVENT,     "Stop wps registrar pbc timer event id: %x")
TRC_MSG(INFO_SUPC_START_REGISTRAR_PBC_TIMER_EVENT,    "Start wps registrar pbc timer event id: %x, delay: %d sec")
TRC_MSG(INFO_SUPC_START_REGISTRAR_SELECT_TIMER_EVENT,    "Start wps registrar selected timer event id: %x, delay: %d sec")
TRC_MSG(INFO_SUPC_STOP_REGISTRAR_SELECT_TIMER_EVENT,    "Stop wps registrar selected timer event id: %x")
TRC_MSG(INFO_SUPC_SCAN_TIMER_INVALID_EVENT,    "Fatal Error! invalid scan monitor event_param")
TRC_MSG(INFO_SUPC_SCAN_TIMER_EXPIRY,    "scan monitor timer expiry")
TRC_MSG(INFO_SUPC_BSSID_IN_AUTH_TIMEOUT_LIST,  "BSSID  %02x:%02x:%02x:%02x:%02x:%02x is in auth timeout list of profile %d , Num=%d")
TRC_MSG(INFO_SUPC_BSSID_AL_IN_AUTH_TIMEOUT_LIST,  "BSSID  %02x:%02x:%02x:%02x:%02x:%02x is already in auth timeout list of profile %d, Num of timeout=%d")
TRC_MSG(INFO_SUPC_AUTH_TIMEOUT_LIST_FULL,    "Auth timeout list is full !Num = %d")
TRC_MSG(INFO_SUPC_ADD_IN_AUTH_TIMEOUT_LIST,  "Added BSSID %02x:%02x:%02x:%02x:%02x:%02x into auth timeout list of profile %d, Num of timeout = %d")
TRC_MSG(INFO_SUPC_REMOVE_AUTH_TIMEOUT_LIST,  "Removed BSSID %02x:%02x:%02x:%02x:%02x:%02x from auth timeout list of profile %d")
TRC_MSG(INFO_SUPC_REQ_AUTH_TIMEOUT,  "Setting authentication timeout: %d sec %d usec")
TRC_MSG(INFO_SUPC_CANCEL_AUTH_TIMER,  "Cancelling authentication timeout")


// key handshake related
TRC_MSG(INFO_SUPC_DUMP_PSK,                 "psk:")
TRC_MSG(INFO_SUPC_MIC_FAIL_DETECT,           "Michael MIC failure detected, pairwise=%d")
TRC_MSG(INFO_SUPC_DRV_SET_COUNTMEASURE,        "wpa_driver_mtk_set_countermeasures - handle by sta driver \n")
TRC_MSG(INFO_SUPC_DRV_SET_DROP_UNENCRYPTED,       "wpa_driver_set_drop_unencrypted - not yet implemented\n")
TRC_MSG(INFO_SUPC_RSN_REMOVE_PMKSA_ENTRY,       "RSN: removed current PMKSA entry")
TRC_MSG(INFO_SUPC_RSN_ADD_PMKSA_FOR_AA,  "RSN: added PMKSA cache entry for %02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_SUPC_RSN_REMOVE_OLDEST_PMKSA, "RSN: removed the oldest PMKSA cache entry (for %02x:%02x:%02x:%02x:%02x:%02x) to make room for new one")
TRC_MSG(INFO_SUPC_RSN_PMKID_DUMP,  "RSN: PMKID")
TRC_MSG(INFO_SUPC_RSN_PMKSA_DEL,  "pmksa_cache_del")
TRC_MSG(INFO_SUPC_WPA_DUMP_PMK,  "WPA: PMK")
TRC_MSG(INFO_SUPC_WPA_DUMP_PTK,  "WPA: PTK")
TRC_MSG(INFO_SUPC_FAIL_TO_READ_BSSID_FROM_EAPOL_KEY, "Failed to read BSSID for EAPOL-Key request")
TRC_MSG(INFO_SUPC_SEND_EAPOL_KEY_REQ, "WPA: Sending EAPOL-Key Request (error=%d pairwise=%d ptk_set=%d len=%d)")
TRC_MSG(INFO_SUPC_RX_1_4KEY_FROM, "WPA: RX message 1 of 4-Way Handshake from %02x:%02x:%02x:%02x:%02x:%02x  (ver=%d)")
TRC_MSG(INFO_SUPC_RX_1_4KEY_NOSSID_FOUND, "WPA: No SSID info found (msg 1 of 4).")
TRC_MSG(INFO_SUPC_RX_1_4KEY_DUMP, "RSN: msg 1/4 key data")
TRC_MSG(INFO_SUPC_RX_1_4KEY_UNDER_FLOW, "RSN: key data underflow (ie=%d len=%d)")
TRC_MSG(INFO_SUPC_RX_1_4KEY_DUMP_PMK, "RSN: PMKID from Authenticator")
TRC_MSG(INFO_SUPC_RX_1_4KEY_FAIL_GEN_KEY2, "WPA: Failed to generate WPA IE (for msg 2 of 4).")
TRC_MSG(INFO_SUPC_RX_1_4KEY_DUMP_KEY_MSG2, "WPA: WPA IE for msg 2/4")
TRC_MSG(INFO_SUPC_RX_1_4KEY_FAIL_GEN_SNONCE, "WPA: Failed to get random data for SNonce")
TRC_MSG(INFO_SUPC_RX_1_4KEY_DUMP_SNONCE, "WPA: Renewed SNonce")
TRC_MSG(INFO_SUPC_RX_1_4KEY_FIND_PMKID, "RSN: found matching PMKID from PMKSA cache")
TRC_MSG(INFO_SUPC_RX_1_4KEY_NO_PMKID, "RSN: no matching PMKID found")
TRC_MSG(INFO_SUPC_RX_1_4KEY_DUMP_MATCHED_PMKID, "RSN: matched PMKID")
TRC_MSG(INFO_SUPC_RX_1_4KEY_DUMP_PMK_FROM_CACHE, "RSN: PMK from PMKSA cache")
TRC_MSG(INFO_SUPC_RX_1_4KEY_DUMP_PMK_FROM_EAPOL, "WPA: PMK from EAPOL state machines")
TRC_MSG(INFO_SUPC_RX_1_4KEY_NEW_PMK_MATCH, "RSN: the new PMK matches with the PMKID")
TRC_MSG(INFO_SUPC_RX_1_4KEY_FAIL_GET_MSK,   "WPA: Failed to get master session key from EAPOL state machines")
TRC_MSG(INFO_SUPC_RX_1_4KEY_HANDSHAKE_ABORT,   "WPA: Key handshake aborted")
TRC_MSG(INFO_SUPC_RX_1_4KEY_CANCELL_PMKSA_ATTEMPT,   "RSN: Cancelled PMKSA caching attempt")
TRC_MSG(INFO_SUPC_RX_1_4KEY_NOPMKSA_TRIGGER_EAP,   "RSN: no PMKSA entry found - trigger full EAP authenication")
TRC_MSG(INFO_SUPC_RX_1_4KEY_DUMP_KEY_MIC,   "WPA: EAPOL-Key MIC")
TRC_MSG(INFO_SUPC_RX_1_4KEY_SEND_KEY2_MSG,   "WPA: Sending EAPOL-Key 2/4")
TRC_MSG(INFO_SUPC_KEY_NEG_DONE_CANCEL_HANDOVER_TIMER,   "Cancel handover timer after 4-way and 2-way complete!!")
TRC_MSG(INFO_SUPC_INSTALL_PTK2DRV,   "WPA: Installing PTK to the driver.")
TRC_MSG(INFO_SUPC_INSTALL_KEY_NONE,   "WPA: Pairwise Cipher Suite: NONE - do not use pairwise keys")
TRC_MSG(INFO_SUPC_UNSUPPORTED_P_CIPHER,   "WPA: Unsupported pairwise cipher %d")
TRC_MSG(INFO_SUPC_SET_PTK_FAIL,   "WPA: Failed to set PTK to the driver.")
TRC_MSG(INFO_SUPC_DUMP_RSC_WHEN_INSTALL_KEY,   "WPA: RSC")
TRC_MSG(INFO_SUPC_UNSUPPORTED_CCMP_LEN,   "WPA: Unsupported CCMP Group Cipher key length %d (%d).")
TRC_MSG(INFO_SUPC_UNSUPPORTED_TKIP_LEN,   "WPA: Unsupported TKIP Group Cipher key length %d (%d).")
TRC_MSG(INFO_SUPC_UNSUPPORTED_WEP104_LEN,   "WPA: Unsupported WEP104 Group Cipher key length %d (%d).")
TRC_MSG(INFO_SUPC_UNSUPPORTED_WEP40_LEN,   "WPA: Unsupported WEP40 Group Cipher key length %d (%d).")
TRC_MSG(INFO_SUPC_UNSUPPORTED_GROUP_CIPHER,   "WPA: Unsupport Group Cipher %d")
TRC_MSG(INFO_SUPC_INSTALL_GTK_DUMP_GTK,   "WPA: Group Key")
TRC_MSG(INFO_SUPC_INSTALL_GTK2DRV,   "WPA: Installing GTK to the driver (keyidx=%d tx=%d).")
TRC_MSG(INFO_SUPC_INSTALL_GTK2DRV_FAIL_GROUP_ONLY,   "WPA: Failed to set GTK to the driver (Group only).")
TRC_MSG(INFO_SUPC_INSTALL_GTK2DRV_FAIL,   "WPA: Failed to set GTK to the driver.")
TRC_MSG(INFO_SUPC_DUMP_GTK_WHEN_PAIRWISE,   "RSN: received GTK in pairwise handshake")
TRC_MSG(INFO_SUPC_DUMP_PAIRWISE_IGNORE_TX_BIT,   "RSN: Tx bit set for GTK IE, but pairwise keys are used - ignore Tx bit")
TRC_MSG(INFO_SUPC_DUMP_WPA_IE_MISMATCH_IN_KEY,   "WPA: WPA IE in Beacon/ProbeResp")
TRC_MSG(INFO_SUPC_NO_WPAIE_IN_BEACON_IN_KEY_FRAME,  "WPA: No WPA IE in Beacon/ProbeResp")
TRC_MSG(INFO_SUPC_DUMP_WPA_IE_IN3_4_MSG,   "WPA: WPA IE in 3/4 msg")
TRC_MSG(INFO_SUPC_DUMP_RSN_IE_BEACON_IN_KEY_FRAME,  "WPA: RSN IE in Beacon/ProbeResp")
TRC_MSG(INFO_SUPC_NO_RSNIE_IN_BEACON_IN_KEY_FRAME,  "WPA: No RSN IE in Beacon/ProbeResp")
TRC_MSG(INFO_SUPC_DUMP_RSN_IE_IN3_4_MSG,   "WPA: RSN IE in 3/4 msg")
TRC_MSG(INFO_SUPC_RX_3_4KEY_MSG,  "WPA: RX message 3 of 4-Way Handshake from %02x:%02x:%02x:%02x:%02x:%02x(ver=%d)")
TRC_MSG(INFO_SUPC_RX_3_4KEY_DUMP_KEY,  "WPA: IE KeyData")
TRC_MSG(INFO_SUPC_RX_3_4KEY_UNDERFLOW,  "WPA: key data underflow (ie=%d len=%d)")
TRC_MSG(INFO_SUPC_RX_3_4KEY_GTK_UNENCRYPTED,  "WPA: GTK IE in unencrypted key data")
TRC_MSG(INFO_SUPC_RX_3_4KEY_NULL_IE_UPDATE_SCAN,  "WPA: Found the current AP from updated scan results")
TRC_MSG(INFO_SUPC_RX_3_4KEY_ANONCE_ERROR,  "WPA: ANonce from message 1 of 4-Way Handshake differs from 3 of 4-Way Handshake - drop packet (src=%02x:%02x:%02x:%02x:%02x:%02x)")
TRC_MSG(INFO_SUPC_RX_3_4KEY_INVALID_CCMP_LEN,  "WPA: Invalid CCMP key length %d (src=%02x:%02x:%02x:%02x:%02x:%02x)")
TRC_MSG(INFO_SUPC_RX_3_4KEY_INVALID_TKIP_LEN,  "WPA: Invalid TKIP key length %d (src=%02x:%02x:%02x:%02x:%02x:%02x)")
TRC_MSG(INFO_SUPC_TX_4_4KEY,  "WPA: Sending EAPOL-Key 4/4")
TRC_MSG(INFO_SUPC_RX_1_2KEY,   "WPA: RX message 1 of Group Key Handshake from %02x:%02x:%02x:%02x:%02x:%02x (ver=%d)")
TRC_MSG(INFO_SUPC_RX_1_2KEY_UNDERFLOW,  "RSN: key data underflow (ie=%d len=%d)")
TRC_MSG(INFO_SUPC_RX_1_2KEY_GTK_UNENCRYPTED,  "WPA: GTK IE in unencrypted key data")
TRC_MSG(INFO_SUPC_RX_1_2KEY_NO_GTK_IE, "WPA: No GTK IE in Group Key message 1/2")
TRC_MSG(INFO_SUPC_RX_1_2KEY_TRUNCATED_KEY, "WPA: Truncated EAPOL-Key packet: key_data_length=%d > extra_len=%d")
TRC_MSG(INFO_SUPC_RX_1_2KEY_DUMP_GTK, "RSN: received GTK in group key handshake")
TRC_MSG(INFO_SUPC_RX_1_2KEY_GTK_TOO_LONG, "RSN: Too long GTK in GTK IE (len=%d)")
TRC_MSG(INFO_SUPC_RX_1_2KEY_UNSUPPORT_AES, "RSN: Too long GTK in GTK IE (len=%d)")
TRC_MSG(INFO_SUPC_RX_1_2KEY_AES_DECRYPT_FAIL, "WPA: AES unwrap failed - could not decrypt GTK")
TRC_MSG(INFO_SUPC_RX_1_2KEY_GTK_IGNORE_TX_BIT, "WPA: Tx bit set for GTK, but pairwise keys are used - ignore Tx bit")
TRC_MSG(INFO_SUPC_TX_2_2KEY,  "WPA: Sending EAPOL-Key 2/2")
TRC_MSG(INFO_SUPC_GROUP_KEY_HANDSHAKE_DONE,  "WPA: Group rekeying completed with %02x:%02x:%02x:%02x:%02x:%02x ")
TRC_MSG(INFO_SUPC_INVALID_KEY_MIC,  "WPA: Invalid EAPOL-Key MIC when using TPTK - ignoring TPTK")
TRC_MSG(INFO_SUPC_INVALID_KEY_MIC_DROP_PACKET,  "WPA: Invalid EAPOL-Key MIC - dropping packet")
TRC_MSG(INFO_SUPC_CAN_NOT_VERY_KEY_MIC_DROP_PACKET,  "WPA: Could not verify EAPOL-Key MIC - dropping packet")
TRC_MSG(INFO_SUPC_DUMP_ENCRY_KEY_DATA,  "RSN: encrypted key data")
TRC_MSG(INFO_SUPC_CAN_NOT_DECRY_KEY_DATA,  "WPA: PTK not available, cannot decrypt EAPOL-Key key data.")
TRC_MSG(INFO_SUPC_UNSUPPORTED_AES_WRAP_LEN,  "WPA: Unsupported AES-WRAP len %d")
TRC_MSG(INFO_SUPC_NO_MEM_FOR_AES,   "WPA: No memory for AES-UNWRAP buffer")
TRC_MSG(INFO_SUPC_AES_UNWRAP_FAIL,   "WPA: AES unwrap failed - could not decrypt EAPOL-Key key data")
TRC_MSG(INFO_SUPC_DUMP_DECRY_KEY_DATA,  "WPA: decrypted EAPOL-Key key data")
TRC_MSG(INFO_SUPC_EAPOL_TOO_SHORT,  "WPA: EAPOL frame too short, len %d, expecting at least %d")
TRC_MSG(INFO_SUPC_EAPOL_VER_INFO,  "IEEE 802.1X RX: version=%d type=%d length=%d")
TRC_MSG(INFO_SUPC_EAPOL_DISCARD_NONE_KEY_FRAME,  "WPA: EAPOL frame (type %d) discarded, not a Key frame")
TRC_MSG(INFO_SUPC_CANCEL_PMKSA_CACHE_ATTEMPT,  "WPA: Cancelling PMKSA caching attempt - attempt full EAP authentication")
TRC_MSG(INFO_SUPC_EAPOL_PAYLOAD_INVALID,  "WPA: EAPOL frame payload size %d invalid (frame size %d)")
TRC_MSG(INFO_SUPC_EAPOL_KEY_TPYE,  "  EAPOL-Key type=%d")
TRC_MSG(INFO_SUPC_EAPOL_KEY_TPYE_UNKNOWN,  "WPA: EAPOL-Key type (%d) unknown, discarded")
TRC_MSG(INFO_SUPC_EAPOL_IGNORE_BYTES,  "WPA: ignoring %u bytes after the IEEE 802.1X data")
TRC_MSG(INFO_SUPC_UNSUPPORTED_KEY_DESCRIPTOR,  "WPA: Unsupported EAPOL-Key descriptor version %d.")
TRC_MSG(INFO_SUPC_CCMP_KEY_DES_NOT_MATCH,  "WPA: CCMP is used, but EAPOL-Key descriptor version (%d) is not 2.")
TRC_MSG(INFO_SUPC_NONE_CCMP_ALLOW_INVALID_VERSION,  "WPA: Backwards compatibility: allow invalid version for non-CCMP group keys")
TRC_MSG(INFO_SUPC_KEY_REPLAY_COUNTER_WRONG,  "WPA: EAPOL-Key Replay Counter did not increase - dropping packet")
TRC_MSG(INFO_SUPC_NO_ACK_BIT_IN_KEY,  "WPA: No Ack bit in key_info")
TRC_MSG(INFO_SUPC_KEY_WITH_REQ_BIT_DROP,   "WPA: EAPOL-Key with Request bit - dropped")
TRC_MSG(INFO_SUPC_KEY_DATA_OVERFLOW,   "WPA: Invalid EAPOL-Key frame - key_data overflow (%d > %d)")
TRC_MSG(INFO_SUPC_IGNORE_KEY_WITH_NONE_ZERO_INDEX,   "WPA: Ignored EAPOL-Key (Pairwise) with non-zero key index")
TRC_MSG(INFO_SUPC_DROP_GROUP_WITHOUT_MIC,   "WPA: EAPOL-Key (Group) without Mic bit - dropped")





//eapol sm related trace
TRC_MSG(INFO_SUPC_IGNORE_EAPOL_FRAME_WRONG_SM, "Ignore this eapol frame because the eapol state machine is deinit")
TRC_MSG(INFO_SUPC_IGNORE_PRE_AUTH_FRAME_WRONG_SM, "Ignore this pre-auth frame because the pre-auth state machine is deinit")
TRC_MSG(INFO_SUPC_NOTIFY_EAPOL_FAIL_WHEN_CONN, "notify eapol EAP-FAIL")
TRC_MSG(INFO_SUPC_CLEAN_EAPOL_CONTEXT,   "clean wpa context in eapol and eap in WPS disconn")
TRC_MSG(INFO_SUPC_RX_EAPOL_FROM, "RX EAPOL from %02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_SUPC_RX_EAPOL_LEN, "RX frame len=%d")
TRC_MSG(INFO_SUPC_RX_EAPOL_DUMP,   "RX EAPOL snip")
TRC_MSG(INFO_SUPC_IGNORE_EAPOL_DEINIT,   "Ignore this EAPOL because state machine is deinit")
TRC_MSG(INFO_SUPC_IGNORE_EAPOL_WRONG_STA,   "Ignore this EAPOL because in wrong state = %d")
TRC_MSG(INFO_SUPC_IGNORE_EAPOL_OPEN_MODE,   "ignore received EAPOL frame, wps_s->key_megmt is open mode")
TRC_MSG(INFO_SUPC_IGNORE_EAPOL_COUNTMEASURES,   "WPA: Countermeasures - dropped EAPOL packet")
TRC_MSG(INFO_SUPC_DUMP_DEBUG1,   "in supc lib, wpa_s=%x eapol: %x")
TRC_MSG(INFO_SUPC_DUMP_DEBUG2,   "in supc lib, sizeof wpa_s: %d")
TRC_MSG(INFO_SUPC_DUMP_DEBUG3,   "offset drv_priv: %d")
TRC_MSG(INFO_SUPC_DUMP_DEBUG4,   "offset eapol: %d")
TRC_MSG(INFO_SUPC_RX_PRE_AUTH_FROM, "RX pre-auth from %02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_SUPC_DUMP_PRE_AUTH, "RX pre-auth")
TRC_MSG(INFO_SUPC_DROP_PRE_AUTH_UNKNOWN_SOURCE, "RSN pre-auth frame received from unexpected source %02x:%02x:%02x:%02x:%02x:%02x - dropped")
TRC_MSG(INFO_SUPC_PRE_AUTH_RESULT, "RSN: pre-authentication with %02x:%02x:%02x:%02x:%02x:%02x,Result=%d ")
TRC_MSG(INFO_SUPC_GET_MSK_FAIL_IN_PRE_AUTH_SM, "RSN: failed to get master session key from pre-auth EAPOL state machines")
TRC_MSG(INFO_SUPC_DUMP_PMK_IN_PRE_AUTH, "RSN: PMK from pre-auth")
TRC_MSG(INFO_SUPC_START_PRE_AUTH_WITH, "RSN: starting pre-authentication with %02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_SUPC_INIT_PRE_AUTH_FAIL, "RSN: Failed to initialize L2 packet processing for pre-authentication")
TRC_MSG(INFO_SUPC_INIT_PRE_AUTH_CONTEX_FAIL, "Failed to allocate EAPOL context.")
TRC_MSG(INFO_SUPC_INIT_PRE_AUTH_SM_FAIL, "RSN: Failed to initialize EAPOL state machines for pre-authentication")
TRC_MSG(INFO_SUPC_PRO_CAND_LIST, "RSN: processing PMKSA candidate list")
TRC_MSG(INFO_SUPC_NO_SUIT_SM_FOR_PRE_AUTH, "RSN: not in suitable state for new pre-authentication")
TRC_MSG(INFO_SUPC_PMKSA_SEL_FOR_PRE_AUTH, "RSN: PMKSA candidate %02x:%02x:%02x:%02x:%02x:%02x selected for pre-authentication")
TRC_MSG(INFO_SUPC_NO_NEED_PRE_AUTH, "RSN: PMKSA candidate %02x:%02x:%02x:%02x:%02x:%02x does not need pre-authentication anymore")
TRC_MSG(INFO_SUPC_NO_PENDING_PMKSA_CAND, "RSN: no more pending PMKSA candidates")
TRC_MSG(INFO_SUPC_ADDED_PMKSA_CACHE, "RSN: added PMKSA cache candidate %02x:%02x:%02x:%02x:%02x:%02x prio %d")
TRC_MSG(INFO_SUPC_DROP_TX_EAPOL, "WPA: drop TX EAPOL in non-IEEE 802.1X mode (type=%d len=%d)")
TRC_MSG(INFO_SUPC_DROP_TX_EAPOL_START_REC, "RSN: PMKSA caching and have recieved frames- do not send EAPOL-Start")
TRC_MSG(INFO_SUPC_DROP_TX_EAPOL_BSSID_NOT_SET, "BSSID not set when trying to send an EAPOL frame")
TRC_MSG(INFO_SUPC_SET_PREV_BSSID, "set supplicant prev_Bssid %02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_SUPC_EAPOL_COMPLETE,    "WPA: EAPOL processing complete")
TRC_MSG(INFO_SUPC_PMKID_FOUND_RESULT,  "RSN: PMKID from assoc IE found from PMKSA cache,result:%x")
TRC_MSG(INFO_SUPC_EAPOL_STOP_PORT_TIMER,  "Stop port timer event id: 0x%x")
TRC_MSG(INFO_SUPC_EAPOL_START_PORT_TIMER,  "Start port timer event id: 0x%x")
TRC_MSG(INFO_SUPC_EAPOL_SKIP_TX_START,  "skip a EAPOL Start, wait next time")
TRC_MSG(INFO_SUPC_EAPOL_TX_START_ERROR,  "EAPOL: Error occurs when trying to send EAPOL-start")
TRC_MSG(INFO_SUPC_EAPOL_NO_KEY_REQUIRED,  "EAPOL: IEEE 802.1X for plaintext connection; no EAPOL-Key frames required")
TRC_MSG(INFO_SUPC_EAPOL_PRE_AUTH_PORT_VALID, "Pre-auth: Internal notification - ortValid=TRUE")
TRC_MSG(INFO_SUPC_EAPOL_BE_RESP_NO_RESP_SET, "EAPOL: SUPP_BE REQUEST: both eapResp and eapNoResp set?!")
TRC_MSG(INFO_SUPC_EAPOL_PORT_TIMER_TICK, "EAPOL: Port Timers tick - authWhile=%d heldWhile=%d startWhen=%d idleWhile=%d")
TRC_MSG(INFO_SUPC_EAPOL_TX_LOGOFF, "EAPOL: txLogoff")
TRC_MSG(INFO_SUPC_EAPOL_TX_START, "EAPOL: txStart")
TRC_MSG(INFO_SUPC_EAPOL_PROCESS_KEY, "EAPOL: processKey")
TRC_MSG(INFO_SUPC_EAPOL_RECEIVE_KEY_IGNOR, "EAPOL: Received IEEE 802.1X EAPOL-Key even though this was not accepted - ignoring this packet")
TRC_MSG(INFO_SUPC_EAPOL_TOO_SHORT_KEY, "EAPOL: Too short EAPOL-Key frame")
TRC_MSG(INFO_SUPC_EAPOL_KEY_INFO_DUMP,  "EAPOL: RX IEEE 802.1X ver=%d type=%d len=%d EAPOL-Key: type=%d key_length=%d key_index=0x%x")
TRC_MSG(INFO_SUPC_EAPOL_CAN_NOT_GET_MSK_FROM_KEY_FRAME, "EAPOL: Could not get master key for decrypting EAPOL-Key keys")
TRC_MSG(INFO_SUPC_EAPOL_CAN_NOT_GET_LEAP_MSK, "EAPOL: Could not get LEAP master key for decrypting EAPOL-Key keys")
TRC_MSG(INFO_SUPC_EAPOL_CAN_NOT_GET_MSK_KEY_DATA, "EAPOL: Could not get enough master key data for decrypting EAPOL-Key keys (res=%d)")
TRC_MSG(INFO_SUPC_EAPOL_KEY_IGNORE_WRONG_REPLAY_COUNTER, "EAPOL: EAPOL-Key replay counter did not increase - ignoring key")
TRC_MSG(INFO_SUPC_EAPOL_KEY_INVALID_SIGNATURE, "EAPOL: Invalid key signature in EAPOL-Key packet")
TRC_MSG(INFO_SUPC_EAPOL_KEY_SIGNATURE_VERIFIED, "EAPOL: EAPOL-Key key signature verified")
TRC_MSG(INFO_SUPC_EAPOL_KEY_DATA_TOO_LONG,  "EAPOL: Too long key data length %d")
TRC_MSG(INFO_SUPC_EAPOL_INVALID_LEN,  "EAPOL: Invalid key data length %d (key_length=%d)")
TRC_MSG(INFO_SUPC_EAPOL_SET_DYNAMIC_WEP_KEY,  "EAPOL: Setting dynamic WEP key: keyidx %d len %d,uni_key:%d")
TRC_MSG(INFO_SUPC_EAPOL_SET_WEP2DRV_FAIL, "EAPOL: Failed to set WEP key to the driver.")
TRC_MSG(INFO_SUPC_EAPOL_ALL_KEY_RECEIVED, "EAPOL: all required EAPOL-Key frames received")
TRC_MSG(INFO_SUPC_EAPOL_TX_SUPPRSP, "EAPOL: txSuppRsp")
TRC_MSG(INFO_SUPC_EAPOL_TX_SUPPRSP_NO_RSP_DATA, "EAPOL: txSuppRsp - EAP response data not available")
TRC_MSG(INFO_SUPC_EAPOL_WPS_CTX_INFO, "in eap, set ctx->wps=%x, wpa_s->wps=%x")
TRC_MSG(INFO_SUPC_EAPOL_WPS_CTX_NULL, "in eap, set sm->eap->wps = NULL")
TRC_MSG(INFO_SUPC_RX_EAPOL_WAP_CTX_INFO, "in eap.lib, wpa_s: %x eapol: %x, but sm: %x")
TRC_MSG(INFO_SUPC_RX_EAPOL_SIZE_OF_SUPC_STRUCT, "in eap lib, sizeof wpa_s: %d ")
TRC_MSG(INFO_SUPC_RX_EAPOL_OFFSET_OF_DRV_PRIV, "offset drv_priv: %d")
TRC_MSG(INFO_SUPC_RX_EAPOL_OFFSET_OF_EAPOL, "offset eapol: %d")
TRC_MSG(INFO_SUPC_RX_EAPOL_AC_CANCEL_PMKSA_ATTEMP, "RSN: Authenticator did not accept PMKID, cancelled PMKSA caching attempt")
TRC_MSG(INFO_SUPC_RX_EAPOL_RX_EAP, "EAPOL: Received EAP-Packet frame")
TRC_MSG(INFO_SUPC_RX_EAPOL_HANDLE_OTHER_CASE, "after eapol_sm process, handle other cases.")
TRC_MSG(INFO_SUPC_WPS_IGNORE_EAP_FAIL, "wps_eapol_cb handle it or wsc done, ignore EAP_Fail handler")
TRC_MSG(INFO_SUPC_RX_EAPOL_IGNORE_WPA_KEY, "EAPOL: Ignoring WPA EAPOL-Key frame in EAPOL state machines")
TRC_MSG(INFO_SUPC_RX_EAPOL_IGNORE_UNKNOWN_KEY, "EAPOL: Ignored unknown EAPOL-Key type %d")
TRC_MSG(INFO_SUPC_RX_EAPOL_KEY_TOO_SHORT, "EAPOL: Too short EAPOL-Key frame received")
TRC_MSG(INFO_SUPC_RX_EAPOL_KEY_FRAME, "EAPOL: Received EAPOL-Key frame")
TRC_MSG(INFO_SUPC_RX_EAPOL_UNKNOWN, "EAPOL: Received unknown EAPOL type %d")
TRC_MSG(INFO_SUPC_NOTIFY_PORT_ENABLE, "EAPOL: External notification - portEnabled=%d")
TRC_MSG(INFO_SUPC_NOTIFY_PORT_VALID, "EAPOL: External notification - portValid=%d")
TRC_MSG(INFO_SUPC_NOTIFY_EAP_SUCCESS,  "EAPOL: External notification - EAP success=%d")
TRC_MSG(INFO_SUPC_NOTIFY_EAP_FAIL,  "EAPOL: External notification - EAP fail=%d")
TRC_MSG(INFO_SUPC_NOTIFY_PMKID_ATTEMPT, "RSN: Trying to use cached PMKSA")
TRC_MSG(INFO_SUPC_NOTIFY_NO_PMKID_ATTEMPT, "RSN: Do not try to use cached PMKSA")
TRC_MSG(INFO_SUPC_AC_NOT_ACCEPT_PMKID, "RSN: Authenticator did not accept PMKID, doing full EAP authentication")
TRC_MSG(INFO_SUPC_EAPOL_NOTIFY_PORTCONTROL, "EAPOL: External notification - portControl")
















// eap sm related trace

TRC_MSG(INFO_SUPC_EAP_FAIL_CAUSE,    "eap fail cause : %d")
TRC_MSG(INFO_SUPC_EAP_OUTER_PEAP,    "Get Outer : EAP_TYPE_PEAP")
TRC_MSG(INFO_SUPC_EAP_OUTER_TTLS,    "Get Outer : EAP_TYPE_TTLS")
TRC_MSG(INFO_SUPC_EAP_OUTER_TLS,    "Get Outer : EAP_TYPE_TLS")
TRC_MSG(INFO_SUPC_EAP_OUTER_SIM,    "Get Outer : EAP_TYPE_SIM")
TRC_MSG(INFO_SUPC_EAP_OUTER_AKA,    "Get Outer : WLAN_EAP_AKA")
TRC_MSG(INFO_SUPC_EAP_INNER_MSCHAPV2,    "Get Inner : EAP_TYPE_MSCHAPV2")
TRC_MSG(INFO_SUPC_EAP_INNER_MD5,    "Get Inner : SUPC_PHASE2_EAP_MD5")
TRC_MSG(INFO_SUPC_EAP_INNER_GTC,    "Get Inner : SUPC_PHASE2_EAP_GTC")
TRC_MSG(INFO_SUPC_EAP_INNER_TTLS,   "Get Inner : EAP_TYPE_TTLS")
TRC_MSG(INFO_SUPC_EAP_INNER_PEAP,   "Get Inner : SUPC_PHASE2_EAP_PEAP")
TRC_MSG(INFO_SUPC_EAP_INNER_SIM,   "Get Inner : SUPC_PHASE2_EAP_SIM")
TRC_MSG(INFO_SUPC_EAP_INNER_AKA,   "Get Inner : SUPC_PHASE2_EAP_AKA")
TRC_MSG(INFO_SUPC_EAP_INNER_FAST,   "Get Inner : EAP_TYPE_FAST")
TRC_MSG(INFO_SUPC_EAP_DEINIT_PRE_METHOD,  "EAP: deinitialize previously used EAP method ")
TRC_MSG(INFO_SUPC_EAP_HAVE_FAST_REAUTH_DATA,  "EAP: maintaining EAP method data for fast reauthentication")
TRC_MSG(INFO_SUPC_EAP_USE_PRE_DATA_FAST_REAUTH,  "EAP: using previous method data for fast re-authentication")
TRC_MSG(INFO_SUPC_EAP_INIT_SELECTED_METHOD,  "EAP: initialize selected EAP ")
TRC_MSG(INFO_SUPC_EAP_LAST_METHOD,  "wpa_s->last_eap_method (%d)")
TRC_MSG(INFO_SUPC_EAP_INIT_METHOD_FAIL,  "EAP: Failed to initialize EAP method %d")
TRC_MSG(INFO_SUPC_EAP_METHOD_NOT_SELECTED,  "EAP::METHOD - method not selected")
TRC_MSG(INFO_SUPC_EAP_PREV_STA,  "previouse EAP_state : %d")
TRC_MSG(INFO_SUPC_EAP_METHOD_SEL_REQ,  "selectedMethod : %d reqMethod : %d")
TRC_MSG(INFO_SUPC_EAP_PHASE1_FAIL_CAUSE,  "eap_fail_cause : (Phase1) SUPC_ABM_UNSUPPORTED_EAP_TYPE")
TRC_MSG(INFO_SUPC_EAP_PHASE2_FAIL_CAUSE,  "eap_fail_cause : (Phase2) SUPC_ABM_UNSUPPORTED_EAP_TYPE")
TRC_MSG(INFO_SUPC_EAP_FAIL_WRONG_USER,  "eap_fail_cause : SUPC_ABM_WRONG_USER_INFO")
TRC_MSG(INFO_SUPC_EAP_FAIL_CAUSE_UPDATE,  "eap_fail_cause : %d already updated.")
TRC_MSG(INFO_SUPC_EAP_SUCCESS_WA_ID,  "EAP: Workaround for unexpected identifier field in EAP Success: reqId=%d lastId=%d (these are supposed to be same)")
TRC_MSG(INFO_SUPC_EAP_AUTH_ROUNDS_TOO_MUCH,  "EAP: more than %d authentication rounds - abort")
TRC_MSG(INFO_SUPC_EAP_SM_DUMP,  "sm->methodState=%d, sm->rxFailure=%d, sm->decision=%d, sm->rxSuccess=%d, sm->decision=%d, sm->reqId=%d, sm->lastId=%d")
TRC_MSG(INFO_SUPC_EAP_AS_USE_SAME_IDENTIFIER,  "EAP: AS used the same Id again, but EAP packets were not identical")
TRC_MSG(INFO_SUPC_EAP_SAME_IDENTIFIER_WA,  "EAP: workaround - assume this is not a duplicate packet")
TRC_MSG(INFO_SUPC_EAP_BUILD_NAK,  "EAP: Building EAP-Nak (requested type %d not allowed)")
TRC_MSG(INFO_SUPC_EAP_BUILD_ID_NO_CONFIG,  "EAP: buildIdentity: configuration was not available")
TRC_MSG(INFO_SUPC_EAP_BUILD_ID_NO_ID_IN_CONFIG,  "EAP: buildIdentity: identity configuration was not available")
TRC_MSG(INFO_SUPC_EAP_BUILD_NOTIFY,  "EAP: Generating EAP-Response Notification")
TRC_MSG(INFO_SUPC_EAP_IGNORE_TRUNCATED_PACKET,  "EAP: Ignored truncated EAP-Packet (len=%u plen=%u)")
TRC_MSG(INFO_SUPC_EAP_IGNORE_TRUNCATED_EXPANDED_PACKET,  "EAP: Ignored truncated expanded EAP-Packet (plen=%u)")
TRC_MSG(INFO_SUPC_EAP_RECV_REQ,  "EAP: Received EAP-Request id=%d method=%u vendor=%u vendorMethod=%u")
TRC_MSG(INFO_SUPC_EAP_RECV_LEAP_RSP,  "EAP: Received EAP-Response for LEAP method=%d id=%d")
TRC_MSG(INFO_SUPC_EAP_IGNORE_EAP_RSP,  "EAP: Ignored EAP-Response")
TRC_MSG(INFO_SUPC_EAP_RECV_SUCCESS,  "EAP: Received EAP-Success")
TRC_MSG(INFO_SUPC_EAP_PARSE_EAPREQ,  "eap_sm_parseEapReq : reqMethod %d")
TRC_MSG(INFO_SUPC_EAP_FAIL_CAUSE_WRONG_USER_INFO,  "EAP_CODE_FAILURE : Eeap_fail_cause : SUPC_ABM_WRONG_USER_INFO")
TRC_MSG(INFO_SUPC_EAP_FAIL_CAUSE_UNSUPPORTED_EAP,  "EAP_CODE_FAILURE : eap_fail_cause : SUPC_ABM_UNSUPPORTED_EAP_TYPE")
TRC_MSG(INFO_SUPC_EAP_RECV_FAILURE,  "EAP: Received EAP-Failure")
TRC_MSG(INFO_SUPC_EAP_IGNORE_UNKNOWN_CODE,  "EAP: Ignored EAP-Packet with unknown code %d")
TRC_MSG(INFO_SUPC_EAP_INIT_TLS_CTX_FAIL,  "SSL: Failed to initialize TLS context.")
TRC_MSG(INFO_SUPC_EAP_CREATE_SSL_CTX_FAIL,  "supc fail to create ssl ctx")



//eap method related
// 1) eap aka
TRC_MSG(INFO_EAP_AKA_UMTS_AUTH,  "EAP-AKA: UMTS authentication algorithm")
TRC_MSG(INFO_EAP_AKA_USE_MILENAGE_SIMULATION,  "EAP-AKA: Use internal Milenage implementation for UMTS authentication")
TRC_MSG(INFO_EAP_AKA_INVALID_MILENAGE_PW,      "EAP-AKA: invalid Milenage password")
TRC_MSG(INFO_EAP_AKA_NO_MEM_FOR_PSEU_ID, "EAP-AKA: (encr) No memory for next pseudonym")
TRC_MSG(INFO_EAP_AKA_NO_MEM_FOR_REAUTH_ID,        "EAP-AKA: (encr) No memory for next reauth_id")
TRC_MSG(INFO_EAP_AKA_GEN_REJECT,        "Generating EAP-AKA Authentication-Reject (id=%d)")
TRC_MSG(INFO_EAP_AKA_GEN_SYNC_FAIL,         "Generating EAP-AKA Synchronization-Failure (id=%d)")
TRC_MSG(INFO_EAP_AKA_ATTR_AUTS,        "   AT_AUTS")
TRC_MSG(INFO_EAP_AKA_GEN_IDNETITY,          "Generating EAP-AKA Identity (id=%d)")
TRC_MSG(INFO_EAP_AKA_GEN_CHALLENGE,         "Generating EAP-AKA Challenge (id=%d)")
TRC_MSG(INFO_EAP_AKA_ATTR_RES,        "   AT_RES")
TRC_MSG(INFO_EAP_AKA_ATTR_MAC,        "   AT_MAC")
TRC_MSG(INFO_EAP_AKA_GEN_REAUTH,        "Generating EAP-AKA Reauthentication (id=%d)")
TRC_MSG(INFO_EAP_AKA_ATTR_IV,        "   AT_IV")
TRC_MSG(INFO_EAP_AKA_ATTR_ENCR_DATA,       "   AT_ENCR_DATA")
TRC_MSG(INFO_EAP_AKA_ATTR_COUNTER_TOO_SMALL,        "   *AT_COUNTER_TOO_SMALL")
TRC_MSG(INFO_EAP_AKA_AT_COUNTER, "   *AT_COUNTER %d")
TRC_MSG(INFO_EAP_AKA_FAIL_ENCRYPT_ENC_AT_DATA,      "EAP-AKA: Failed to encrypt AT_ENCR_DATA")
TRC_MSG(INFO_EAP_AKA_GEN_NOTIFICATION, "Generating EAP-AKA Notification (id=%d)")
TRC_MSG(INFO_EAP_AKA_ATTR_NOTIFICATION      , "   AT_NOTIFICATION")
TRC_MSG(INFO_EAP_AKA_SUBTYPE_IDENTITY,   "EAP-AKA: subtype Identity")
TRC_MSG(INFO_EAP_AKA_TOO_MANY_ID_REQ,    "EAP-AKA: Too many ID requests used within one authentication")
TRC_MSG(INFO_EAP_AKA_SUBTYPE_CHALLENGE,  "EAP-AKA: subtype Challenge")
TRC_MSG(INFO_EAP_AKA_AUTH_FAILED_AUTN,  "EAP-AKA: UMTS authentication failed (AUTN)")
TRC_MSG(INFO_EAP_AKA_AUTH_FAILED_AUTN_SEQ,      "EAP-AKA: UMTS authentication failed (AUTN seq# -> AUTS)")
TRC_MSG(INFO_EAP_AKA_AUTH_FAILED,      "EAP-AKA: UMTS authentication failed")
TRC_MSG(INFO_EAP_AKA_CHALLENGE_INVALID_MAC,      "EAP-AKA: Challenge message used invalid AT_MAC")
TRC_MSG(INFO_EAP_AKA_NOTY_NOT_INCLUDE_ENCR_DATA,      "EAP-AKA: Notification message after reauth did not include encrypted data")
TRC_MSG(INFO_EAP_AKA_FAIL_PARSE_ENCR_DATA_FROM_NOTIFICATION, "EAP-AKA: Failed to parse encrypted data from notification message")
TRC_MSG(INFO_EAP_AKA_COUNT_NOT_MATCH_IN_NOTIFICATION, "EAP-AKA: Counter in notification message does not match with counter in reauth message")
TRC_MSG(INFO_EAP_AKA_NO_MAC_IN_AUTH_NOTI, "EAP-AKA: no AT_MAC in after_auth Notification message")
TRC_MSG(INFO_EAP_AKA_INVALID_MAC_IN_AUTH_NOTI,    "EAP-AKA: Notification message used invalid AT_MAC")
TRC_MSG(INFO_EAP_AKA_INVALID_NOFITICATION_AFTER_REAUTH,    "EAP-AKA: Invalid notification message after reauth")
TRC_MSG(INFO_EAP_AKA_SUBTYPE_NOTIFICATION,    "EAP-AKA: subtype Notification")
TRC_MSG(INFO_EAP_AKA_TOO_MANY_NOTIFICATION_ROUNDS,    "EAP-AKA: too many notification rounds (only one allowed)")
TRC_MSG(INFO_EAP_AKA_NO_AT_NOTIFICIATION,    "EAP-AKA: no AT_NOTIFICATION in Notification message")
TRC_MSG(INFO_EAP_AKA_SUBTYPE_REAUTHENTICATION,    "EAP-AKA: subtype Reauthentication")
TRC_MSG(INFO_EAP_AKA_NO_REAUTH_ID_AVAILABLE,    "EAP-AKA: Server is trying reauthentication, but no reauth_id available")
TRC_MSG(INFO_EAP_AKA_INVALID_MAC_IN_FAST_REAUTH,    "EAP-AKA: Reauthentication did not have valid AT_MAC")
TRC_MSG(INFO_EAP_AKA_NO_ENCR_DATA_IN_FAST_REAUTH,    "EAP-AKA: Reauthentication message did not include encrypted data")
TRC_MSG(INFO_EAP_AKA_FAIL_PARSE_ENCR_IN_FAST_REAUTH,    "EAP-AKA: Failed to parse encrypted data from reauthentication message")
TRC_MSG(INFO_EAP_AKA_INVALID_COUNTER_IN_FAST_REAUTH,    "EAP-AKA: (encr) Invalid counter (%d <= %d)")
TRC_MSG(INFO_EAP_AKA_MAXIMUM_FAST_REAUTH_NUM,    "EAP-AKA: Maximum number of fast reauths performed - force fullauth")
TRC_MSG(INFO_EAP_AKA_ID_NOT_CONFIG,    "EAP-AKA: Identity not configured")
TRC_MSG(INFO_EAP_AKA_INVALID_FRAME,    "EAP-AKA: Invalid frame")
TRC_MSG(INFO_EAP_AKA_SUB_TYPE,    "EAP-AKA: Subtype=%d")
TRC_MSG(INFO_EAP_AKA_SUB_TYPE_CLIENT_ERROR,    "EAP-AKA: subtype Client-Error")
TRC_MSG(INFO_EAP_AKA_UNKOWN_SUBTYPE,    "EAP-AKA: Unknown subtype=%d")
TRC_MSG(INFO_EAP_AKA_MILENAGE_MAC_MISMATCH,   "Milenage: MAC mismatch")
// 2) EAP-SIM

TRC_MSG(INFO_EAP_SIM_FAIL_GET_RAND,    "EAP-SIM: Failed to get random data for NONCE_MT")
TRC_MSG(INFO_EAP_SIM_GSM_AUTH_ALG,    "EAP-SIM: GSM authentication algorithm")
TRC_MSG(INFO_EAP_SIM_AUTH_USE_MILENAGE,    "EAP-SIM: Use internal GSM-Milenage implementation for authentication")
TRC_MSG(INFO_EAP_SIM_INVALID_MILENAGE_PW,    "EAP-SIM: invalid GSM-Milenage password")
TRC_MSG(INFO_EAP_SIM_MILENAGE_CAN_NOT_COMPLETE,    "EAP-SIM: GSM-Milenage authentication could not be completed")
TRC_MSG(INFO_EAP_SIM_AUTH_CAN_NOT_COMPLETE_1ST,    "[EAP-SIM] GSM SIM authentication couldn't be completed 1st")
TRC_MSG(INFO_EAP_SIM_AUTH_CAN_NOT_COMPLETE_2ND,    "[EAP-SIM] GSM SIM authentication couldn't be completed 2nd")
TRC_MSG(INFO_EAP_SIM_AUTH_CAN_NOT_COMPLETE_3ND,    "[EAP-SIM] GSM SIM authentication couldn't be completed 3rd")
TRC_MSG(INFO_EAP_SIM_NO_MEM_FOR_NEXT_PSEUDONYM,    "EAP-SIM: (encr) No memory for next pseudonym")
TRC_MSG(INFO_EAP_SIM_NO_MEM_FOR_NEXT_REAUTH_ID,    "EAP-SIM: (encr) No memory for next reauth_id")
TRC_MSG(INFO_EAP_SIM_GEN_START,    "Generating EAP-SIM Start (id=%d)")
TRC_MSG(INFO_EAP_SIM_AT_SELECTED_VERSION,    "   AT_SELECTED_VERSION %d")
TRC_MSG(INFO_EAP_SIM_GEN_CHALLENGE,    "Generating EAP-SIM Challenge (id=%d)")
TRC_MSG(INFO_EAP_SIM_GEN_REAUTH,    "Generating EAP-SIM Reauthentication (id=%d)")
TRC_MSG(INFO_EAP_SIM_FAIL_ENCRYPT_ENCR_DATA,    "EAP-SIM: Failed to encrypt AT_ENCR_DATA")
TRC_MSG(INFO_EAP_SIM_GEN_NOTIFICATION,    "Generating EAP-SIM Notification (id=%d)")
TRC_MSG(INFO_EAP_SIM_SUBTYPE_START,    "EAP-SIM: subtype Start")
TRC_MSG(INFO_EAP_SIM_NO_AT_VERSION_LIST,    "EAP-SIM: No AT_VERSION_LIST in SIM/Start")
TRC_MSG(INFO_EAP_SIM_FAIL_NO_MEM_FOR_VERSION_LIST,    "EAP-SIM: Failed to allocate memory for version list")
TRC_MSG(INFO_EAP_SIM_NO_SUPPORT_VERSION,    "EAP-SIM: Could not find a supported version")
TRC_MSG(INFO_EAP_SIM_SELECTED_VERSION,    "EAP-SIM: Selected Version %d")
TRC_MSG(INFO_EAP_SIM_TOO_MANY_ID_REQ,     "EAP-SIM: Too many ID requests used within one authentication")
TRC_MSG(INFO_EAP_SIM_SUBTYPE_CHALLENGE,    "EAP-SIM: subtype Challenge")
TRC_MSG(INFO_EAP_SIM_CHALLENGES,     "EAP-SIM: Insufficient number of challenges (%u)")
TRC_MSG(INFO_EAP_SIM_INSUFFICIENT_CHALLENGES,      "EAP-SIM: Insufficient number of challenges (%u)")
TRC_MSG(INFO_EAP_SIM_TOO_MANY_CHALLENGES,      "EAP-SIM: Too many challenges (%u)")
TRC_MSG(INFO_EAP_SIM_RAND_USE_MULTIPLE_TIMES,      "EAP-SIM: Same RAND used multiple times")
TRC_MSG(INFO_EAP_SIM_AUTH_FAIL,      "[EAP-SIM] GSM authentication failed")
TRC_MSG(INFO_EAP_SIM_INVALID_AT_MAC_CHALLENGE,      "EAP-SIM: Challenge message used invalid AT_MAC")
TRC_MSG(INFO_EAP_SIM_NOTIFY_NOT_INC_ENCR_DATA,      "EAP-SIM: Notification message after reauth did not include encrypted data")
TRC_MSG(INFO_EAP_SIM_FAIL_PARSE_ENCR_DATA_IN_NOTIFY,     "EAP-SIM: Failed to parse encrypted data from notification message")
TRC_MSG(INFO_EAP_SIM_COUNTER_NOT_MATCH, "EAP-SIM: Counter in notification message does not match with counter in reauth message")
TRC_MSG(INFO_EAP_SIM_NO_MAC_IN_NOTIFICATION_AUTH,      "EAP-SIM: no AT_MAC in after_auth Notification message")
TRC_MSG(INFO_EAP_SIM_INVALID_MAC_IN_NOTIFICATION_AUTH,  "EAP-SIM: Notification message used invalid AT_MAC")
TRC_MSG(INFO_EAP_SIM_INVALID_NOTIFICATION_AUTH,     "EAP-SIM: Invalid notification message after reauth")
TRC_MSG(INFO_EAP_SIM_SUBTYPE_NOTIFICATION,     "EAP-SIM: subtype Notification")
TRC_MSG(INFO_EAP_SIM_TOO_MANY_NOTIFICATION,      "EAP-SIM: too many notification rounds (only one allowed)")
TRC_MSG(INFO_EAP_SIM_NO_AT_NOTIFICATION,      "EAP-SIM: no AT_NOTIFICATION in Notification message")
TRC_MSG(INFO_EAP_SIM_SUBTYPE_REAUTHENTICATION,      "EAP-SIM: subtype Reauthentication")
TRC_MSG(INFO_EAP_SIM_NO_REAUTH_ID,  "EAP-SIM: Server is trying reauthentication, but no reauth_id available")
TRC_MSG(INFO_EAP_SIM_NO_MAC_IN_REAUTH,      "EAP-SIM: Reauthentication did not have valid AT_MAC")
TRC_MSG(INFO_EAP_SIM_NO_ENCR_DATA_IN_REAUTH,      "EAP-SIM: Reauthentication message did not include encrypted data")
TRC_MSG(INFO_EAP_SIM_FAIL_PARSE_ENCR_DATA_IN_REAUTH, "EAP-SIM: Failed to parse encrypted data from reauthentication message")
TRC_MSG(INFO_EAP_SIM_INVALID_COUNTER,    "EAP-SIM: (encr) Invalid counter (%d <= %d)")
TRC_MSG(INFO_EAP_SIM_MAXIMUM_FAST_REAUTH,      "EAP-SIM: Maximum number of fast reauths performed - force fullauth")
TRC_MSG(INFO_EAP_SIM_IDENTITY_NOT_CONFIG,      "EAP-SIM: Identity not configured")
TRC_MSG(INFO_EAP_SIM_INVALID_FRAME,     "EAP-SIM: Invalid frame")
TRC_MSG(INFO_EAP_SIM_SUBTYPE,      "EAP-SIM: Subtype=%d")
TRC_MSG(INFO_EAP_SIM_SUBTYPE_CLIENT_ERROR,      "EAP-SIM: subtype Client-Error")
TRC_MSG(INFO_EAP_SIM_UNKNOWN_SUBTYEP,      "EAP-SIM: Unknown subtype=%d")
TRC_MSG(INFO_EAP_SIM_DERIVING_KEY_DATA,      "EAP-SIM: Deriving keying data from reauth")
TRC_MSG(INFO_EAP_SIM_AT_OVERFLOW,      "EAP-SIM: Attribute overflow(1)")
TRC_MSG(INFO_EAP_SIM_AT_TYPE_LEN,      "EAP-SIM: Attribute: Type=%d Len=%d")
TRC_MSG(INFO_EAP_SIM_AT_OVERFLOW_DETAIL,      "EAP-SIM: Attribute overflow (pos=%d len=%d end=%d)")
TRC_MSG(INFO_EAP_SIM_AT_RAND,      "EAP-SIM: AT_RAND")
TRC_MSG(INFO_EAP_SIM_INVALIDE_AT_RAND,      "EAP-SIM: Invalid AT_RAND (len %u)")
TRC_MSG(INFO_EAP_SIM_AKA_AUTN,     "EAP-AKA: AT_AUTN")
TRC_MSG(INFO_EAP_SIM_UNEXPECTED_AUTN,      "EAP-SIM: Unexpected AT_AUTN")
TRC_MSG(INFO_EAP_AKA_INVALID_AT_AUTN,      "EAP-AKA: Invalid AT_AUTN (len %u)")
TRC_MSG(INFO_EAP_SIM_UNENCRYPTED_AT_PADDING,      "EAP-SIM: Unencrypted AT_PADDING")
TRC_MSG(INFO_EAP_SIM_ENCR_AT_PADDING,      "EAP-SIM: (encr) AT_PADDING")
TRC_MSG(INFO_EAP_SIM_PADDING_ERROR,      "EAP-SIM: (encr) AT_PADDING used a non-zero padding byte")
TRC_MSG(INFO_EAP_SIM_AT_NONCE,      "EAP-SIM: AT_NONCE_MT")
TRC_MSG(INFO_EAP_SIM_INVALID_AT_NONCE_LEN,      "EAP-SIM: Invalid AT_NONCE_MT length")
TRC_MSG(INFO_EAP_SIM_AT_PERMANENT_ID_REQ,      "EAP-SIM: AT_PERMANENT_ID_REQ")
TRC_MSG(INFO_EAP_SIM_AT_MAC,      "EAP-SIM: AT_MAC")
TRC_MSG(INFO_EAP_SIM_INVALID_AT_MAC_LEN,    "EAP-SIM: Invalid AT_MAC length")
TRC_MSG(INFO_EAP_SIM_INVALID_NOTIFICATION_LEN,      "EAP-SIM: Invalid AT_NOTIFICATION length %u")
TRC_MSG(INFO_EAP_SIM_AT_NOTIFICATION_CODE, "EAP-SIM: AT_NOTIFICATION %d")
TRC_MSG(INFO_EAP_SIM_AT_ANY_ID_REQ,      "EAP-SIM: AT_ANY_ID_REQ")
TRC_MSG(INFO_EAP_SIM_AT_IDENTITY,      "EAP-SIM: AT_IDENTITY")
TRC_MSG(INFO_EAP_SIM_AKA_UNEXPECTED_VERSION_LIST,      "EAP-AKA: Unexpected AT_VERSION_LIST")
TRC_MSG(INFO_EAP_SIM_AT_VERSION_LIST,      "EAP-SIM: AT_VERSION_LIST")
TRC_MSG(INFO_EAP_SIM_INVALID_AT_VERSIONLIST,     "EAP-SIM: Invalid AT_VERSION_LIST (list_len=%d attr_len=%u)")
TRC_MSG(INFO_EAP_SIM_PARSE_AT_SELECTED_VERSION,     "EAP-SIM: AT_SELECTED_VERSION")
TRC_MSG(INFO_EAP_SIM_INVALID_AT_SELECTED_VERSION_LEN,      "EAP-SIM: Invalid AT_SELECTED_VERSION length %u")
TRC_MSG(INFO_EAP_SIM_AT_SELECTED_VERSION_NUM,      "EAP-SIM: AT_SELECTED_VERSION %d")
TRC_MSG(INFO_EAP_SIM_AT_FULLAUTH_ID_REQ,      "EAP-SIM: AT_FULLAUTH_ID_REQ")
TRC_MSG(INFO_EAP_SIM_UNENCR_AT_COUNTER,      "EAP-SIM: Unencrypted AT_COUNTER")
TRC_MSG(INFO_EAP_SIM_INVALID_AT_COUNTER_LEN,      "EAP-SIM: (encr) Invalid AT_COUNTER (alen=%u)")
TRC_MSG(INFO_EAP_SIM_AT_COUNTER_NUM,      "EAP-SIM: (encr) AT_COUNTER %d")
TRC_MSG(INFO_EAP_SIM_UNENCR_AT_NONCE_S,     "EAP-SIM: Unencrypted AT_NONCE_S")
TRC_MSG(INFO_EAP_SIM_ENCR_AT_NONCE_S,       "EAP-SIM: (encr)AT_NONCE_S")
TRC_MSG(INFO_EAP_SIM_INVALID_AT_NONCE_S,      "EAP-SIM: (encr) Invalid AT_NONCE_S (alen=%u)")
TRC_MSG(INFO_EAP_SIM_INVALID_AT_CLIENT_ERROR_CODE,   "EAP-SIM: Invalid AT_CLIENT_ERROR_CODE length %u")
TRC_MSG(INFO_EAP_SIM_AT_CLIENT_ERROR_CODE,   "EAP-SIM: AT_CLIENT_ERROR_CODE %d")
TRC_MSG(INFO_EAP_SIM_AT_IV,   "EAP-SIM: AT_IV")
TRC_MSG(INFO_EAP_SIM_INVALID_AT_IV_LEN,   "EAP-SIM: Invalid AT_IV length %u")
TRC_MSG(INFO_EAP_SIM_AT_ENCR_DATA,   "EAP-SIM: AT_ENCR_DATA")
TRC_MSG(INFO_EAP_SIM_INVALID_AT_ENCR_DATA_LEN,   "EAP-SIM: Invalid AT_ENCR_DATA length %u")
TRC_MSG(INFO_EAP_SIM_UNENCR_AT_NEXT_PSEUDONYM,   "EAP-SIM: Unencrypted AT_NEXT_PSEUDONYM")
TRC_MSG(INFO_EAP_SIM_ENCR_AT_NEXT_PSEUDONYM,   "EAP-SIM: (encr) AT_NEXT_PSEUDONYM")
TRC_MSG(INFO_EAP_SIM_INVALID_AT_NEXT_PSEUDONYM,   "EAP-SIM: (encr) Invalid AT_NEXT_PSEUDONYM (actual len %u, attr len %u)")
TRC_MSG(INFO_EAP_SIM_UNENCR_AT_NEXT_REAUTH,   "EAP-SIM: Unencrypted AT_NEXT_REAUTH_ID")
TRC_MSG(INFO_EAP_SIM_ENCR_AT_NEXT_REAUTH,   "EAP-SIM: (encr) AT_NEXT_REAUTH_ID")
TRC_MSG(INFO_EAP_SIM_INVALID_AT_NEXT_REAUTH,   "EAP-SIM: (encr) Invalid AT_NEXT_REAUTH_ID (actual len %u, attr len %u)")
TRC_MSG(INFO_EAP_SIM_UNRECOGNIZED_AT,   "EAP-SIM: Unrecognized non-skippable attribute %d")
TRC_MSG(INFO_EAP_SIM_UNRECOGNIZED_SKIPPPABEL_AT,   "EAP-SIM: Unrecognized skippable attribute %d ignored")
TRC_MSG(INFO_EAP_SIM_PARSE_AT_SUCCESS,   "EAP-SIM: Attributes parsed successfully (aka=%d encr=%d)")
TRC_MSG(INFO_EAP_SIM_ENCR_NO_IV,   "EAP-SIM: Encrypted data, but no IV")
TRC_MSG(INFO_EAP_SIM_FAIL_PARSE_ENCR,   "EAP-SIM: (encr) Failed to parse decrypted AT_ENCR_DATA")
TRC_MSG(INFO_EAP_SIM_ADD_ENCR_INVALID_PAD,   "EAP-SIM: eap_sim_msg_add_encr_end - invalid pad_len %d")
TRC_MSG(INFO_EAP_SIM_ADD_ENCR_AT_PADDING,   "   *AT_PADDING")
TRC_MSG(INFO_EAP_SIM_ADD_ENCR_DATA,   "   (AT_ENCR_DATA data len %u)")
TRC_MSG(INFO_EAP_SIM_NOTIFY_GENERAL_FAIL,   "EAP-%d: General failure notification (after authentication)")
TRC_MSG(INFO_EAP_SIM_TEMP_DENY, "EAP-%d: Failure notification: User has been temporarily denied access to the requested service")
TRC_MSG(INFO_EAP_SIM_NOTIFY_NOT_SUBSCRIBED,   "EAP-%d: Failure notification: User has not subscribed to the requested service")
TRC_MSG(INFO_EAP_SIM_NOTIFY_GEN_FAIL_BEFORE_AUTH,   "EAP-%d: General failure notification (before authentication)")
TRC_MSG(INFO_EAP_SIM_SUCCESS_NOTIFY,   "EAP-%d: Successful authentication notification")
TRC_MSG(INFO_EAP_SIM_UNRECOGNIZED_NON_FAIL_NOTIFY,   "EAP-%d: Unrecognized non-failure notification %d")
TRC_MSG(INFO_EAP_SIM_UNRECOGNIZED_FAIL_NOTIFY,   "EAP-%d: Unrecognized failure notification %d")




//3) eap tls
TRC_MSG(INFO_EAP_TLS_PRIV_KEY_NOT_CONFIG,  "EAP-TLS: Private key not configured")
TRC_MSG(INFO_EAP_TLS_INIT_SSL_FAIL,  "EAP-TLS: Failed to initialize SSL.")
TRC_MSG(INFO_EAP_TLS_IVALID_FRAME,  "EAP-TLS: Invalid frame")
TRC_MSG(INFO_EAP_TLS_RX_PACKET_LEN_FLAG,  "EAP-TLS: Received packet(len=%u) - Flags %x")
TRC_MSG(INFO_EAP_TLS_SHORT_FRAME,  "EAP-TLS: Short frame with TLS length")
TRC_MSG(INFO_EAP_TLS_MSG_LEN,  "EAP-TLS: TLS Message Length: %d")
TRC_MSG(INFO_EAP_TLS_START,  "EAP-TLS: Start")
TRC_MSG(INFO_EAP_TLS_PROCESS_FAIL,  "EAP-TLS: TLS processing failed, error code=%x")
TRC_MSG(INFO_EAP_TLS_DONE,  "EAP-TLS: Done")
TRC_MSG(INFO_EAP_TLS_FAIL_TO_DERIVE_KEY,  "EAP-TLS: Failed to derive key")
TRC_MSG(INFO_EAP_TLS_DATA_PHASE2,  "SSL: TLS data->phase2")
TRC_MSG(INFO_EAP_TLS_NOT_DATA_PHASE2,  "SSL: TLS not data->phase2")
TRC_MSG(INFO_EAP_TLS_PRIV_KEY_BEFORE_DEALLOC,  "SSL: TLS private_key (before dealloc): %x")
TRC_MSG(INFO_EAP_TLS_PRIV_KEY_BEFORE_ALLOC,  "SSL: TLS private_key (before alloc): %x")
TRC_MSG(INFO_EAP_TLS_PRIV_KEY_AFTER_ALLOC,  "SSL: TLS private_key (after alloc): %x")
TRC_MSG(INFO_EAP_TLS_REASON_CODE,  "reason code : %d")
TRC_MSG(INFO_EAP_TLS_SSL_ADD_CA_CERT,  "supc_ssl_AddTrustedCACertificates error")
TRC_MSG(INFO_EAP_TLS_SSL_ADD_CERT_ID,  "supc_ssl_AddCertificateIdentity error")
TRC_MSG(INFO_EAP_TLS_MORE_TLS_DATA_RX_ERROR,  "SSL: more data than TLS message length indicated")
TRC_MSG(INFO_EAP_TLS_NEED_INPUT_DATA,  "SSL: Need %u bytes more input data")
TRC_MSG(INFO_EAP_TLS_NO_DATA_SENDOUT,  "SSL: No data to be sent out")
TRC_MSG(INFO_EAP_TLS_LEFT_DATA_SENDOUT,  "SSL: %u bytes left to be sent out (of total %u bytes)")
TRC_MSG(INFO_EAP_TLS_SEND_MORE_FRAGEMENT_IND,  "SSL: sending %u bytes, more fragments will follow")
TRC_MSG(INFO_EAP_TLS_BUILDING_ACK,  "SSL: Building ACK")

//4) eap peap
TRC_MSG(INFO_PEAP_NO_PHASE2_METHOD,    "EAP-PEAP: No Phase2 method available")
TRC_MSG(INFO_PEAP_INIT_SSL_FAIL,    "EAP-PEAP: Failed to initialize SSL.")
TRC_MSG(INFO_PEAP_ENCR_PHASE2_DATA_FAIL,    "EAP-PEAP: Failed to encrypt Phase 2 data")
TRC_MSG(INFO_PEAP_PHASE2_REQ_NAK,    "EAP-PEAP: Phase 2 Request: Nak type=%d")
TRC_MSG(INFO_PEAP_PHASE2_REQ_TOO_SHORT,    "EAP-PEAP: too short Phase 2 request (len=%u)")
TRC_MSG(INFO_PEAP_PHASE2_REQ_TYPE,    "EAP-PEAP: Phase 2 Request: type=%d")
TRC_MSG(INFO_PEAP_SELECT_PHASE2_REQ_TYPE,    "EAP-PEAP: Selected Phase 2 EAP method %d")
TRC_MSG(INFO_PEAP_SET_PHASE2_NAK,    "EAP-PEAP: Set phase2_nak")
TRC_MSG(INFO_PEAP_CLR_PHASE2_NAK,    "EAP-PEAP: Clear phase2_nak")
TRC_MSG(INFO_PEAP_INIT_PHASE2_METHOD_FAIL,    "EAP-PEAP: failed to initialize Phase 2 EAP method %d")
TRC_MSG(INFO_PEAP_RX_ENCR_DATA_FOR_PHASE2,    "EAP-PEAP: received %u bytes encrypted data for Phase 2")
TRC_MSG(INFO_PEAP_PENDING_PHASE2_REQ,    "EAP-PEAP: Pending Phase 2 request - skip decryption and use old data")
TRC_MSG(INFO_PEAP_WA_RETURN_TLS_ACK, "EAP-PEAP: Received TLS ACK, but expected data - acknowledge with TLS ACK since Phase 2 has been completed")
TRC_MSG(INFO_PEAP_IGNORE_MSG,    "EAP-PEAP: ignore this message, no response")
TRC_MSG(INFO_PEAP_ALLCO_MEM_FAIL_FOR_DECRYPT,    "EAP-PEAP: failed to allocate memory for decryption")
TRC_MSG(INFO_PEAP_DECRYPT_PHASE2_DATA_FAIL,    "EAP-PEAP: Failed to decrypt Phase 2 data")
TRC_MSG(INFO_PEAP_PHASE2_DATA_TOO_SHORT,    "EAP-PEAP: Too short Phase 2 EAP frame (len=%d)")
TRC_MSG(INFO_PEAP_PHASE2_LEN_MISMATCH,    "EAP-PEAP: Length mismatch in Phase 2 EAP frame (len=%d hdr->length=%d)")
TRC_MSG(INFO_PEAP_PHASE2_EAP_HEADER_ERROR,    "EAP-PEAP: Odd.. Phase 2 EAP header has shorter length than full decrypted data (%d < %d)")
TRC_MSG(INFO_PEAP_HEADER_WA,    "EAP-PEAP: workaround -> replace Phase 2 EAP header len (%d) with real decrypted len (%d)")
TRC_MSG(INFO_PEAP_RX_PHASE2_CODE,    "EAP-PEAP: Received Phase 2: code=%d identifier=%d length=%d")
TRC_MSG(INFO_PEAP_PHASE2_PROCESS_FAIL,    "EAP-PEAP: Phase2 Request processing failed")
TRC_MSG(INFO_PEAP_PHASE2_PROCESS_SUCCESS,    "EAP-PEAP: Phase 2 Success")
TRC_MSG(INFO_PEAP_VERSION1_SUCCESS,    "EAP-PEAP: Version 1 - EAP-Success within TLS tunnel - authentication completed")
TRC_MSG(INFO_PEAP_USE_TLS_ACK_FOR_AUTH_DONE,    "EAP-PEAP: Use TLS ACK to finish authentication")
TRC_MSG(INFO_PEAP_PHASE2_FAIL,    "EAP-PEAP: Phase 2 Failure")
TRC_MSG(INFO_PEAP_PHASE2_UNEXPECTED_CODE,    "EAP-PEAP: Unexpected code=%d in Phase 2 EAP header")
TRC_MSG(INFO_PEAP_FAIL_TO_ENCR_ONE_PHASE2_FRAME,    "EAP-PEAP: Failed to encrypt a Phase 2 frame")
TRC_MSG(INFO_PEAP_INVALID_FRAME,    "EAP-PEAP: Invalid frame")
TRC_MSG(INFO_PEAP_RX_PACKET_LEN_FLAG,    "EAP-PEAP: Received packet(len=%u) - Flags %x")
TRC_MSG(INFO_PEAP_SHORT_LEN_WITH_TLS,    "EAP-PEAP: Short frame with TLS length")
TRC_MSG(INFO_PEAP_TLS_LEN,    "EAP-PEAP: TLS Message Length: %d")
TRC_MSG(INFO_PEAP_VERSION_INFO,    "EAP-PEAP: Start (server ver=%d, own ver=%d)")
TRC_MSG(INFO_PEAP_FAIL_FORCED_PEAP_VERSION,    "EAP-PEAP: Failed to select forced PEAP version %d")
TRC_MSG(INFO_PEAP_USE_VERSION,    "EAP-PEAP: Using PEAP version %d")
TRC_MSG(INFO_PEAP_TLS_DONE,    "EAP-PEAP: TLS done, proceed to Phase 2")
TRC_MSG(INFO_PEAP_DERIVE_KEY_FAIL,   "EAP-PEAP: Failed to derive key")
TRC_MSG(INFO_PEAP_WA_OUTER_EAP_SUCCESS,    "EAP-PEAP: Workaround - allow outer EAP-Success to terminate PEAP resumption")
TRC_MSG(INFO_PEAP_TLV_UNDERRUN ,    "EAP-TLV: TLV underrun (tlv_len=%d left=%u)")
TRC_MSG(INFO_PEAP_TLV_LEN_TOO_SHORT ,    "EAP-TLV: Last TLV too short in Request (left=%u)")
TRC_MSG(INFO_PEAP_TLV_TOO_SHORT_RESULT_TLV ,    "EAP-TLV: Too short Result TLV (len=%u)")
TRC_MSG(INFO_PEAP_TLV_RESULT_SUCCESS ,    "EAP-TLV: TLV Result - Success - EAP-TLV/Phase2 Completed")
TRC_MSG(INFO_PEAP_TLV_RESULT_FAIL ,    "EAP-TLV: TLV Result - Failure")
TRC_MSG(INFO_PEAP_TLV_UNKNOWN_TLV_STATUS ,    "EAP-TLV: Unknown TLV Result Status %d")





//4) eap ttls
TRC_MSG(INFO_EAP_TTLS_NULL_CONFIG_DATA,      "EAP-TTLS: Phase2 null EAP config data")
TRC_MSG(INFO_EAP_TTLS_NO_PHASE2_DATA,      "EAP-TTLS: Phase2 type is not specified")
TRC_MSG(INFO_EAP_TTLS_NO_PAHSE2_METHOD_AVAILABLE,       "EAP-TTLS: No Phase2 EAP method available")
TRC_MSG(INFO_EAP_TTLS_INIT_SSL_FAIL,      "EAP-TTLS: Failed to initialize SSL.")
TRC_MSG(INFO_EAP_TTLS_ENCR_PHASE2_DATA_FAIL,      "EAP-TTLS: Failed to encrypt Phase 2 data")
TRC_MSG(INFO_EAP_TTLS_PHASE2_NAK_TPYE,      "EAP-TTLS: Phase 2 Request: Nak type=%d")
TRC_MSG(INFO_EAP_TTLS_PHASE2_REQ_TOO_SHORT,      "EAP-TTLS: too short Phase 2 request (len=%u)")
TRC_MSG(INFO_EAP_TTLS_PHASE2_REQ_TYPE,      "EAP-TTLS: Phase 2 EAP Request: type=%d")
TRC_MSG(INFO_EAP_TTLS_PHASE2_SELECT_PHASE2_METHOD,      "EAP-TTLS: Selected Phase 2 EAP method %d")
TRC_MSG(INFO_EAP_TTLS_SET_PHASE2_NAK,      "EAP-TTLS: Set phase2_nak")
TRC_MSG(INFO_EAP_TTLS_CLR_PHASE2_NAK,      "EAP-TTLS: Clear phase2_nak")
TRC_MSG(INFO_EAP_TTLS_INIT_PHASE2_METHOD_FAIL,      "EAP-TTLS: failed to initialize Phase 2 EAP method %d")
TRC_MSG(INFO_EAP_TTLS_MSCHAPV2_REQ,      "EAP-TTLS: Phase 2 MSCHAPV2 Request")
TRC_MSG(INFO_EAP_TTLS_MSCHAPV2_ALLOC_MEM_FAIL,      "EAP-TTLS/MSCHAPV2: Failed to allocate memory")
TRC_MSG(INFO_EAP_TTLS_MSCHAPV2_DERIVE_CHALLENGE_FAIL,      "EAP-TTLS/MSCHAPV2: Failed to derive implicit challenge")
TRC_MSG(INFO_EAP_TTLS_MSCHAPV2_WA_WO_TUNNELED_RSP,      "EAP-TTLS/MSCHAPV2: EAP workaround - allow success without tunneled response")
TRC_MSG(INFO_EAP_TTLS_MSCHAP_REQ,      "EAP-TTLS: Phase 2 MSCHAP Request")
TRC_MSG(INFO_EAP_TTLS_MSCHAP_ALLOC_MEM_FAIL,      "EAP-TTLS/MSCHAP: Failed to allocate memory")
TRC_MSG(INFO_EAP_TTLS_MSCHAP_DERIVE_CHALLENGE_FAIL,      "EAP-TTLS/MSCHAP: Failed to derive implicit challenge")
TRC_MSG(INFO_EAP_TTLS_PAP_REQ,      "EAP-TTLS: Phase 2 PAP Request")
TRC_MSG(INFO_EAP_TTLS_PAP_ALLOC_MEM_FAIL,      "EAP-TTLS/PAP: Failed to allocate memory")
TRC_MSG(INFO_EAP_TTLS_CHAP_REQ,      "EAP-TTLS: Phase 2 CHAP Request")
TRC_MSG(INFO_EAP_TTLS_CHAP_ALLOC_MEM_FAIL,      "EAP-TTLS/CHAP: Failed to allocate memory")
TRC_MSG(INFO_EAP_TTLS_CHAP_DERIVE_CHALLENGE_FAIL,      "EAP-TTLS/CHAP: Failed to derive implicit challenge")
TRC_MSG(INFO_EAP_TTLS_ID_NOT_CONIFG,      "EAP-TTLS: Identity not configured")
TRC_MSG(INFO_EAP_TTLS_UNKNOWN_PHASE2_METHOD,      "EAP-TTLS: Phase 2 - Unknown")
TRC_MSG(INFO_EAP_TTLS_RX_ENCR_DATA,      "EAP-TTLS: received %u bytes encrypted data for Phase 2")
TRC_MSG(INFO_EAP_TTLS_PENDING_PHASE2_REQ,      "EAP-TTLS: Pending Phase 2 request - skip decryption and use old data")
TRC_MSG(INFO_EAP_TTLS_SESSION_RESUMPTION_SKIP_PHASE2,      "EAP-TTLS: Session resumption - skip phase 2")
TRC_MSG(INFO_EAP_TTLS_USE_FAKE_ID,      "EAP-TTLS: empty data in beginning of Phase 2 - use fake EAP-Request Identity")
TRC_MSG(INFO_EAP_TTLS_ALLOC_MEM_FAIL_FOR_FAKE_ID,      "EAP-TTLS: failed to allocate Memory for fake EAP-Identity Request")
TRC_MSG(INFO_EAP_TTLS_ALLOC_MEM_FAIL_FOR_DECRYPT,      "EAP-TTLS: failed to allocate memory for decryption")
TRC_MSG(INFO_EAP_TTLS_DECRYPT_PHASE2_DATA_FAIL,      "EAP-TTLS: Failed to decrypt Phase 2 data")
TRC_MSG(INFO_EAP_TTLS_DROP_SHORT_AVP,      "EAP-TTLS: Too short Phase 2 AVP frame len=%d expected %u or more - dropped")
TRC_MSG(INFO_EAP_TTLS_AVP_CODE_FLAG,      "EAP-TTLS: AVP: code=%d flags=0x%02x length=%d")
TRC_MSG(INFO_EAP_TTLS_DROP_OVERFLOW_AVP,      "EAP-TTLS: AVP overflow (len=%d, left=%d) - dropped")
TRC_MSG(INFO_EAP_TTLS_VENDOR_AVP_UNDERFLOW,      "EAP-TTLS: vendor AVP underflow")
TRC_MSG(INFO_EAP_TTLS_VENDOR_AVP_ID,      "EAP-TTLS: AVP vendor_id %d")
TRC_MSG(INFO_EAP_TTLS_AVP_EAP_MSG,      "EAP-TTLS: AVP - EAP Message")
TRC_MSG(INFO_EAP_TTLS_ALLOC_MEM_FAIL_FOR_EAP,      "EAP-TTLS: failed to allocate memory for Phase 2 EAP data")
TRC_MSG(INFO_EAP_TTLS_UNEXPECTED_MSCHAPV2_SUCCESS_LEN,      "EAP-TTLS: Unexpected MS-CHAP2-Success length (len=%u, expected 43)")
TRC_MSG(INFO_EAP_TTLS_UNSUPPORTED_AVP_CODE,      "EAP-TTLS: Unsupported mandatory AVP code %d vendor_id %d - dropped")
TRC_MSG(INFO_EAP_TTLS_INGNORE_UNSUPPORT_AVP,      "EAP-TTLS: Ignoring unsupported AVP code %d vendor_id %d")
TRC_MSG(INFO_EAP_TTLS_NO_EAP_MSG_IN,      "EAP-TTLS: No EAP Message in the packet - dropped")
TRC_MSG(INFO_EAP_TTLS_TOO_SHORT_EAP,      "EAP-TTLS: Too short Phase 2 EAP frame (len=%u, expected %u or more) - dropped")
TRC_MSG(INFO_EAP_TTLS_LEN_MISMATCH_IN_EAP, "EAP-TTLS: Length mismatch in Phase 2 EAP frame (EAP hdr len=%d, EAP data len in AVP=%u)")
TRC_MSG(INFO_EAP_TTLS_RX_PHASE2_EAP,      "EAP-TTLS: received Phase 2: code=%d identifier=%d length=%d")
TRC_MSG(INFO_EAP_TTLS_PHASE2_RPOCESS_FAIL,      "EAP-TTLS: Phase2 Request processing failed")
TRC_MSG(INFO_EAP_TTLS_UNEXPECTED_PHASE2_EAP_HEADER_CODE,      "EAP-TTLS: Unexpected code=%d in Phase 2 EAP header")
TRC_MSG(INFO_EAP_TTLS_RX_MSCHAP_ERROR,      "EAP-TTLS/MSCHAPV2: Received MS-CHAP-Error - failed")
TRC_MSG(INFO_EAP_TTLS_NO_SUCCESS_AVP_MSCHAPV2,      "EAP-TTLS: no MS-CHAP2-Success AVP received for Phase2 MSCHAPV2")
TRC_MSG(INFO_EAP_TTLS_ID_MISMATCH_MSCHAPV2, "EAP-TTLS: Ident mismatch for Phase 2 MSCHAPV2 (received Ident %x, expected %x)")
TRC_MSG(INFO_EAP_TTLS_INVALID_AC_RSP_IN_MSCHAPV2,   "EAP-TTLS: Invalid authenticator response in Phase 2 MSCHAPV2 success request")
TRC_MSG(INFO_EAP_TTLS_MACHAPV2_SUCCESS,      "EAP-TTLS: Phase 2 MSCHAPV2 authentication succeeded")
TRC_MSG(INFO_EAP_TTLS_UNEXPECTED_TUNNELED_DATA,      "EAP-TTLS: Phase 2 received unexpected tunneled data")
TRC_MSG(INFO_EAP_TTLS_ENCR_PHASE2_RSP_FAIL,      "EAP-TTLS: Failed to encrypt a Phase 2 frame")
TRC_MSG(INFO_EAP_TTLS_INVALID_FRAME,      "EAP-TTLS: Invalid frame")
TRC_MSG(INFO_EAP_TTLS_RX_FRAME,      "EAP-TTLS: Received packet(len=%u) - Flags %x")
TRC_MSG(INFO_EAP_TTLS_FRAME_SHORT_WITH_TLS_LEN,      "EAP-TTLS: Short frame with TLS length")
TRC_MSG(INFO_EAP_TTLS_MSG_LEN,      "EAP-TTLS: TLS Message Length: %d")
TRC_MSG(INFO_EAP_TTLS_START,      "EAP-TTLS: Start")
TRC_MSG(INFO_EAP_TTLS_TLS_DONE,      "EAP-TTLS: TLS done, proceed to Phase 2")
TRC_MSG(INFO_EAP_TTLS_FAST_REAUTH_MAY_SKIP_PHASE2,      "EAP-TTLS: fast reauth - may skip Phase 2")
TRC_MSG(INFO_EAP_TTLS_DERIVE_KEY_FAIL,      "EAP-TTLS: Failed to derive key")
TRC_MSG(INFO_EAP_TTLS_FAIL_IN_EARLY_START_PHASE2,      "EAP-TTLS: failed to process early start for Phase 2")
TRC_MSG(INFO_EAP_TTLS_AUTH_COMPLETED_SUCCESS,      "EAP-TTLS: Authentication completed successfully")
TRC_MSG(INFO_EAP_TTLS_AUTH_SUCCESS_WITH_EAP_WA,      "EAP-TTLS: Authentication completed successfully (EAP workaround)")


// eap common
TRC_MSG(INFO_EAP_COMMON_EAP_TOO_SHORT,     "EAP: Too short EAP frame")
TRC_MSG(INFO_EAP_COMMON_EAP_INVALID_LEN,     "EAP: Invalid EAP length")
TRC_MSG(INFO_EAP_COMMON_INVALID_EXPANDED_EAP_LEN,     "EAP: Invalid expanded EAP length")
TRC_MSG(INFO_EAP_COMMON_INVALID_EXPANDED_EAP_FRAME_TYPE,     "EAP: Invalid expanded frame type")
TRC_MSG(INFO_EAP_COMMON_INVALID_EAP_FRAME_TYPE,     "EAP: Invalid frame type")

// eap mschapv2
TRC_MSG(INFO_EAP_MSCHAPV2_RX_CHALLENGE,     "EAP-MSCHAPV2: Received challenge")
TRC_MSG(INFO_EAP_MSCHAPV2_INVALID_CHALLENGE_LEN,     "EAP-MSCHAPV2: Invalid challenge length %d")
TRC_MSG(INFO_EAP_MSCHAPV2_CHALLENGE_TOO_SHORT,     "EAP-MSCHAPV2: Too short challenge packet: len=%u challenge_len=%d")
TRC_MSG(INFO_EAP_MSCHAPV2_GEN_CHALLENGE_RSP,     "EAP-MSCHAPV2: Generating Challenge Response")
TRC_MSG(INFO_EAP_MSCHAPV2_PEER_CHALLENGE_GEN_IN_PHASE1,     "EAP-MSCHAPV2: peer_challenge generated in Phase 1")
TRC_MSG(INFO_EAP_MSCHAPV2_GEN_AUTH_CHALLENGE_IN_PHASE1,     "EAP-MSCHAPV2: auth_challenge generated in Phase 1")
TRC_MSG(INFO_EAP_MSCHAPV2_RX_SUCCESS,     "EAP-MSCHAPV2: Received success")
TRC_MSG(INFO_EAP_MSCHAPV2_INVALID_AC_RSP,     "EAP-MSCHAPV2: Invalid authenticator response in success request")
TRC_MSG(INFO_EAP_MSCHAPV2_AUTH_SUCCEEDED,     "EAP-MSCHAPV2: Authentication succeeded")
TRC_MSG(INFO_EAP_MSCHAPV2_ALLOC_MEM_FAIL,     "EAP-MSCHAPV2: Failed to allocate buffer for success response")
TRC_MSG(INFO_EAP_MSCHAPV2_ERROR_CODE,     "EAP-MSCHAPV2: error %d")
TRC_MSG(INFO_EAP_MSCHAPV2_INVALID_FAILURE_CHALLENGE,     "EAP-MSCHAPV2: invalid failure challenge")
TRC_MSG(INFO_EAP_MSCHAPV2_INVALID_CHALLANGE_LEN,     "EAP-MSCHAPV2: invalid failure challenge len %d")
TRC_MSG(INFO_EAP_MSCHAPV2_NO_CHALLENGE_FILED,     "EAP-MSCHAPV2: required challenge field was not present in failure message")
TRC_MSG(INFO_EAP_MSCHAPV2_PW_CHANGE_VERSION,     "EAP-MSCHAPV2: password changing protocol version %d")
TRC_MSG(INFO_EAP_MSCHAPV2_RX_FAILURE,      "EAP-MSCHAPV2: Received failure")
TRC_MSG(INFO_EAP_MSCHAPV2_ID_NOT_CONFIG,     "EAP-MSCHAPV2: Identity not configured")
TRC_MSG(INFO_EAP_MSCHAPV2_INVALID_FRAME,    "EAP-MSCHAPV2: Invalid frame")
TRC_MSG(INFO_EAP_MSCHAPV2_INVALID_HEADER_LEN,    "EAP-MSCHAPV2: Invalid header: len=%d ms_len=%d")
TRC_MSG(INFO_EAP_MSCHAPV2_WA_INVALID_MS_LEN,    "EAP-MSCHAPV2: workaround, ignore invalid ms_len")
TRC_MSG(INFO_EAP_MSCHAPV2_UNKOWNN_OP,    "EAP-MSCHAPV2: Unknown op %d - ignored")

// ssl part
TRC_MSG(INFO_EAP_SSL_CHECK_CERT,    "wpa_s->check_cert = %x")
TRC_MSG(INFO_EAP_SSL_CHECK_CERT_RESULT,    "ctx->error = %x")
TRC_MSG(INFO_EAP_SSL_SKIP_CERT_CHECK,    "skip cert checking, check_cert is false")

//dh
TRC_MSG(INFO_DH_FAIL_GET_LOCAL_PRVI_KEY,    "DH: fail to get local prive key")

// eap gtc
TRC_MSG(INFO_EAP_GTC_USE_PREFIX_CHALLENGE,   "EAP-GTC: EAP-FAST tunnel - use prefix with challenge/response")
TRC_MSG(INFO_EAP_GTC_INVALID_FRAME,   "EAP-GTC: Invalid frame")
TRC_MSG(INFO_EAP_GTC_CHALLENGE_NOT_START_WITH_EXPECTED_PREFIX,   "EAP-GTC: Challenge did not start with expected prefix")
TRC_MSG(INFO_EAP_GTC_ID_NOT_CONFIG,   "EAP-GTC: Identity not configuration")
TRC_MSG(INFO_EAP_GTC_FORGET_USED_PW,   "EAP-GTC: Forgetting used password")

// wps
TRC_MSG(INFO_WPS_DUMMY_WPS_INIT,    "wps_dumy: wpas_wps_init")
TRC_MSG(INFO_WPS_DUMMY_PBC_OVERLAP,    "wps_dumy: scan pbc overlap")
TRC_MSG(INFO_WPS_DUMMY_START_PBC,    "wps_dumy: start pbc")
TRC_MSG(INFO_WPS_DUMMY_START_PIN,    "wps_dumy: start pin-code")
TRC_MSG(INFO_WPS_PARSE_WPSIE_FROM_ASSOC,    "WPS: Failed to parse WPS IE from (Re)AssocReq")
TRC_MSG(INFO_WPS_NO_REQ_AT_IN_ASSOC,    "WPS: No Request Type attribute in (Re)AssocReq WPS IE")
TRC_MSG(INFO_WPS_REQ_TPYE_FROM_ASSOC,    "WPS: Request Type (from WPS IE in (Re)AssocReq WPS IE): %d")
TRC_MSG(INFO_WPS_FULL_PIN_REVEALED,    "WPS: Full PIN information revealed and negotiation failed")
TRC_MSG(INFO_WPS_BUILDING_WPSIE_FOR_ASSOC_REQ,    "WPS: Building WPS IE for (Re)Association Request")
TRC_MSG(INFO_WPS_BUILDING_WPSIE_FOR_PROBE_REQ,    "WPS: Building WPS IE for Probe Request")
TRC_MSG(INFO_WPS_CONTEXT_NOT_AVAILABLE,    "EAP-WSC: WPS context not available")
TRC_MSG(INFO_WPS_PHASE1_CONFIG_DATA_NOT_SET,    "EAP-WSC: phase1 configuration data not set")
TRC_MSG(INFO_WPS_PIN_PBC_NOT_SET_IN_PHASE1_DATA,    "EAP-WSC: PIN or PBC not set in phase1 configuration data")
TRC_MSG(INFO_WPS_GEN_RSP,    "EAP-WSC: Generating Response")
TRC_MSG(INFO_WPS_SEND_OUT_COMPLETELY,    "EAP-WSC: Sending out %d bytes (message sent completely)")
TRC_MSG(INFO_WPS_STATE_AND_OPCODE,    "data->state=%d, out_op_code=%d")
TRC_MSG(INFO_WPS_SEND_FRAGMENT_OUT,    "EAP-WSC: Sending out %d bytes (%d more to send)")
TRC_MSG(INFO_WPS_UNEXPECTED_OPCODE_IN_FRAGMENT,    "EAP-WSC: Unexpected Op-Code %d in fragment (expected %d)")
TRC_MSG(INFO_WPS_FRAGMENT_OVERFLOW,    "EAP-WSC: Fragment overflow")
TRC_MSG(INFO_WPS_RX_BYTES_NEED_MORE,    "EAP-WSC: Received %u bytes, waiting for %u bytes more")
TRC_MSG(INFO_WPS_NO_LEN_FLAG_IN_FRAGMENT,    "EAP-WSC: No Message Length field in a fragmented packet")
TRC_MSG(INFO_WPS_NO_MEM_FOR_MSG,    "EAP-WSC: No memory for message")
TRC_MSG(INFO_WPS_RX_FRAGMENT_WAIT_MORE,    "EAP-WSC: Received %u bytes in first fragment, waiting for %u bytes more")
TRC_MSG(INFO_WPS_PROCESS_MSG_FAIL,    "EAP-WSC: process msg fail")
TRC_MSG(INFO_WPS_GEN_MSG_WITH_LEN,    "EAP-WSC: generate msg %d bytes")
TRC_MSG(INFO_WPS_MSG_UNDERFLOW,    "EAP-WSC: Message underflow")
TRC_MSG(INFO_WPS_INVALID_MSG_LEN,    "EAP-WSC: Invalid Message Length")
TRC_MSG(INFO_WPS_RX_OPCODE_FLAGS_LEN,    "EAP-WSC: Received packet: Op-Code %d Flags 0x%x Message Length %d")
TRC_MSG(INFO_WPS_UNEXPECTED_OP_IN_WAIT_FRAG_ACK_STA,    "EAP-WSC: Unexpected Op-Code %d in WAIT_FRAG_ACK state")
TRC_MSG(INFO_WPS_FRAGMENT_ACKED,    "EAP-WSC: Fragment acknowledged")
TRC_MSG(INFO_WPS_UNEXPECTED_OP_CODE,    "EAP-WSC: Unexpected Op-Code %d")
TRC_MSG(INFO_WPS_UNEXPECTED_OP_CODE_IN_WAIT_START_STA,    "EAP-WSC: Unexpected Op-Code %d in WAIT_START state")
TRC_MSG(INFO_WPS_RX_START,    "EAP-WSC: Received start")
TRC_MSG(INFO_WPS_DONE_WAIT_EAP_FAIL,    "EAP-WSC: WPS processing completed successfully - wait for EAP failure")
TRC_MSG(INFO_WPS_PROCESS_FAIL,    "EAP-WSC: WPS processing failed")
TRC_MSG(INFO_WPS_FAIL_RX_MSG_FROM_WPS,    "EAP-WSC: Failed to receive message from WPS")
TRC_MSG(INFO_WPS_ALLOC_MEM_FAIL_FRO_FRAG_ACK,    "EAP-WSC: Failed to allocate memory for FRAG_ACK")
TRC_MSG(INFO_WPS_SEND_WSC_OR_ACK,    "EAP-WSC: Send WSC/FRAG_ACK")
TRC_MSG(INFO_WPS_BUILD_WPS_KEY,    "WPS:  * Public Key")
TRC_MSG(INFO_WPS_INIT_DH_HANDSHAKE_FAIL,    "WPS: Failed to initialize Diffie-Hellman handshake")
TRC_MSG(INFO_WPS_BUILD_REQ_TPYE,    "WPS:  * Request Type")
TRC_MSG(INFO_WPS_BUILD_CONFIG_METHOD,    "WPS:  * Config Methods (%x)")
TRC_MSG(INFO_WPS_BUILD_UUID_E,    "WPS:  * UUID-E")
TRC_MSG(INFO_WPS_BUILD_DEV_PWID,    "WPS:  * Device Password ID (%d)")
TRC_MSG(INFO_WPS_BUILD_CONFIG_ERROR,    "WPS:  * Configuration Error (%d)")
TRC_MSG(INFO_WPS_NO_LAST_MSG_BUILD_AUTHENTICATOR,    "WPS: Last message not available for building authenticator")
TRC_MSG(INFO_WPS_BUILD_AUTHENTICATOR,    "WPS:  * Authenticator")
TRC_MSG(INFO_WPS_BUILD_WPS_VERSION,    "WPS:  * Version")
TRC_MSG(INFO_WPS_BUILD_MSG_TYPE,    "WPS:  * Message Type (%d)")
TRC_MSG(INFO_WPS_BUILD_ENROLLEE_NONCE,    "WPS:  * Enrollee Nonce")
TRC_MSG(INFO_WPS_BUILD_REGISTRAR_NONCE,    "WPS:  * Registrar Nonce")
TRC_MSG(INFO_WPS_BUILD_AUTH_TYPE_FLAGS,    "WPS:  * Authentication Type Flags")
TRC_MSG(INFO_WPS_BUILD_ENCRYPTION_TYPE_FLAGS,    "WPS:  * Encryption Type Flags")
TRC_MSG(INFO_WPS_BUILD_CONNECTION_TYPE_FLAGS,    "WPS:  * Connection Type Flags")
TRC_MSG(INFO_WPS_BUILD_ASSOCIATION_STATE,    "WPS:  * Association State")
TRC_MSG(INFO_WPS_BUILD_KEY_WRAP_AHTHENTICATOR,    "WPS:  * Key Wrap Authenticator")
TRC_MSG(INFO_WPS_BUILD_ENCR_SETTING,    "WPS:  * Encrypted Settings")
TRC_MSG(INFO_WPS_CHAGE_ADDR_FOR_AES,    "change address for AES handler")
TRC_MSG(INFO_WPS_BUILD_WFA_EXT_ATTR,    "build WFA EXT attr")
TRC_MSG(INFO_WPS_INVALID_VERSION_LEN,    "WPS: Invalid Version length %u")
TRC_MSG(INFO_WPS_INVALID_MSG_TYPE_LEN,    "WPS: Invalid Message Type length %u")
TRC_MSG(INFO_WPS_INVALID_ENROLLEE_NONCE_LEN,    "WPS: Invalid Enrollee Nonce length %u")
TRC_MSG(INFO_WPS_INVALID_REGISTRAR_NONCE,    "WPS: Invalid Registrar Nonce length %u")
TRC_MSG(INFO_WPS_INVALID_UUID_E_LEN,    "WPS: Invalid UUID-E length %u")
TRC_MSG(INFO_WPS_INVALID_UUID_R_LEN,    "WPS: Invalid UUID-R length %u")
TRC_MSG(INFO_WPS_INVALID_AUTHENTICATION_TYPE_FLAG_LEN,    "WPS: Invalid Authentication Type Flags length %u")
TRC_MSG(INFO_WPS_INVALID_ENCR_TYPE_FLAG_LEN,    "WPS: Invalid Encryption Type Flags length %u")
TRC_MSG(INFO_WPS_INVALID_CONN_TYPE_FLAG_LEN,    "WPS: Invalid Connection Type Flags length %u")
TRC_MSG(INFO_WPS_INVALID_CONFIG_METHODS_LEN,    "WPS: Invalid Config Methods length %u")
TRC_MSG(INFO_WPS_INVALID_SELECTED_REGISTRAR_CONFIG_LEN,    "WPS: Invalid Selected Registrar Config Methods length %u")
TRC_MSG(INFO_WPS_INVALID_PRIMARY_DEV_TYPE_LEN,    "WPS: Invalid Primary Device Type length %u")
TRC_MSG(INFO_WPS_INVALID_RF_BANDS_LEN,    "WPS: Invalid RF Bands length %u")
TRC_MSG(INFO_WPS_INVALID_ASSOC_STATE_LEN,    "WPS: Invalid Association State length %u")
TRC_MSG(INFO_WPS_INVALID_CONFIG_ERROR_LEN,    "WPS: Invalid Configuration Error length %u")
TRC_MSG(INFO_WPS_INVALID_DEV_PWID_LEN,    "WPS: Invalid Device Password ID length %u")
TRC_MSG(INFO_WPS_INVALID_OS_VERSION_LEN,    "WPS: Invalid OS Version length %u")
TRC_MSG(INFO_WPS_INVALID_WPS_STATE_LEN,    "WPS: Invalid Wi-Fi Protected Setup State length %u")
TRC_MSG(INFO_WPS_INVALID_AUTHENTICATOR_LEN,    "WPS: Invalid Authenticator length %u")
TRC_MSG(INFO_WPS_INVALID_R_HASH1_LEN,    "WPS: Invalid R-Hash1 length %u")
TRC_MSG(INFO_WPS_INVALID_R_HASH2_LEN,    "WPS: Invalid R-Hash2 length %u")
TRC_MSG(INFO_WPS_INVALID_E_HASH1_LEN,    "WPS: Invalid E-Hash1 length %u")
TRC_MSG(INFO_WPS_INVALID_E_HASH2_LEN,    "WPS: Invalid E-Hash2 length %u")
TRC_MSG(INFO_WPS_INVALID_R_SNONCE1_LEN,    "WPS: Invalid R-SNonce1 length %u")
TRC_MSG(INFO_WPS_INVALID_R_SNONCE2_LEN,    "WPS: Invalid R-SNonce2 length %u")
TRC_MSG(INFO_WPS_INVALID_E_SNONCE1_LEN,    "WPS: Invalid E-SNonce1 length %u")
TRC_MSG(INFO_WPS_INVALID_E_SNONCE2_LEN,    "WPS: Invalid E-SNonce2 length %u")
TRC_MSG(INFO_WPS_INVALID_KEY_WRAP_AUTH_LEN,    "WPS: Invalid Key Wrap Authenticator length %u")
TRC_MSG(INFO_WPS_INVALID_AUTH_TYPE_LEN,    "WPS: Invalid Authentication Type length %u")
TRC_MSG(INFO_WPS_INVALID_ENCR_TYPE_LEN,    "WPS: Invalid Encryption Type length %u")
TRC_MSG(INFO_WPS_INVALID_NETWORK_INDEX_LEN,    "WPS: Invalid Network Index length %u")
TRC_MSG(INFO_WPS_INVALID_NETWORK_KEY_INDEX_LEN,    "WPS: Invalid Network Key Index length %u")
TRC_MSG(INFO_WPS_INVALID_MAC_ADDR_LEN,    "WPS: Invalid MAC Address length %u")
TRC_MSG(INFO_WPS_INVALID_KEY_PROVIDED_LEN,    "WPS: Invalid Key Provided Automatically length %u")
TRC_MSG(INFO_WPS_INVALID_8021X_ENABLED_LEN,    "WPS: Invalid 802.1X Enabled length %u")
TRC_MSG(INFO_WPS_INVALID_SELECTED_REGISTRAR_ELN,    "WPS: Invalid Selected Registrar length %u")
TRC_MSG(INFO_WPS_INVALID_REQ_TYPE_LEN,    "WPS: Invalid Request Type length %u")
TRC_MSG(INFO_WPS_INVALID_RSP_TYPE_LEN,    "WPS: Invalid Response Type length %u")
TRC_MSG(INFO_WPS_SKIPPED_CRENDENTIAL_COUNT_OVERFLOW,    "WPS: Skipped Credential attribute (max %d credentials)")
TRC_MSG(INFO_WPS_INVALID_AP_SETUP_LOCKED_LEN,    "WPS: Invalid AP Setup Locked length %u")
TRC_MSG(INFO_WPS_UNSUPPORTED_ATTR_TYPE,    "WPS: Unsupported attribute type 0x%x len=%u")
TRC_MSG(INFO_WPS_INVALID_MSG_BYTES_REMAINING,    "WPS: Invalid message - %u bytes remaining")
TRC_MSG(INFO_WPS_WPS_ATTR_TYPE_LEN,    "WPS: attr type=0x%x len=%u")
TRC_MSG(INFO_WPS_ATTR_OVERFLOW,    "WPS: Attribute overflow")
TRC_MSG(INFO_WPS_NO_AUTHENTICATOR_ATTR_INCLUDED,    "WPS: No Authenticator attribute included")
TRC_MSG(INFO_WPS_NO_LAST_MSG_TO_VALIDATE_AC,    "WPS: Last message not available for validating authenticator")
TRC_MSG(INFO_WPS_INCORRECT_AC,    "WPS: Incorrect Authenticator")
TRC_MSG(INFO_WPS_NO_KWA_IN_DECRYPTED_ATTR,    "WPS: No KWA in decrypted attribute")
TRC_MSG(INFO_WPS_KWA_NOT_THE_END_OF_DECRYPTED_ATTR,    "WPS: KWA not in the end of the decrypted attribute")
TRC_MSG(INFO_WPS_INVALID_WKA,    "WPS: Invalid KWA")
TRC_MSG(INFO_WPS_CREDENTIAL_NOT_INCLUDE_NETWORK_INDEX,    "WPS: Credential did not include Network Index")
TRC_MSG(INFO_WPS_NETWORK_INDEX,    "WPS: Network Index: %d")
TRC_MSG(INFO_WPS_CREDENTIAL_NOT_INCLUDE_SSID,    "WPS: Credential did not include SSID")
TRC_MSG(INFO_WPS_CREDENTIAL_NOT_INCLUDE_AUTH_TYPE,    "WPS: Credential did not include Authentication Type")
TRC_MSG(INFO_WPS_CREDENTIAL_AUTH_TYPE,    "WPS: Authentication Type: 0x%x")
TRC_MSG(INFO_WPS_CREDENTIAL_NOT_INCLUDE_ENCR_TYPE,    "WPS: Credential did not include Encryption Type")
TRC_MSG(INFO_WPS_CREDENTIAL_ENCR_TYPE,    "WPS: Encryption Type: 0x%x")
TRC_MSG(INFO_WPS_CREDENTIAL_NETWORK_KEY_INDEX,    "WPS: Network Key Index: %d")
TRC_MSG(INFO_WPS_CREDENTIAL_NOT_INCLUDE_NETWORK_KEY,    "WPS: Credential did not include Network Key")
TRC_MSG(INFO_WPS_CREDENTIAL_NOT_INLCUDE_MAC_ADDR,    "WPS: Credential did not include MAC Address")
TRC_MSG(INFO_WPS_CREDENTIAL_MAC_ADDR,    "WPS: MAC Address %02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_WPS_KEY_PROVIDED_AUTO,    "WPS: Key Provided Automatically: %d")
TRC_MSG(INFO_WPS_CREDENTIAL_8021XENABLE,    "WPS: 802.1X Enabled: %d")
TRC_MSG(INFO_WPS_CRED_WORKAROUND_NULL_TERMINATION,    "WPS: Workaround - remove NULL termination from ASCII passphrase")
TRC_MSG(INFO_WPS_PROCESS_CREDENTIAL,    "WPS: Process Credential")
TRC_MSG(INFO_WPS_PROCESS_AP_SETTING,    "WPS: Processing AP Settings")
TRC_MSG(INFO_WPS_PEER_DH_PUBKEY_NOT_AVAILABLE,    "WPS: Peer DH public key not available")
TRC_MSG(INFO_WPS_FAILED_DERIVE_DH_SHARE_KEY,    "WPS: Failed to derive DH shared key")
TRC_MSG(INFO_WPS_NO_ENCR_SETTING_RECEIVED,    "WPS: No Encrypted Settings received")
TRC_MSG(INFO_WPS_ADJUST_ADDR_FOR_AES_DECR,    "adjust address for AES decrypt")
TRC_MSG(INFO_WPS_INVALID_PKCS5_V2_PAD,    "WPS: Invalid PKCS#5 v2.0 pad value")
TRC_MSG(INFO_WPS_INVALID_PKCS5_V2_PAD_STRING,    "WPS: Invalid PKCS#5 v2.0 pad string")
TRC_MSG(INFO_WPS_BUILD_MANUFACTURER,    "WPS:  * Manufacturer")
TRC_MSG(INFO_WPS_BUILD_MODEL_NAME,    "WPS:  * Model Name")
TRC_MSG(INFO_WPS_BUILD_MODEL_NUMBER,    "WPS:  * Model Number")
TRC_MSG(INFO_WPS_BUILD_SERIAL_NUMBER,    "WPS:  * Serial Number")
TRC_MSG(INFO_WPS_BUILD_PRIMARY_DEV_TYPE,    "WPS:  * Primary Device Type")
TRC_MSG(INFO_WPS_BUILD_DEV_NAME,    "WPS:  * Device Name")
TRC_MSG(INFO_WPS_BUILD_OS_VERSION,    "WPS:  * OS Version")
TRC_MSG(INFO_WPS_BUILD_RF_BANDS,    "WPS:  * RF Bands (%x)")
TRC_MSG(INFO_WPS_NO_MANUFACTURER_RECEIVED,    "WPS: No Manufacturer received")
TRC_MSG(INFO_WPS_NO_MODEL_NAME_RECEIVED,    "WPS: No Model Name received")
TRC_MSG(INFO_WPS_NO_MODEL_NUMBER_RECEIVED,    "WPS: No Model Number received")
TRC_MSG(INFO_WPS_NO_SERIAL_NUMBER_RECEIVED,    "WPS: No Serial Number received")
TRC_MSG(INFO_WPS_NO_DEV_NAME_RECEIVED,    "WPS: No Device Name received")
TRC_MSG(INFO_WPS_NO_PRIMARY_DEV_TYPE_RECEIVED,    "WPS: No Primary Device Type received")
TRC_MSG(INFO_WPS_RECEIVED_PRIMARY_DEV_TYPE,    "WPS: Primary Device Type: category %d OUI %x sub-category %d")
TRC_MSG(INFO_WPS_NO_OS_VERSION_RECEIVED,    "WPS: No OS Version received")
TRC_MSG(INFO_WPS_RECEIVED_OS_VERSION,    "WPS: OS Version %0x")
TRC_MSG(INFO_WPS_NO_RF_BANDS_RECEIVED,    "WPS: No RF Bands received")
TRC_MSG(INFO_WPS_RECEIVED_RF_BANDS,    "WPS: Enrollee RF Bands 0x%x")
TRC_MSG(INFO_WPS_BUILD_MAC_ADDR,    "WPS:  * MAC Address")
TRC_MSG(INFO_WPS_BUILD_WPS_STATE,    "WPS:  * Wi-Fi Protected Setup State (%d)")
TRC_MSG(INFO_WPS_NO_DH_FOR_E_HASH_DERIVE,    "WPS: DH public keys not available for E-Hash derivation")
TRC_MSG(INFO_WPS_BUILD_E_HASH1,    "WPS:  * E-Hash1")
TRC_MSG(INFO_WPS_BUILD_E_HASH2,    "WPS:  * E-Hash2")
TRC_MSG(INFO_WPS_BUILD_E_SNONCE1,    "WPS:  * E-SNonce1")
TRC_MSG(INFO_WPS_BUILD_E_SNONCE2,    "WPS:  * E-SNonce2")
TRC_MSG(INFO_WPS_BUILD_MSG_M1,    "WPS: Building Message M1")
TRC_MSG(INFO_WPS_BUILD_MSG_M3,    "WPS: Building Message M3")
TRC_MSG(INFO_WPS_NO_DEV_PW_IN_M3,    "WPS: No Device Password available")
TRC_MSG(INFO_WPS_BUILD_MSG_M5,    "WPS: Building Message M5")
TRC_MSG(INFO_WPS_BUILD_CRED_SSID,    "WPS:  * SSID")
TRC_MSG(INFO_WPS_BUILD_CRED_AUTH_TYPE,    "WPS:  * Authentication Type")
TRC_MSG(INFO_WPS_BUILD_CRED_ENCR_TYPE,    "WPS:  * Encryption Type")
TRC_MSG(INFO_WPS_BUILD_CRED_NETWORK_KEY,    "WPS:  * Network Key")
TRC_MSG(INFO_WPS_BUILD_CRED_MAC_ADDR,    "WPS:  * MAC Address (AP BSSID)")
TRC_MSG(INFO_WPS_BUILD_CRED_AP_SETTING,    "WPS:  * AP Settings (pre-configured)")
TRC_MSG(INFO_WPS_BUILD_MSG_M7,    "WPS: Building Message M7")
TRC_MSG(INFO_WPS_BUILD_WSC_DONE,    "WPS: Building Message WSC_Done")
TRC_MSG(INFO_WPS_BUILD_WSC_ACK,    "WPS: Building Message WSC_ACK")
TRC_MSG(INFO_WPS_BUILD_MSG_NACK,    "WPS: Building Message WSC_NACK")
TRC_MSG(INFO_WPS_UNSUPPORTED_STA_FOR_BUILD_MSG,    "WPS: Unsupported state %d for building a message")
TRC_MSG(INFO_WPS_NO_REGISTRAR_NONCE_RECEIVED,    "WPS: No Registrar Nonce received")
TRC_MSG(INFO_WPS_NO_ENROLLEE_NONCE_RECEIVED,    "WPS: No Enrollee Nonce received")
TRC_MSG(INFO_WPS_NO_UUID_R_RECEIVED,    "WPS: No UUID-R received")
TRC_MSG(INFO_WPS_NO_PUBKEY_RECEIVED,    "WPS: No Public Key received")
TRC_MSG(INFO_WPS_NO_R1_HASH1_RECEIVED,    "WPS: No R-Hash1 received")
TRC_MSG(INFO_WPS_NO_R1_HASH2_RECEIVED,    "WPS: No R-Hash2 received")
TRC_MSG(INFO_WPS_NO_R_SNONCE1_RECEIVED,    "WPS: No R-SNonce1 received")
TRC_MSG(INFO_WPS_R_HASH1_NOT_MATCH,     "WPS: R-Hash1 derived from R-S1 does not match with the pre-committed value")
TRC_MSG(INFO_WPS_PROVED_HALF_DEV_PASSWORD,    "WPS: Registrar proved knowledge of the first half of the device password")
TRC_MSG(INFO_WPS_NO_R_SNONCE2_RECEIVED,    "WPS: No R-SNonce2 received")
TRC_MSG(INFO_WPS_R_HASH2_NOT_MATCH,    "WPS: R-Hash2 derived from R-S2 does not match with the pre-committed value")
TRC_MSG(INFO_WPS_PROVED_SENCOND_HALF_DEV_PASSWORD,    "WPS: Registrar proved knowledge of the second half of the device password")
TRC_MSG(INFO_WPS_RECEIVED_CREDENTIAL,    "WPS: Received Credential")
TRC_MSG(INFO_WPS_MAC_NOT_MATCH_IN_CRED, "WPS: MAC Address in the Credential (%02x:%02x:%02x:%02x:%02x:%02x) does not match with own address (%02x:%02x:%02x:%02x:%02x:%02x)")
TRC_MSG(INFO_WPS_NO_CREDENTIAL_AT_RECEIVED,    "WPS: No Credential attributes received")
TRC_MSG(INFO_WPS_RECEIVED_NEW_AP_CONFIG,    "WPS: Received new AP configuration from Registrar")
TRC_MSG(INFO_WPS_MAC_NOT_MATCH_IN_AP_SETTING, "WPS: MAC Address in AP setting (%02x:%02x:%02x:%02x:%02x:%02x) does not match with own address (%02x:%02x:%02x:%02x:%02x:%02x)")
TRC_MSG(INFO_WPS_PROCESS_M2,    "WPS: Received M2")
TRC_MSG(INFO_WPS_UNEXPECTED_STA_FOR_RX_M2,    "WPS: Unexpected state (%d) for receiving M2")
TRC_MSG(INFO_WPS_AP_SETUP_LOCKED,    "WPS: AP Setup is locked - refuse registration of a new Registrar")
TRC_MSG(INFO_WPS_PROCESS_M2D,    "WPS: Received M2D")
TRC_MSG(INFO_WPS_UNEXPECTED_STA_FOR_RX_M2D,    "WPS: Unexpected state (%d) for receiving M2D")
TRC_MSG(INFO_WPS_PROCESS_M4,    "WPS: Received M4")
TRC_MSG(INFO_WPS_UNEXPECTED_STA_FOR_RX_M4,    "WPS: Unexpected state (%d) for receiving M4")
TRC_MSG(INFO_WPS_FAIL_DECRYPT_ENCR_SETTING,    "WPS: Failed to decrypted Encrypted Settings attribute")
TRC_MSG(INFO_WPS_PROCESS_DECRYPTED_SETTING_AT,    "WPS: Processing decrypted Encrypted Settings attribute")
TRC_MSG(INFO_WPS_PROCESS_M4_OVER,    "WPS: process M4 over")
TRC_MSG(INFO_WPS_PROCESS_M6,    "WPS: Received M6")
TRC_MSG(INFO_WPS_UNEXPECTED_STA_FOR_RX_M6,    "WPS: Unexpected state (%d) for receiving M6")
TRC_MSG(INFO_WPS_PROCESS_M8,    "WPS: Received M8")
TRC_MSG(INFO_WPS_UNEXPECTED_STA_FOR_RX_M8,    "WPS: Unexpected state (%d) for receiving M8")
TRC_MSG(INFO_WPS_RECEIVED_WSC_MSG,    "WPS: Received WSC_MSG")
TRC_MSG(INFO_WPS_UNSUPPORTED_MSG_VERSION,    "WPS: Unsupported message version 0x%x")
TRC_MSG(INFO_WPS_MISMATCH_IN_ENROLLEE_NONCE,    "WPS: Mismatch in enrollee nonce")
TRC_MSG(INFO_WPS_NO_MSG_TYPE_AT,    "WPS: No Message Type attribute")
TRC_MSG(INFO_WPS_UNSUPPORTED_MSG_TYPE,    "WPS: Unsupported Message Type %d")
TRC_MSG(INFO_WPS_RECEIVED_WSC_ACK,    "WPS: Received WSC_ACK")
TRC_MSG(INFO_WPS_INVALID_MSG_TYPE,    "WPS: Invalid Message Type %d")
TRC_MSG(INFO_WPS_MISMATCH_IN_REGISTRAR_NONCE,    "WPS: Mismatch in registrar nonce")
TRC_MSG(INFO_WPS_EXTERNAL_REGISTRATION_DONE,    "WPS: External Registrar registration completed successfully")
TRC_MSG(INFO_WPS_RECEIVED_WSC_NACK,    "WPS: Received WSC_NACK")
TRC_MSG(INFO_WPS_NO_CONFIG_ERROR_AT_IN_WSC_NACK,    "WPS: No Configuration Error attribute in WSC_NACK")
TRC_MSG(INFO_WPS_REGISTRAR_TERMINATE_REGISTRATION,     "WPS: Registrar terminated negotiation with Configuration Error %d")
TRC_MSG(INFO_WPS_PROCESS_RECEIVED_MSG,    "WPS: Processing received message (len=%u ,op_code=%d)")
TRC_MSG(INFO_WPS_UNSUPPORTED_OP_CODE,    "WPS: Unsupported op_code %d")
TRC_MSG(INFO_WPS_SUCCESS_CODE,    "wps_success=%d ")
TRC_MSG(INFO_WPS_FAIL_WITH_BSSID,    "EAP_WSC fail with BSSID %02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_WPS_ASSOC_WITH_NEW_CRED,    "WPS: Network configuration replaced - try to associate with the received credential")
TRC_MSG(INFO_WPS_UPDATE_CURRENT_SSID,    "update wpa_s with cur_ssid")
TRC_MSG(INFO_WPS_LASTEST_KEY_MGMT,    "lastest wpa_s key_mgmt=%d,proto=%d, pair_cipher=%d, gp_cipher=%d")
TRC_MSG(INFO_WPS_REGISTRATION_DONE_WAIT_CRED_PROCESS,    "WPS: Registration completed - waiting for external credential processing")
TRC_MSG(INFO_WPS_FETCH_SSID_FROM_SCAN_RESULT,    "fetch a ssid form wps->scan_result")
TRC_MSG(INFO_WPS_AP_FOUND_FROM_SCAN_RESULT,    "WPS: AP found from scan results")
TRC_MSG(INFO_WPS_NO_AP_IN_SCAN_RESULT,    "WPS: The AP was not found from scan results - use credential as-is")
TRC_MSG(INFO_WPS_NOT_ADVERTISE_WPA_SUPPORT_YET,    "WPS: The AP did not yet advertise WPA support - use credential as-is")
TRC_MSG(INFO_WPS_ADD_CCMP_INTO_CRED,    "WPS: Add CCMP into the credential based on scan results")
TRC_MSG(INFO_WPS_ADD_WPA2_INTO_CRED,    "WPS: Add WPA2 into the credential based on scan results")
TRC_MSG(INFO_WPS_AUTHENTICATION_TYPE_CODE,    "WPS: Authentication Type %x")
TRC_MSG(INFO_WPS_ENCR_TYPE_CODE,    "WPS: Encryption Type %x")
TRC_MSG(INFO_WPS_NETWORK_KEY_INDEX_CODE,    "WPS: Network Key Index %d")
TRC_MSG(INFO_WPS_MAC_ADDR_IN_CRED,    "WPS: MAC Address %02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_WPS_WA_CONVERT_TO_WPA2PSK,    "WPS: Workaround - convert mixed-mode auth_type into WPA2PSK")
TRC_MSG(INFO_WPS_IGNOR_CRED_UNSUPPORTED_AHTH_TYPE,    "WPS: Ignored credentials for unsupported authentication type 0x%x")
TRC_MSG(INFO_WPS_REPLACE_WPS_NETWORK_BLOCK,    "WPS: Replace WPS network block based on the received credential")
TRC_MSG(INFO_WPS_CREATE_NEW_CREDENTIAL,    "WPS: Create a new network based on the received credential")
TRC_MSG(INFO_WPS_INVALID_WEP_KEY_LEN,    "WPS: Invalid WEP Key length ")
TRC_MSG(INFO_WPS_INVALID_WEP_KEY_INDEX,    "WPS: Invalid WEP Key index %d")
TRC_MSG(INFO_WPS_INVALID_WEP_KEY,    "WPS: Invalid WEP Key %d")
TRC_MSG(INFO_WPS_INVALID_NETWORK_KEY,    "WPS: Invalid Network Key")
TRC_MSG(INFO_WPS_INVALID_NETWORK_KEY_LEN,    "WPS: Invalid Network Key length %u")
TRC_MSG(INFO_WPS_M2D_EVENT,    "dev_password_id=%d config_error=%d")
TRC_MSG(INFO_WPS_EVENT_FAIL_MSG,    "msg=%d")
TRC_MSG(INFO_WPS_PIN_ENROLLEE_ID_LEN,    "id len=%d")
TRC_MSG(INFO_WPS_SSID_MATCH_IN_CLEAR_WPS,    "ssid %x match")
TRC_MSG(INFO_WPS_REQ_OPERTATION_TIMEOUT,    "WPS-TIMEOUT Requested operation timed out")
TRC_MSG(INFO_WPS_MORE_THAN_ONE_SSID_FOUND_USE_WILDCARD,    "WPS: More than one SSID found for the AP; use wildcard")
TRC_MSG(INFO_WPS_ADD_SSID_INTO_CONFIG,    "add ssid into config,")
TRC_MSG(INFO_WPS_RX_NEWPSK_FOR_STA,    "WPS: Received new WPA/WPA2-PSK from WPS for STA %02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_WPS_WPA_S_CONTEX_ADDR,    "in eap, wpa_s = %x")
TRC_MSG(INFO_WPS_CREATE_WPS_ADDR,    "in eap, create wps = %x")
TRC_MSG(INFO_WPS_ADDR_IN_WPA_CONTEX,    "in eap, set wpa_s->wps = %x")
TRC_MSG(INFO_WPS_OFFSET_IN_WPA_S,    "in eap, wps offset in wpa_s= %x")
TRC_MSG(INFO_WPS_SKIP_NON_WPS_IE,    "   skip - non-WPS IE")
TRC_MSG(INFO_WPS_SKIP_AP_WO_ACTIVE_PBC,    "   skip - WPS AP without active PBC Registrar")
TRC_MSG(INFO_WPS_SELECTED_BASED_ON_WPS_IE,    "selected based on WPS IE (Active PBC)")
TRC_MSG(INFO_WPS_SELECTED_BASED_WPS_IE,    "   selected based on WPS IE")
TRC_MSG(INFO_WPS_SELECTED_BASED_ON_PIN_IE,    "   selected based on WPS IE (Active PIN)")
TRC_MSG(INFO_WPS_CONFIG_SSID_IS_PBC,    "config ssid is pbc enrollee")
TRC_MSG(INFO_WPS_CONFIG_SSID_IS_PIN,    "config ssid is pin  enrollee")











































// memory mgmt related
TRC_MSG(INFO_SUPC_CHK_MEM_LEAK_ADDR_INFO,   "Mem_Addr: %x, Line: %d, size: %d")
TRC_MSG(INFO_SUPC_CHK_MEM_LEAK_SUPC_HIGH_WATERMARK,   "supc_mem_high_watermark = %d")
TRC_MSG(INFO_SUPC_CHK_MEM_LEAK_SSL_HIGH_WATERMARK,   "ssl_mem_high_watermark = %d")
TRC_MSG(INFO_SUPC_CHK_MEM_LEAK_TOTAL_HIGH_WATERMARK,   "supc_total_high_watermark = %d")
TRC_MSG(INFO_SUPC_CHK_MEM_LEAK_TOTAL_INDEX_WATERMARK,   "supc_mem_index_high_watermark = %d")
TRC_MSG(INFO_SUPC_ALLOC_MEM_LOCATION,   "[SUPC] last allocater line: %d in file")
TRC_MSG(INFO_SUPC_FREE_MEM_LOCATION,   "[SUPC] free buffer %x, line: %d in file")
TRC_MSG(INFO_SUPC_WPA_BUF_OVERFLOW,   "wpabuf %x (size=%u used=%u) overflow len=%u")

// tst related trace
TRC_MSG(INFO_SUPC_TST_APFN_NUM,   "num of apfn_tst_handlers=%d")
TRC_MSG(INFO_SUPC_TST_BAD_INJECT_MSG,   "bad inject msg index")







//wps related trace

TRC_MSG(INFO_SUPC_FIND_WPS_AP,    "get a WPS AP wps_len=%d")
TRC_MSG(INFO_SUPC_CIPHER_IN_WPS, "set cipher in wps mode, ssid->proto=%d")
TRC_MSG(INFO_SUPC_SCAN_FOR_WPS, "do scan in 8s for wps")
TRC_MSG(INFO_SUPC_WPS_SET_OPENINFO, "set WPA_PROTO_WPS_OPEN info into WPS SSID ")
TRC_MSG(INFO_SUPC_WPS_CHECK_PROTO,  "check ssid->proto=%d,check pair_cipher=%d gp_cipher=%d")
TRC_MSG(INFO_SUPC_WPS_PBC_OVERLAP, "PBC session overlap")
TRC_MSG(INFO_SUPC_WPS_AP_SELECTED,  " wps AP is selected")
TRC_MSG(INFO_SUPC_WPS_AP_SECURITY,  "check ssid->proto=%d ")
TRC_MSG(INFO_SUPC_WPS_AP_SECURITY_MALFORMED, "malformed RSN or WPA IE")
TRC_MSG(INFO_SUPC_WPS_AP_SECURITY_RECHECK, "recheck ssid->proto=%d ")
TRC_MSG(INFO_SUPC_WPS_AP_SECURITY_PAIRE_RECHECK, "recheck pair_cipher=%d gp_cipher=%d")
TRC_MSG(INFO_SUPC_WPS_TST_CONN_REQ, "supc_tst_start_wps_connect_handler")
TRC_MSG(INFO_SUPC_WPS_FORCE_USE_PIN, "force to use wps_pin connection")
TRC_MSG(INFO_SUPC_WPS_TST_NORMAL, "use profile's connection type")
TRC_MSG(INFO_SUPC_WPS_TST_DISCONN, "inject disconnect !")
TRC_MSG(INFO_SUPC_WPS_TST_SWITCH_TYPE, "supc_tst_switch_conn_type")
TRC_MSG(INFO_SUPC_WPS_TST_BAD_PARAM, "bad param")
TRC_MSG(INFO_SUPC_WPS_STORE_PASSPHASE_LEN, "WPS: store passphase len=%d")
TRC_MSG(INFO_SUPC_WPS_PASSPHASE_EXCEED_30BYTES, "WPS: passphase exceed 30bytes")
TRC_MSG(INFO_SUPC_WPS_COPY_SSID_FROM_SCAN, "copy SSID form selected ssid,SSID:")
TRC_MSG(INFO_SUPC_WPS_SELECTED_AP_NOT_MATCH, "fatal error! AP selected does not match with specified one")
TRC_MSG(INFO_SUPC_WPS_START_TYPE, "start WPS conn_type=%d")
TRC_MSG(INFO_SUPC_WPS_CONTEX_ADDR, "in supc, wpa_s = %x, wpa_s->wps = %x")
TRC_MSG(INFO_SUPC_WPS_CONTEX_ADDR_OFFSET, "in supc, wps offset in wpa_s= %x")
TRC_MSG(INFO_SUPC_WPS_SET_CTX_IN_WPS,  "in supc, set ctx->wps=%x")
TRC_MSG(INFO_SUPC_WPS_CONF_NULL,  "wps->conf is NULL")
TRC_MSG(INFO_SUPC_WPS_MODE_SCANNING,  "WPS-mode scanning")
TRC_MSG(INFO_SUPC_NO_WPS_MODE_REFRESH, "no WPS-mode in used, refresh all APs")
TRC_MSG(INFO_SUPC_WPS_DONE_SKIP_BLACKLIST, "WPS DONE, skip blacklist procedure")
TRC_MSG(INFO_SUPC_WPS_DISCARD_CONN_CONFIRM, "discard this conn-confirm")
TRC_MSG(INFO_SUPC_WPS_CLEAN_WPA_CONTEX, "clean wpa context in eapol and eap")
TRC_MSG(INFO_SUPC_WPS_SEND_WPS_INFO_TO_ABM, "send wifi wps info to abm")
TRC_MSG(INFO_SUPC_WPS_SEND_WPS_MSG_INFO, "supc_send_abm_wifi_wps_info msgid=%d mapto %d")
TRC_MSG(INFO_SUPC_WPS_SEND_WPS_MSG_INFO2, "supc_send_abm_wifi_wps_info 2  msgid=%d mapto %d")
TRC_MSG(INFO_SUPC_WPS_SEND_WPS_MSG_INFO3, "supc_send_abm_wifi_wps_info 3  mod=%d mapto %d")
TRC_MSG(INFO_SUPC_WPS_INVALID_PARA, "invalid params in supc_send_abm_wifi_wps_info_ind type=%d, sec = %d")
TRC_MSG(INFO_SUPC_WPS_GET_IE, "get a IE  EID=%d, len=%d")
TRC_MSG(INFO_SUPC_WPS_VENDOR_TYPE, "vendor_type= %x")
TRC_MSG(INFO_SUPC_WPS_GET_WIFI_MULTI_FAIL, "get_wifi_ie_multi fail")
TRC_MSG(INFO_SUPC_ASSOC_VIA_WPS_IE, "assoc via WPS IE")
TRC_MSG(INFO_SUPC_WPS_EAPLO_CB, "wps_eapol_cb_ret=%d")
TRC_MSG(INFO_SUPC_WPS_EVENT_CRED_RECEIVED, "WPS-CRED-RECEIVED ")
TRC_MSG(INFO_SUPC_WPS_EVENT_WPS_SUCCESS, "WPS-SUCCESS ")













//WAPI related trace3
TRC_MSG(INFO_SUPC_IGNORE_WAI_AUTH_FRAME_WRONG_SM, "Ignore this WAPI frame because the pre-auth state machine is deinit")
TRC_MSG(INFO_SUPC_RX_WAI_FRAME_LEN, "receive ETH_P_WAI len %d\n")
TRC_MSG(INFO_SUPC_GET_WAPI_CERT_ID_CNF, "supc_get_cert_by_id_cnf_handler return %d\n")
TRC_MSG(INFO_SUPC_GET_WAPI_CLIENT_CERT_ID_CNF, "supc_get_cert_by_id_cnf_handler found client_cert_id %d\n")
TRC_MSG(INFO_SUPC_GET_WAPI_CLIENT_CERT2_ID_CNF, "supc_get_cert_by_id_cnf_handler found client_cert2_id %d\n")
TRC_MSG(INFO_SUPC_GET_WAPI_CLIENT_CERT_FILE_NAME, "supc_get_cert_by_id_cnf_handler client_cert file name\n")
TRC_MSG(INFO_SUPC_GET_WAPI_CLIENT_CERT2_FILE_NAME, "supc_get_cert_by_id_cnf_handler client_cert2 file name\n")
TRC_MSG(INFO_SUPC_WAPI_CONN_BSSID, "Own MAC address %02x:%02x:%02x:%02x:%02x:%02x,%02x:%02x:%02x:%02x:%02x:%02x!!")
TRC_MSG(INFO_SUPC_WAPI_GET_CERT1,    "supc_get_cert_and_privkey WAPI id %d\n")
TRC_MSG(INFO_SUPC_WAPI_GET_CERT2,    "supc_get_cert_and_privkey WAPI id2 %d\n")
TRC_MSG(INFO_SUPC_WAPI_OPEN_FILE_ERROR,    "Error occurs when doing FS_Open")
TRC_MSG(INFO_SUPC_WAPI_GET_FILE_INFO_ERROR,    "Error occurs when doing FS_GetFileInfo")
TRC_MSG(INFO_SUPC_WAPI_BUFFER_SIZE_ERROR,    "Error occurs buffer size is not large enough")
TRC_MSG(INFO_SUPC_WAPI_FS_RETURN_ERROR,    "Error FS_Read return value")
TRC_MSG(INFO_SUPC_WAPI_READ_COUNT_ERROR,  "Error occurs read count is not expected")
TRC_MSG(INFO_SUPC_WAPI_READ_PROFILE_UNEXPECTED,   "supc_read_profiles unexpected psk type %d\n")
TRC_MSG(INFO_SUPC_WAPI_READ_PROFILE_PSK_TYPE,   "supc_read_profiles profile psk type %d pair %d group %d key %d auth %d\n")
TRC_MSG(INFO_SUPC_WAPI_READ_PROFILE_CERTID,   "supc_read_profiles read certificate id %d\n")
TRC_MSG(INFO_SUPC_WAPI_PSK_TYPE_DUMP,   "wapi_psk_type %d pair %d group %d key %d proto %d auth %d cert_id %d cert2_id %d\n")
TRC_MSG(INFO_SUPC_DUMP_WAPI_PSK,   "wapi_psk:")
TRC_MSG(INFO_SUPC_NO_WAPI_IE,   "WAPI IE len is 0")
TRC_MSG(INFO_SUPC_WAPI_IE_TOO_SHORT,   "WAPI IE len too short %d")
TRC_MSG(INFO_SUPC_WAPI_IE_MALFORMED,   "malformed WAPI IE or unknown version")
TRC_MSG(INFO_SUPC_WAPI_IE_INVALID_AKM_COUNT,   "WAPI IE invalid AKM count %u")
TRC_MSG(INFO_SUPC_WAPI_IE_LEN_MISMATCH,   "WAPI IE length mismatch, %u too much")
TRC_MSG(INFO_SUPC_WAPI_IE_COUNT_BOTCH,   "WAPI IE count botch (pairwise), count %u left %u")
TRC_MSG(INFO_SUPC_WAPI_IE_TOO_SHORT_FOR_KEY_MGMT,   "WAPI IE too short (for key mgmt)")
TRC_MSG(INFO_SUPC_WAPI_IE_HAVE_TRAILING_BYTES,   "WAPI IE has %u trailing bytes - ignored")
TRC_MSG(INFO_SUPC_WAPI_KEY_NEG_COMPLETE,   "WPA: WAPI Key negotiation completed with %02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_SUPC_CANCEL_HANDOVER_TIMER,   "Cancel handover timer after 4-way and 2-way complete!!")
TRC_MSG(INFO_SUPC_CONN_REQ_PENDING,  "is_wpa_connect_req_pending %d, %02x:%02x:%02x:%02x:%02x:%02x, %02x:%02x:%02x:%02x:%02x:%02x\n")
TRC_MSG(INFO_SUPC_WAPI_START_TIMER,   "wapi_start_timert: %d sec %d usec %d period\n")
TRC_MSG(INFO_SUPC_WAPI_STOP_TIMER,   "wapi_stop_timer\n")
TRC_MSG(INFO_SUPC_WAPI_START_AUTH_TIMER,   "Setting WAPI authentication timeout: %d sec %d usec")
TRC_MSG(INFO_SUPC_WAPI_CANCEL_AUTH_TIMER,   "Cancelling authentication timeout")
TRC_MSG(INFO_SUPC_WAPI_DEAUTH,   "WIFI_Action_Deauth")
TRC_MSG(INFO_SUPC_WAPI_FAIL_READ_BSSID_FOR_WAI,   "Failed to read BSSID for WAI request")
TRC_MSG(INFO_SUPC_WAPI_FAIL_SET_MSK_TO_DRV,   "WPA: Failed to set MSK to the driver.")
TRC_MSG(INFO_SUPC_WAPI_INSTALL_USK_TO_DRV,   "WIFI_unicast_key_set: Installing USK to the driver.")
TRC_MSG(INFO_SUPC_WAPI_INSTALL_PTK_FAIL,   "WIFI_unicast_key_set: Failed to set PTK to the driver")
TRC_MSG(INFO_SUPC_WAPI_NO_SSID_OR_CERT,   "no selected ssid or user cert\n")
TRC_MSG(INFO_SUPC_WAPI_USER_CERT_LEN,   "user_len %d\n")
TRC_MSG(INFO_SUPC_WAPI_NO_SSID_OR_AS_CERT,   "no selected ssid or as cert\n")
TRC_MSG(INFO_SUPC_WAPI_AS_CERT_LEN,   "as_len %d\n")
TRC_MSG(INFO_SUPC_WAPI_NO_SSID_OR_PRIV_KEY,   "no selected ssid or private key\n")
TRC_MSG(INFO_SUPC_WAPI_PRIV_KEY_LEN,   "private key %d\n")
TRC_MSG(INFO_SUPC_WAPI_FAIL_PARSE_WPA_IE_FROM_AI,   "WPA: Failed to parse WPA IE from association info")
TRC_MSG(INFO_SUPC_WAPI_509_PRIV_KEY_LEN,     "private key %d\n")
TRC_MSG(INFO_SUPC_WAPI_509_USER_LEN,   "user_len %d\n")
TRC_MSG(INFO_SUPC_WAPI_509_AS_LEN,   "as_len %d\n")
TRC_MSG(INFO_SUPC_WAPI_GET_X509_PUBLIC,   "get_x509_cert public:  '%d' ")
TRC_MSG(INFO_SUPC_WAPI_GET_X509_PRIVATE,   "get_x509_cert private: '%d' ")
TRC_MSG(INFO_SUPC_WAPI_READ_CERT_FAIL_MALLOC_FAIL,   "read user certificate fails malloc fails\n")
TRC_MSG(INFO_SUPC_WAPI_READ_USER_CERTIFICATE_FAILS,   "read user certificate fails\n")
TRC_MSG(INFO_SUPC_WAPI_LOADX509_FAIL,   "WAPI: load_x509 fails %d")
TRC_MSG(INFO_SUPC_WAPI_TIMER_SET_TOO_LONG,   "timer_set: too long %d")
TRC_MSG(INFO_SUPC_WAPI_STRANGE_HEX_PSK,   "strange HEX PSK")
TRC_MSG(INFO_SUPC_WAPI_WAI_CNTAPPARA_SET_RESULT,   "WAI_CNTAPPARA_SET result %d")
TRC_MSG(INFO_SUPC_WAPI_ALLOC_RX_BUF_FAIL,   "WAPI: allocate RX buffer fails malloc_rxfrag %d")
TRC_MSG(INFO_SUPC_WAPI_WAI_FRAME_VERSION_WRONG,   "iwn_wpa_defrag: WPA: WAI frame Version(%u) is wrong")
TRC_MSG(INFO_SUPC_WAPI_WAI_FRAME_TYPE_WRONG,   "iwn_wpa_defrag - WPA: WAI frame type(%u) is wrong")
TRC_MSG(INFO_SUPC_WAPI_FRAME_LEN_WRONG,   "WPA: WAI frame length(%u) is wrong")
TRC_MSG(INFO_SUPC_WAPI_SERVER_ERROR_LEN,   "Severe error WPA: WAI frame length(%u) received frame len(%u)")
TRC_MSG(INFO_SUPC_WAPI_SERVER_ERROR_HEADER,   "Severe error WPA: WAI frame length(%u) WAI header min. len(%u)")
TRC_MSG(INFO_SUPC_WAPI_CHECK_ADD_ID, "bssid=%02x:%02x:%02x:%02x:%02x:%02x; ownaddr%02x:%02x:%02x:%02x:%02x:%02x")
TRC_MSG(INFO_SUPC_WAPI_WAI_FRAME_AE_CERT_TOO_LONG,   "WPA: WAI frame ae_cert too long")
TRC_MSG(INFO_SUPC_WAPI_WAI_TOO_SHORT_OR_LONG,   "WPA: WAI frame payload too short or too long")
TRC_MSG(INFO_SUPC_WAPI_ACQUIRE_TBUF_FAIL,   "fail acquire tbuf 0x%08x 0x%08x 0x%08x\n")
TRC_MSG(INFO_SUPC_WAPI_WAI_CERT_2_3_SEND,   "waigroup_cert_2_3_send as %d\n")
TRC_MSG(INFO_SUPC_WAPI_STA_KEY_NOT_SUPPORTABLE,   "WPA: STAKEY_NEG  is not supptable by ASUE")
TRC_MSG(INFO_SUPC_WAPI_SET_MSK2DRV_FAIL,   "WPA: Failed to set MSK to the driver.")






TRC_MSG(INFO_WNDRV_SUPC_DATA,                    "SUPC_DATA")
TRC_MSG(INFO_WNDRV_SUPC_INIT,                        "SUPC_INIT: version=%d, num_pmkids=%d, num_auth_encry_pairs_supported=%d, mac_addr=0x%x %x %x %x %x %x")
TRC_MSG(INFO_WNDRV_SUPC_DEINIT,                    "SUPC_DEINIT")
TRC_MSG(INFO_WNDRV_SUPC_SITE_SURVEY,             "SUPC_SITE_SURVEY: num=%d")
TRC_MSG(INFO_WNDRV_SUPC_NETWORK_CONNECT,    "SUPC_NETWORK_CONNECT")
TRC_MSG(INFO_WNDRV_SUPC_NETWORK_DISCONNECT, "SUPC_NETWORK_DISCONNECT")
TRC_MSG(INFO_WNDRV_SUPC_NETWORK_STATISTICS, "SUPC_NETWORK_STATISTICS: rssi=%d, current_data_rate=%d")
TRC_MSG(INFO_WNDRV_SUPC_PMKID_CANDIDATE,    "SUPC_PMKID_CANDIDATE: num=%d")
TRC_MSG(INFO_WNDRV_SUPC_STATUS,                      "SUPC_STATUS: bssid=0x%x %x %x %x %x %x, flags=0x%x")

/* ----------------- TRACE_WARNING trace class ---------------- */
TRC_MSG(WARNING_SUPC_WAPI_TOO_SHORT,     "WPA: WAI frame too short, len %d")
TRC_MSG(WARNING_SUPC_WAPI_VERSION,       "WPA: WAI frame Version(%u) is wrong")
TRC_MSG(WARNING_SUPC_WAPI_TYPE,          "WPA: WAI frame type(%u) is wrong")
TRC_MSG(WARNING_SUPC_WAPI_STYPE,         "WPA: WAI frame stype(%u) is wrong")
TRC_MSG(WARNING_SUPC_WAPI_LENGTH,        "WPA: WAI frame length(%u) is wrong")
TRC_MSG(WARNING_SUPC_WAPI_PKT_SC,        "WPA: WAI frame packets_sc(%u) is wrong")
TRC_MSG(WARNING_SUPC_WAPI_CERT_SUB,      "WPA: Can not find subject name")
TRC_MSG(WARNING_SUPC_WAPI_CERT_ISSUE,    "Can not find issurer name")
TRC_MSG(WARNING_SUPC_WAPI_SERIAL,        "Can not find serial no")
TRC_MSG(WARNING_SUPC_WAPI_ECHD_FAIL,     "asue_certauthbk_derivation ECHD fail : in :%d")
TRC_MSG(WARNING_SUPC_WAPI_CERT_UNAVAILABLE,        "No cert")
TRC_MSG(WARNING_SUPC_WAPI_WAI_WRONG,     "WPA: WAI frame is wrong")

TRC_MSG(WARNING_SUPC_WAPI_FAIL_SIGN,     "fail to sign data and will exit !!\n")

TRC_MSG(WARNING_SUPC_WAPI_FAIL_FLAG,     "WPA: not same flag bit 0,1!\n")
TRC_MSG(WARNING_SUPC_WAPI_FAIL_NASUE,    "WPA: not same Nasue!\n")
TRC_MSG(WARNING_SUPC_WAPI_FAIL_ASUE_KEY, "WPA: not same asue key data!,asue_len =%d,wpa_s->asue_key_data.length=%d\n")
TRC_MSG(WARNING_SUPC_WAPI_FAIL_AEID,     "WPA: not same ae id!\n")
TRC_MSG(WARNING_SUPC_WAPI_FAIL_CERT_FLAG, "cert result flag is not 2!\n")
TRC_MSG(WARNING_SUPC_WAPI_FAIL_CERT_RES, "cert result  is not ok!\n")
TRC_MSG(WARNING_SUPC_WAPI_FAIL_USKID,    "WPA: USKID  is not invalid")

TRC_MSG(WARNING_SUPC_WAPI_GET_PUBKEY,    "iwn_x509_get_pubkey: '%d' ")
//   TRC_MSG( WARNING_SUPC_WAPI_INVALID_CERT,  "%s: certificate %s has an invalid cert_index %u\n")
TRC_MSG(WARNING_SUPC_WAPI_ASU_FAIL,      "X509_verify(asu_cert) failure\n")
TRC_MSG(WARNING_SUPC_WAPI_USER_FAIL,     "X509_verify(user_cert) failure\n")

TRC_MSG(WARNING_SUPC_WAPI_AE_AUTH_FLG,   "WPA: ae_auth_flag not same!\n")
TRC_MSG(WARNING_SUPC_WAPI_ASUE_ID,       "WPA: not same asue id!\n")

TRC_MSG(WARNING_SUPC_WAPI_STAKEY_NEG,    "WPA: STAKEY_NEG  is not supptable by ASUE")
TRC_MSG(WARNING_SUPC_WAPI_MSKID,         "WPA: MSKID  is not invalid")
TRC_MSG(WARNING_SUPC_WAPI_ADDID,         "WPA: ADDID  is wrong")
TRC_MSG(WARNING_SUPC_WAPI_USKID,         "WPA: Key annoucement uskid  is wrong")
TRC_MSG(WARNING_SUPC_WAPI_MIC,           "WPA: Multicast  announcement packet mic  is wrong")
TRC_MSG(WARNING_SUPC_WAPI_WRONG_USKID,   "WPA: Key annoucement uskid  is wrong")

TRC_MSG(WARNING_SUPC_WAPI_AE_SIGN,       "AE sign error!!!\n")
TRC_MSG(WARNING_SUPC_WAPI_BKID_WRONG,    "WPA: BKID is wrong")

TRC_MSG(WARNING_SUPC_WAPI_ASUE_KEY,      "WPA: not same asue key data!,asue_len =%d,wpa_s->asue_key_data.length=%d\n")

TRC_MSG(WARNING_SUPC_WAPI_STATE,         "wpa_s->wapi_state <WAPISM_AL_ASSOC")

TRC_MSG(WARNING_SUPC_WAPI_BASE64_PRI,    "Base64 decode prikey error\n")
TRC_MSG(WARNING_SUPC_WAPI_BASE64_USER,   "Base64 decode user cert error\n")
TRC_MSG(WARNING_SUPC_WAPI_BASE64_AS,     "Base64 decode asu cert error\n")
TRC_MSG(WARNING_SUPC_WAPI_PRI_KEY,       "get prikey error. \n")
TRC_MSG(WARNING_SUPC_WAPI_ASU_PUB_KEY,   "get asu public key fial. \n")
TRC_MSG(WARNING_SUPC_WAPI_USER_CERT,     "get user cert error. \n")
TRC_MSG(WARNING_SUPC_WAPI_AS_CERT,       "get asu cert error. \n")
TRC_MSG(WARNING_SUPC_WAPI_VERI_FAIL,     "verify_key the public_private_key fail. \n")

/* ----------------- TRACE_ERROR trace class ------------------ */
TRC_MSG(ERROR_WAPI_FAIL_INS_USK,  "install usk failure\n")
TRC_MSG(ERROR_WAPI_FAIL_INS_MSK,  "install msk failure\n")

/* --------------TRACE_GROUP_9 trace class (WAPI)--------------------------------- */
TRC_MSG(INFO_SUPC_WAPI_TRACE,         "WPA: WAPI trace line #%d")
TRC_MSG(INFO_SUPC_WAPI_TIME_OUT,      "WAPI auth timer expiry")
TRC_MSG(INFO_SUPC_WAPI_PSK,           "PSK: type %d")
TRC_MSG(INFO_SUPC_WAPI_RX_WAI,        "iwn_wapi_sm_rx_wai  plen = '%d', hdr->length = '%d'. \n")
TRC_MSG(INFO_SUPC_WAPI_STYPE,         "WAI stype %d\n")

TRC_MSG(INFO_SUPC_WAPI_COMPLETE,       "WAPI handshake complete")

TRC_MSG(INFO_SUPC_WAPI_FLAG,          "WPA: in #%d,wpa_s->flag=%d, flag =%d")

TRC_MSG(INFO_SUPC_WAPI_ELOOP_ID,       "WPA: in #%d,iwn_eloop.asue_id.id_len=%d")
TRC_MSG(INFO_SUPC_WAPI_REQ_LEN,        "WPA: in #%d,request_len=%d,len=%d")
TRC_MSG(INFO_SUPC_WAPI_AE_CERT,        "WPA: in #%d,wpa_s->ae_cert.len=%d")
TRC_MSG(INFO_SUPC_WAPI_USED_CERT,      "WPA: in #%d,used_cert=%d")
TRC_MSG(INFO_SUPC_WAPI_AE_ID,          "WPA: in #%d,request_len=%d,wpa_s->ae_id.id_len=%d")
TRC_MSG(INFO_SUPC_WAPI_ASUE_ID,        "WPA: in #%d,request_len=%d,wpa_s->asue_id.id_len=%d")

TRC_MSG(INFO_SUPC_WAPI_ECC_VERIFY,     "after x509_ecc_verify_key")
TRC_MSG(INFO_SUPC_WAPI_COMPLETE_CERT,  "get_x509_cert over\n")
TRC_MSG(INFO_SUPC_WAPI_ASU_CERT,       "asu cert infor(asu_cert)  '%d'\n")
TRC_MSG(INFO_SUPC_WAPI_USER_CERT,      "user cert infor(user_cert)  '%d'\n")
TRC_MSG(INFO_SUPC_WAPI_PUBLIC,         "get_x509_cert public:  '%d' ")
TRC_MSG(INFO_SUPC_WAPI_PRIVATE,        "get_x509_cert private: '%d' ")

TRC_MSG(INFO_SUPC_WAPI_509_PUB,       "iwn_x509_get_pubkey: tmp = '%d', '%d' ")
TRC_MSG(INFO_SUPC_WAPI_GET_SIGN,      "iwn_x509_get_sign_inlen: '%d'")
TRC_MSG(INFO_SUPC_WAPI_GET_509,       "get_x509_cert: '%d' ")

/* --------------TRACE_GROUP_10 trace class (WAPI certificate & security )--------------------------------- */
END_TRACE_MAP(MOD_SUPC)

#endif /* _SUPC_TRC_H */


