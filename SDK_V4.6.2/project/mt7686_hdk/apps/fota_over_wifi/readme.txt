/* Copyright Statement:
 *
 * (C) 2005-2016  MediaTek Inc. All rights reserved.
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. ("MediaTek") and/or its
 * licensors. Without the prior written permission of MediaTek and/or its
 * licensors, any reproduction, modification, use or disclosure of MediaTek
 * Software, and information contained herein, in whole or in part, shall be
 * strictly prohibited. You may only use, reproduce, modify, or distribute
 * (as applicable) MediaTek Software if you have agreed to and been bound by
 * the applicable license agreement with MediaTek ("License Agreement") and
 * been granted explicit permission to do so within the License Agreement
 * ("Permitted User").  If you are not a Permitted User, please cease any
 * access or use of MediaTek Software immediately.
 */

/**
 * @addtogroup mt7687_hdk mt7687_hdk
 * @{
 * @addtogroup mt7687_hdk_apps apps
 * @{
 * @addtogroup mt7687_hdk_apps_iot_sdk_demo iot_sdk_demo
 * @{

@par Overview
  - Example project description
    - This project demonstrates the Wi-Fi connectivity and low power consumption 
      features of the LinkIt 7687 HDK through the following:
      - How to use the Wi-Fi profile settings stored in the NVDM to initialize
        the Wi-Fi.
      - How to use the tickless feature to achieve low power consumption.
  - Application features
    - Act as a Wi-Fi station to connect to a Wi-Fi network.
    - Act as a Wi-Fi AP to accept connection to the LinkIt 7687 HDK using a
      handheld device or a laptop computer.
    - Ping out or into the device.
    - All Wi-Fi Command Line Interface (CLI) commands are supported in this
      project.

@par Hardware and software environment
  - Supported platform
    - MediaTek LinkIt 7687 HDK.
  - HDK switches and pin configuration
    - J36 provides the pins for GPIOs, PWMs, SPI master chip select 0, SPI
      master, UART1 RX/TX.
    - J35 provides the pins for GPIOs, PWMs, UART2 RX/TX, UART1 RTS/CTS, SPI
      master chip select 1, IR TX and IR RX.
    - J34 provides the pins for GPIOs, PWMs, UART2 RTS/CTS, I2S, SPI slave, and
      I2C0.
    - J33 provides the pins for GPIOs, PWMs, I2C0, ADC0~3.
    - J32 provides the pins for GND, 5V, 3.3V and reset pin.
    - J25 set the HDK to either Flash Normal mode or Flash Recovery mode.
      To update the firmware on the LinkIt 7687 HDK:
       - Set the jumper J25 to FLASH Recovery mode, the jumpers J23, J26, J27
         and J30 should be on.
       - In this mode, if the power is on, the board will load ROM code and start
         the ATE Daemon or Firmware Upgrade Daemon 
         according to the MT76x7 Flash Tool’s behavior on the PC.
      To run the project on the LinkIt 7687 HDK:
       - Set the jumper J25 off to switch to FLASH Normal mode, the jumpers J23,
         J26, J27 and J30 should be on.
       - In this mode, if the power is on, the board will load firmware from the
         flash and reboot.
    - There are three buttons on the board:
      - RST - reset.
      - EINT - external interrupt trigger.
      - RTC_INT - RTC interrupt trigger.
  - Environment configuration
    - A serial tool is required, such as hyper terminal or TeraTerm for UART
      logging.
    - COM port settings. baudrate: 115200, data bits: 8, stop bit: 1, parity:
      none and flow control: off.

@par Directory contents
  - Source and header files
    - \b src/cli_cmds.c            CLI commands of this project.
    - \b src/cli_def.c             CLI initialize sequence code.
    - \b src/ept_eint_var.c        EINT configuration file generated by
                                        Easy Pinmux Tool(EPT). Please do
                                        not edit the file.
    - \b src/ept_gpio_var.c        GPIO configuration file generated by
                                        Easy Pinmux Tool(EPT). Please do not
                                        edit the file.
    - \b src/main.c                Entry point of the application program.
    - \b src/wifi_nvdm_config.c    Default user configuration file.
    - \b src/sys_init.c            Aggregated initialization routines.
    - \b src/system_mt7687.c       MT7687 system clock configuration file.
    - \b src/wifi_lwip.c           LwIP configuration.
    - \b inc/cli_cmds.h            Declares the reference point of CLI
                                        commands of cli_cmds.c. To be used
                                        by cli_def.c
    - \b inc/FreeRTOSConfig.h      MT7687 FreeRTOS configuration file.
    - \b inc/ept_eint_drv.h        The EINT configuration file generated
                                        by Easy Pinmux Tool(EPT). Please do
                                        not edit the file.
    - \b inc/ept_gpio_drv.h        The GPIO configuration file generated
                                        by Easy Pinmux Tool(EPT). Please do
                                        not edit the file.
    - \b inc/flash_map.h           MT7687 memory layout symbol file.
    - \b inc/hal_feature_config.h  MT7687 HAL API feature configuration
                                        file.
    - \b inc/lwipopts.h            LwIP configuration.
    - \b inc/sys_init.h            Prototype declaration for \b src/sys_init.c.
    - \b inc/task_def.h            The configuration of running tasks of
                                        the project.
    - \b inc/wifi_lwip.h           Prototype declaration for \b src/wifi_lwip.c.
    - \b inc/wifi_nvdm_config.h    Prototype declaration for default user
                                        configuration file.

  - Project configuration files using GCC.
    - \b GCC/Makefile              GNU Makefile for this project.
    - \b GCC/feature.mk            Generic feature options configuration
                                        file.
    - \b GCC/mt7687_flash.ld       Linker script.
    - \b GCC/startup_mt7687.s      MT7687 startup file.
    - \b GCC/syscalls.c            MT7687 syscalls implementation.

  - Project configuration files using Keil.
    - \b MDK-ARM/RTE/Device/7687_32M_MXIC.FLM
    - \b MDK-ARM/RTE/Device/flash.ini
    - \b MDK-ARM/RTE/RTE_Components.h
    - \b MDK-ARM/flash.sct          Scatter file.
    - \b MDK-ARM/iot_sdk_demo.uvprojx    µVision5 Project File. Contains the
                                         project structure in XML format.
    - \b MDK-ARM/startup_mt7687.s   MT7687 startup file.

  - Project configuration files using IAR.
    - \b EWARM/flash.icf           Linker configuration file.
    - \b EWARM/iot_sdk_demo.ewd         Debugger settings file.
    - \b EWARM/iot_sdk_demo.ewp         Project file
    - \b EWARM/iot_sdk_demo.ewt         C-STAT and C-RUN settings.
    - \b EWARM/iot_sdk_demo.eww         Workspace file
    - \b EWARM/startup_mt7687.s    MT7687 startup file.
@par Run the examples
  - Connect the board to a PC with a USB cable.
  - Build the example project and download the binary file to the LinkIt
    7687 HDK.
  - Reboot the HDK, the console will show "FreeRTOS Running" message to
    indicate the HDK is booting up.
  - Use '?' and enter to query the available command line options.
    Note that the command line options are still under development and subject
    to change without notice.
  - Below are two examples to demonstrate the Wi-Fi station and Wi-Fi access
    point modes of the LinkIt 7687 HDK.
  - Example 1. Wi-Fi station mode.
    - Find your Wi-Fi access point settings:
      Before connecting to a Wi-Fi access point, the following information
      needs to be collected:
      -# The SSID of your Wi-Fi access point.
      -# The authentication mode of your Wi-Fi access point.
          In general, the authentication mode is WPA PSK or WPA2 PSK.
          To change the mode, please refer to Table 1 for the list of supported
          authentication modes.
      -# The password of your Wi-Fi access point.
      -# The encryption mode of your Wi-Fi access point.
          In general, AES or TKIP is used.
          To change the mode, please refer to Table 2 for the list of supported
          encryption modes.
    - Once the information is collected, use the following commands to configure
      the LinkIt 7687 HDK. The example code in main.c assumes either WPA PSK or
      WPA2 PSK is used for authentication, TKIP or AES for encryption, 'myhome'
      (length 6) for the SSID, and the password of the WPA or WPA2 is
      '12345678' (length 8).
      \code
        config write STA AuthMode 9
        config write STA EncrypType 8
        config write STA Ssid myhome
        config write STA SsidLen 6
        config write STA WpaPsk 12345678
        config write STA WpaPskLen 8
        config write common OpMode 1
      \endcode
    - Press the reset button on the LinkIt 7687 HDK to restart the system.
    - Boot up with the new configuration.
      If everything is correct, similar messages will be shown in the console
      to notify your HDK has received an IP address.
      \code
        DHCP got IP:10.10.10.101
      \endcode
    - PING from the LinkIt 7687 HDK (SDK v3.1.0).
      If the IP address is fetched and the network is operating, the LinkIt
      7687 can ping other devices on the network with the following
      command in the console.
      \code
        f 11 10.10.10.254 3 64
      The ping stops after sending three packets to 10.10.10.254.
      The ping usage is: f 11 <ip address> <times> <ping packet length>
      \endcode
    - Wi-Fi configuration options for AuthMode and EncrypType.
      \code
      +---+-------------------------------------+
      | 0 | open, no security                   |
      +---+-------------------------------------+
      | 4 | WPA PSK                             |
      +---+-------------------------------------+
      | 7 | WPA2 PSK                            |
      +---+-------------------------------------+
      | 9 | Support both WPA and WPA2 PSK       |
      +---+-------------------------------------+
      Table 1. Supported AuthMode(s)

      +---+------------------------+
      | 0 | WEP                    |
      +---+------------------------+
      | 1 | No encryption          |
      +---+------------------------+
      | 4 | TKIP                   |
      +---+------------------------+
      | 6 | AES                    |
      +---+------------------------+
      | 8 | Support TKIP and AES   |
      +---+------------------------+
      Table 2. Supported EncrypType(s)
      \endcode
  - Example 2. Wi-Fi access point mode.
    - Provide the Wi-Fi access point settings:
      - SSID
      - Authentication Mode
      - Encryption Type
      - Password
    - Once the information is collected, use the following commands to
      configure the LinkIt 7687 HDK. This example assumes WPA2 PSK is used for
      authentication, AES for encryption, 'iot_ap' (length 6) for the SSID,
      and the password of the WPA2 is '87654321' (length 8).
        \code
        config write AP Ssid iot_ap
        config write AP SsidLen 6 
        config write AP AuthMode 7
        config write AP EncrypType 6
        config write AP WpaPsk 87654321
        config write AP WpaPskLen 8
        config write common OpMode 2
        \endcode
    - Press the reset button on the LinkIt 7687 HDK to restart the system.
    - Use a handheld device or a laptop computer to connect to the access point
      'iot_ap'. In the console, the IP address assigned to the the handheld device
      or laptop is:
        \code
        [DHCPD:DBG]lease_ip:10.10.10.2
        \endcode
*/
/**
 * @}
 * @}
 * @}
 */