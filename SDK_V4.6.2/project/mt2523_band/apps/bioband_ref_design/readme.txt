/* Copyright Statement:
 *
 * (C) 2005-2017 MediaTek Inc. All rights reserved.
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. ("MediaTek") and/or its
 * licensors. Without the prior written permission of MediaTek and/or its
 * licensors, any reproduction, modification, use or disclosure of MediaTek
 * Software, and information contained herein, in whole or in part, shall be
 * strictly prohibited. You may only use, reproduce, modify, or distribute
 * (as applicable) MediaTek Software if you have agreed to and been bound by
 * the applicable license agreement with MediaTek ("License Agreement") and
 * been granted explicit permission to do so within the License Agreement
 * ("Permitted User"). If you are not a Permitted User, please cease any
 * access or use of MediaTek Software immediately.
 */

/**
 * @addtogroup mt2523_band mt2523_band
 * @{
 * @addtogroup mt2523_band_apps apps
 * @{
 * @addtogroup mt2523_band_apps_bioband_ref_design bioband_ref_design
 * @{

@par Overview
  - Application description
    - This application demonstrates how to create a graphical user interface
      (GUI) on an embedded system with limited resources using Basic UI
      framework written in C. The project also provides biosensor 
      measurements, such as heart rate monitoring, heart rate variability
      and blood pressure measurement. The embedded system in this project is 
      a wristband based on MediaTek MT2523 and MT2511 SOC.
  - Application features
    - Watch face.
    - Heart Rate, Heart Rate Variability and Blood Pressure using MT2511.
    - Display Bluetooth address.
    - Create Bluetooth Serial Port Profile(SPP)/Bluetooth LE Data Transfer 
      Profile(DTP) connection in server mode.
    - Send sensor data to smartphone through SPP/DTP connection.

@par Hardware and software environment
  - Development platform
    - Wristband based on MediaTek MT2523 chipset and MT2511 SOC.
    - LCM module driven by SH1070 or another driver IC with
      serial interface.
  - Environment configuration
    - Build the project bioband_ref_design for the wristband device.
    - Install and run mtk_care.apk on an Android smartphone.

@par Directory contents
  - Source and header files
    - \b inc:                  Common header files.
    - \b src/sensor_demo:      Sensor algorithm demo source code.
    - \b src/demo_apps:        Basic UI application and event control
    - \b src/main.cpp:         Main program.
    - \b src/sys_init.c:       This file initializes the system, including
                               system clock, UART port for logging, PinMux,
                               cache and other necessary hardware.
    - \b src/band/ept_gpio_var.c:
                               The GPIO configuration file generated by the
                               Easy PinMux Tool (EPT).
    - \b src/band/ept_eint_var.c:
                               The EINT configuration file generated by the
                               EPT.
    - \b src/system_mt2523.c:  The configuration file of the Cortex-M4 with
                               floating point unit MCU registers and system 
                               clock.
    - \b src/task_def.c:       Task definition file.
    - \b src/bt_init.c:        This file includes Bluetooth initialization
                               example code.
    - \b src/btioband_bt_common.c:
    - \b src/bioband_bt_gap.c:
    - \b src/ble_app_common.c:
    - \b src/ble_dtp.c:
                               The four files above contain Bluetooth 
                               SPP/DTP control events.
    - \b src/bt_spps_atci.c:   This file includes Bluetooth SPPs for ATCI. 
    - \b src/gatt_service.c:   GATT and GAP service file.
    - \b src/hci_log.c:        Display HCI log.
  - Project configuration files using GCC
    - \b GCC/feature.mk:       Feature configuration file.
    - \b Makefile:             Makefile.
    - \b GCC/flash.ld:         Linker script.
    - \b GCC/sensor_demo.mk:   Sensor algorithm application makefile.
    - \b GCC/syscalls.c:       MT2523x syscalls for GCC.
  - \b inc/FreeRTOSConfig.h:   FreeRTOS configuration file.
  - \b inc/bt_log.h:           Bluetooth log header file.

@par Run the application
  - Build the source code of this demo application
    - Navigate to the SDK root folder and launch the build command : 
    ./build.sh mt2523_band bioband_ref_design bl
  - Download the binary of the application to wristband by using Flash 
    Tool.
  - Press power key to boot up the wristband.
  - Launch mtk_care app on smartphone
    - mtk_care app shows a list of Bluetooth devices.
    - Tap BIOBAND_DEMO that has a matching Bluetooth address with the
      biosensor device.
    - Press "connect" button on the smartphone to pair with the wristband.
    - Observe the real-time sensor data update on the smartphone.
*/
/**
 * @}
 * @}
 * @}
 */
