// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _clock_center_background_int[]; 
extern const unsigned char _clock_center_background_int_alpha_channel[]; 
extern const unsigned char _clock_center_dot_int[]; 
extern const unsigned char _clock_center_dot_int_alpha_channel[]; 
extern const unsigned char _datepicker_glass_overlay_int[]; 
extern const unsigned char _datepicker_glass_overlay_int_alpha_channel[]; 
extern const unsigned char _datepicker_main_background_int[]; 
extern const unsigned char _datepicker_shadow_overlay_int[]; 
extern const unsigned char _datepicker_shadow_overlay_int_alpha_channel[]; 
extern const unsigned char _icon_back_int[]; 
extern const unsigned char _icon_battery_int[]; 
extern const unsigned char _icon_bluetooth_int[]; 
extern const unsigned char _icon_large_heart_int[]; 
extern const unsigned char _icon_save_int[]; 
extern const unsigned char _icon_small_heart_int[]; 
extern const unsigned char _list_element_0_int[]; 
extern const unsigned char _list_element_1_int[]; 
extern const unsigned char _list_element_2_int[]; 
extern const unsigned char _menu_clock_background_int[]; 
extern const unsigned char _menu_heart_rate_background_int[]; 
extern const unsigned char _menu_setting_background_int[]; 
extern const unsigned char _menu_stage_stretch_left_side_int[]; 
extern const unsigned char _menu_stage_stretch_right_side_int[]; 
extern const unsigned char _screen_swipe_dots_active_int[]; 
extern const unsigned char _screen_swipe_dots_active_int_alpha_channel[]; 
extern const unsigned char _screen_swipe_dots_inactive_int[]; 
extern const unsigned char _screen_swipe_dots_inactive_int_alpha_channel[]; 
extern const unsigned char _switch_off_int[]; 
extern const unsigned char _switch_off_int_alpha_channel[]; 
extern const unsigned char _switch_on_int[]; 
extern const unsigned char _switch_on_int_alpha_channel[]; 
extern const unsigned char _timepicker_glass_overlay_int[]; 
extern const unsigned char _timepicker_glass_overlay_int_alpha_channel[]; 
extern const unsigned char _timepicker_main_background_int[]; 
extern const unsigned char _timepicker_shadow_overlay_int[]; 
extern const unsigned char _timepicker_shadow_overlay_int_alpha_channel[]; 

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { _clock_center_background_int, _clock_center_background_int_alpha_channel, 12, 12, 2, 2, 8, 8, touchgfx::Bitmap::RGB565 },
    { _clock_center_dot_int, _clock_center_dot_int_alpha_channel, 4, 4, 1, 1, 2, 2, touchgfx::Bitmap::RGB565 },
    { _datepicker_glass_overlay_int, _datepicker_glass_overlay_int_alpha_channel, 304, 75, 0, 0, 304, 3, touchgfx::Bitmap::RGB565 },
    { _datepicker_main_background_int, 0, 320, 320, 0, 0, 320, 320, touchgfx::Bitmap::RGB565 },
    { _datepicker_shadow_overlay_int, _datepicker_shadow_overlay_int_alpha_channel, 320, 280, 0, 279, 320, 1, touchgfx::Bitmap::RGB565 },
    { _icon_back_int, 0, 30, 30, 0, 0, 30, 30, touchgfx::Bitmap::RGB565 },
    { _icon_battery_int, 0, 30, 30, 0, 0, 30, 30, touchgfx::Bitmap::RGB565 },
    { _icon_bluetooth_int, 0, 30, 30, 0, 0, 30, 30, touchgfx::Bitmap::RGB565 },
    { _icon_large_heart_int, 0, 30, 30, 0, 0, 30, 30, touchgfx::Bitmap::RGB565 },
    { _icon_save_int, 0, 30, 30, 0, 0, 30, 30, touchgfx::Bitmap::RGB565 },
    { _icon_small_heart_int, 0, 30, 30, 0, 0, 30, 30, touchgfx::Bitmap::RGB565 },
    { _list_element_0_int, 0, 304, 80, 0, 0, 304, 80, touchgfx::Bitmap::RGB565 },
    { _list_element_1_int, 0, 304, 80, 0, 0, 304, 80, touchgfx::Bitmap::RGB565 },
    { _list_element_2_int, 0, 304, 80, 0, 0, 304, 80, touchgfx::Bitmap::RGB565 },
    { _menu_clock_background_int, 0, 320, 320, 0, 0, 320, 320, touchgfx::Bitmap::RGB565 },
    { _menu_heart_rate_background_int, 0, 320, 320, 0, 0, 320, 320, touchgfx::Bitmap::RGB565 },
    { _menu_setting_background_int, 0, 320, 320, 0, 0, 320, 320, touchgfx::Bitmap::RGB565 },
    { _menu_stage_stretch_left_side_int, 0, 50, 320, 0, 0, 50, 320, touchgfx::Bitmap::RGB565 },
    { _menu_stage_stretch_right_side_int, 0, 50, 320, 0, 0, 50, 320, touchgfx::Bitmap::RGB565 },
    { _screen_swipe_dots_active_int, _screen_swipe_dots_active_int_alpha_channel, 20, 10, 0, 0, 0, 0, touchgfx::Bitmap::RGB565 },
    { _screen_swipe_dots_inactive_int, _screen_swipe_dots_inactive_int_alpha_channel, 20, 10, 0, 0, 0, 0, touchgfx::Bitmap::RGB565 },
    { _switch_off_int, _switch_off_int_alpha_channel, 120, 50, 19, 1, 82, 48, touchgfx::Bitmap::RGB565 },
    { _switch_on_int, _switch_on_int_alpha_channel, 120, 50, 19, 1, 82, 48, touchgfx::Bitmap::RGB565 },
    { _timepicker_glass_overlay_int, _timepicker_glass_overlay_int_alpha_channel, 304, 75, 0, 0, 304, 3, touchgfx::Bitmap::RGB565 },
    { _timepicker_main_background_int, 0, 320, 320, 0, 0, 320, 320, touchgfx::Bitmap::RGB565 },
    { _timepicker_shadow_overlay_int, _timepicker_shadow_overlay_int_alpha_channel, 320, 280, 0, 279, 320, 1, touchgfx::Bitmap::RGB565 }
};

namespace BitmapDatabase
{
  const touchgfx::Bitmap::BitmapData* getInstance()
  {
    return bitmap_database;
  }
  uint16_t getInstanceSize()
  {
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
  }
}

