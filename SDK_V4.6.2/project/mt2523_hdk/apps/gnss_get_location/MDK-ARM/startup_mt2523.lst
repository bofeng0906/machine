


ARM Macro Assembler    Page 1 


    1 00000000         ;/* Copyright Statement:
    2 00000000         ; *
    3 00000000         ; * @2015 MediaTek Inc. All rights reserved.
    4 00000000         ; *
    5 00000000         ; * This software/firmware and related documentation ("M
                       ediaTek Software") are
    6 00000000         ; * protected under relevant copyright laws. The informa
                       tion contained herein
    7 00000000         ; * is confidential and proprietary to MediaTek Inc. and
                       /or its licensors.
    8 00000000         ; * Without the prior written permission of MediaTek Inc
                       . and/or its licensors,
    9 00000000         ; * any reproduction, modification, use or disclosure of
                        MediaTek Software,
   10 00000000         ; * and information contained herein, in whole or in par
                       t, shall be strictly prohibited.
   11 00000000         ; *
   12 00000000         ; * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY 
                       ACKNOWLEDGES AND AGREES
   13 00000000         ; * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("
                       MEDIATEK SOFTWARE")
   14 00000000         ; * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES AR
                       E PROVIDED TO RECEIVER ON
   15 00000000         ; * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS 
                       ANY AND ALL WARRANTIES,
   16 00000000         ; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
                        IMPLIED WARRANTIES OF
   17 00000000         ; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
                        NONINFRINGEMENT.
   18 00000000         ; * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVE
                       R WITH RESPECT TO THE
   19 00000000         ; * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, IN
                       CORPORATED IN, OR
   20 00000000         ; * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AG
                       REES TO LOOK ONLY TO SUCH
   21 00000000         ; * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
                        RECEIVER EXPRESSLY ACKNOWLEDGES
   22 00000000         ; * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN 
                       FROM ANY THIRD PARTY ALL PROPER LICENSES
   23 00000000         ; * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO 
                       NOT BE RESPONSIBLE FOR ANY MEDIATEK
   24 00000000         ; * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION O
                       R TO CONFORM TO A PARTICULAR
   25 00000000         ; * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIV
                       E REMEDY AND MEDIATEK'S ENTIRE AND
   26 00000000         ; * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SO
                       FTWARE RELEASED HEREUNDER WILL BE,
   27 00000000         ; * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIA
                       TEK SOFTWARE AT ISSUE,
   28 00000000         ; * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARG
                       E PAID BY RECEIVER TO
   29 00000000         ; * MEDIATEK FOR SUCH MEDIATEK SOFTWARE.
   30 00000000         ; */
   31 00000000         
   32 00000000         ; main stack allocates at end of TCM, which is determine
                       d by scatter file
   33 00000000 00001000 
                       Stack_Size
                               EQU              0x1000



ARM Macro Assembler    Page 2 


   34 00000000         
   35 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   36 00000000         Stack_Mem
                               SPACE            Stack_Size
   37 00001000         __initial_sp
   38 00001000         
   39 00001000 00000800 
                       Heap_Size
                               EQU              0x800
   40 00001000         
   41 00001000                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   42 00000000         __heap_base
   43 00000000         Heap_Mem
                               SPACE            Heap_Size
   44 00000800         __heap_limit
   45 00000800         
   46 00000800         
   47 00000800         ; Macro defines
   48 00000800 A0880000 
                       Cache_Ctrl_Base
                               EQU              0xA0880000
   49 00000800 00000000 
                       Cache_Disable
                               EQU              0x0
   50 00000800 00000003 
                       Cache_Invalid
                               EQU              0x3
   51 00000800 A2050000 
                       WDT_Base
                               EQU              0xA2050000
   52 00000800 00002200 
                       WDT_Disable
                               EQU              0x2200
   53 00000800 A0881000 
                       Remap_Base
                               EQU              0xA0881000
   54 00000800 10000023 
                       Remap_Entry_HI0
                               EQU              0x10000023
   55 00000800 00000000 
                       Remap_Entry_LO0
                               EQU              0x0
   56 00000800         
   57 00000800         
   58 00000800                 PRESERVE8
   59 00000800                 THUMB
   60 00000800         
   61 00000800         ; Vector Table Mapped to head of RAM
   62 00000800                 AREA             |.isr_vector|, DATA, READONLY
   63 00000000                 EXPORT           __Vectors
   64 00000000                 EXPORT           __Vectors_End
   65 00000000                 EXPORT           __Vectors_Size
   66 00000000         
   67 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   68 00000004 00000000        DCD              Reset_Handler ; Reset Handler



ARM Macro Assembler    Page 3 


   69 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   70 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   71 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   72 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   73 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler
   74 0000001C 00000000        DCD              0           ; Reserved
   75 00000020 00000000        DCD              0           ; Reserved
   76 00000024 00000000        DCD              0           ; Reserved
   77 00000028 00000000        DCD              0           ; Reserved
   78 0000002C 00000000        DCD              SvcCall_Main ; SVCall Handler
   79 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
   80 00000034 00000000        DCD              0           ; Reserved
   81 00000038 00000000        DCD              PendSV_Main ; PendSV Handler
   82 0000003C 00000000        DCD              SysTick_Main ; SysTick Handler
   83 00000040         
   84 00000040         ; External Interrupts 
   85 00000040 00000000        DCD              isrC_main   ;16:  OS timer
   86 00000044 00000000        DCD              isrC_main   ;17:  Reserved
   87 00000048 00000000        DCD              isrC_main   ;18:  Modem TOPSM
   88 0000004C 00000000        DCD              isrC_main   ;19:  CM4 TOPSM
   89 00000050 00000000        DCD              isrC_main   ;20:  Reserved
   90 00000054 00000000        DCD              isrC_main   ;21:  Reserved
   91 00000058 00000000        DCD              isrC_main   ;22:  Reserved
   92 0000005C 00000000        DCD              isrC_main   ;23:  Reserved
   93 00000060 00000000        DCD              isrC_main   ;24:  Accessory Det
                                                            ector
   94 00000064 00000000        DCD              isrC_main   ;25:  RTC
   95 00000068 00000000        DCD              isrC_main   ;26:  Keypad
   96 0000006C 00000000        DCD              isrC_main   ;27:  General Purpo
                                                            se Timer
   97 00000070 00000000        DCD              isrC_main   ;28:  External Inte
                                                            rrupt
   98 00000074 00000000        DCD              isrC_main   ;29:  LCD
   99 00000078 00000000        DCD              isrC_main   ;30:  LCD AAL
  100 0000007C 00000000        DCD              isrC_main   ;31:  DSI
  101 00000080 00000000        DCD              isrC_main   ;32:  RESIZE
  102 00000084 00000000        DCD              isrC_main   ;33:  Graphics 2D
  103 00000088 00000000        DCD              isrC_main   ;34:  Camera
  104 0000008C 00000000        DCD              isrC_main   ;35:  ROT DMA
  105 00000090 00000000        DCD              isrC_main   ;36:  SCAM
  106 00000094 00000000        DCD              isrC_main   ;37:  DMA
  107 00000098 00000000        DCD              isrC_main   ;38:  DMA always on
                                                            
  108 0000009C 00000000        DCD              isrC_main   ;39:  I2C dual
  109 000000A0 00000000        DCD              isrC_main   ;40:  I2C0
  110 000000A4 00000000        DCD              isrC_main   ;41:  I2C1
  111 000000A8 00000000        DCD              isrC_main   ;42:  I2C2
  112 000000AC 00000000        DCD              isrC_main   ;43:  Reserved
  113 000000B0 00000000        DCD              isrC_main   ;44:  General Purpo
                                                            se Counter
  114 000000B4 00000000        DCD              isrC_main   ;45:  UART0
  115 000000B8 00000000        DCD              isrC_main   ;46:  UART1



ARM Macro Assembler    Page 4 


  116 000000BC 00000000        DCD              isrC_main   ;47:  UART2
  117 000000C0 00000000        DCD              isrC_main   ;48:  UART3
  118 000000C4 00000000        DCD              isrC_main   ;49:  USB2.0
  119 000000C8 00000000        DCD              isrC_main   ;50:  MSDC0
  120 000000CC 00000000        DCD              isrC_main   ;51:  MSDC1
  121 000000D0 00000000        DCD              isrC_main   ;52:  Reserved
  122 000000D4 00000000        DCD              isrC_main   ;53:  Reserved
  123 000000D8 00000000        DCD              isrC_main   ;54:  Serial FLASH
  124 000000DC 00000000        DCD              isrC_main   ;55:  DSP22CPU
  125 000000E0 00000000        DCD              isrC_main   ;56:  Sensor DMA
  126 000000E4 00000000        DCD              isrC_main   ;57:  RGU
  127 000000E8 00000000        DCD              isrC_main   ;58:  SPI Slave
  128 000000EC 00000000        DCD              isrC_main   ;59:  SPI Master0
  129 000000F0 00000000        DCD              isrC_main   ;60:  SPI Master1
  130 000000F4 00000000        DCD              isrC_main   ;61:  SPI Master2
  131 000000F8 00000000        DCD              isrC_main   ;62:  SPI Master3
  132 000000FC 00000000        DCD              isrC_main   ;63:  TRNG
  133 00000100 00000000        DCD              isrC_main   ;64:  Bluetooth TIM
                                                            CON
  134 00000104 00000000        DCD              isrC_main   ;65:  Bluetooth IF
  135 00000108 00000000        DCD              isrC_main   ;66:  Reserved
  136 0000010C 00000000        DCD              isrC_main   ;67:  Reserved
  137 00000110 00000000        DCD              isrC_main   ;68:  LISR0
  138 00000114 00000000        DCD              isrC_main   ;69:  LISR1
  139 00000118 00000000        DCD              isrC_main   ;70:  LISR2
  140 0000011C 00000000        DCD              isrC_main   ;71:  LISR3
  141 00000120 00000000        DCD              isrC_main   ;72:  PSI Rise Edge
                                                            
  142 00000124 00000000        DCD              isrC_main   ;73:  PSI Fall Edge
                                                            
  143 00000128 00000000        DCD              isrC_main   ;74:  Reserved
  144 0000012C 00000000        DCD              isrC_main   ;75:  Reserved
  145 00000130 00000000        DCD              isrC_main   ;76:  PSI Fall Edge
                                                            
  146 00000134 00000000        DCD              isrC_main   ;77:  Reserved
  147 00000138 00000000        DCD              isrC_main   ;78:  Reserved
  148 0000013C 00000000        DCD              isrC_main   ;79:  Reserved
  149 00000140         
  150 00000140         
  151 00000140         __Vectors_End
  152 00000140         
  153 00000140 00000140 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  154 00000140         
  155 00000140                 AREA             |.reset_handler|, CODE, READONL
Y
  156 00000000         
  157 00000000         
  158 00000000         ; Reset handler
  159 00000000         Reset_Handler
                               PROC
  160 00000000                 EXPORT           Reset_Handler             [WEAK
]
  161 00000000                 IMPORT           SystemInit
  162 00000000                 IMPORT           __main
  163 00000000                 IMPORT           |Image$$STACK$$ZI$$Base|
  164 00000000                 IMPORT           |Image$$STACK$$ZI$$Limit|
  165 00000000         



ARM Macro Assembler    Page 5 


  166 00000000         
  167 00000000         ;set stack pointer
  168 00000000 F8DF D084       LDR              SP, =|Image$$STACK$$ZI$$Limit|
  169 00000004         
  170 00000004         ;interrupt disable
  171 00000004 B672            CPSID            I
  172 00000006         
  173 00000006         ;cache disable, make region init safer
  174 00000006 2000            MOVS             R0, #Cache_Disable
  175 00000008 2103            MOVS             R1, #Cache_Invalid
  176 0000000A 4A20            LDR              R2, =Cache_Ctrl_Base
  177 0000000C F842 0B04       STR              R0, [R2], #4
  178 00000010 6011            STR              R1, [R2, #0]
  179 00000012         
  180 00000012         ;watch dog disable
  181 00000012 481F            LDR              R0, =WDT_Base
  182 00000014 F44F 5108       LDR              R1, =WDT_Disable
  183 00000018 6001            STR              R1, [R0, #0]
  184 0000001A         
  185 0000001A         ;make virtual space available
  186 0000001A 481E            LDR              R0, =Remap_Entry_HI0
  187 0000001C F04F 0100       LDR              R1, =Remap_Entry_LO0
  188 00000020 4A1D            LDR              R2, =Remap_Base
  189 00000022 F842 0B04       STR              R0, [R2], #4
  190 00000026 6011            STR              R1, [R2, #0]
  191 00000028         
  192 00000028         ;stack space zero init
  193 00000028 2000            MOVS             R0, #0
  194 0000002A 491C            LDR              R1, =|Image$$STACK$$ZI$$Base|
  195 0000002C 4A16            LDR              R2, =|Image$$STACK$$ZI$$Limit|
  196 0000002E         FillZero
  197 0000002E F841 0B04       STR              R0, [R1], #4
  198 00000032 4291            CMP              R1, R2
  199 00000034 D3FB            BCC              FillZero
  200 00000036         
  201 00000036         ;Call the clock system intitialization function
  202 00000036 481A            LDR              R0, =SystemInit
  203 00000038 4780            BLX              R0
  204 0000003A         
  205 0000003A         ;Call the application's entry point
  206 0000003A 481A            LDR              R0, =__main
  207 0000003C 4700            BX               R0
  208 0000003E                 ENDP
  209 0000003E         
  210 0000003E         SvcCall_Main
                               PROC
  211 0000003E                 EXPORT           SvcCall_Main
  212 0000003E                 IMPORT           Flash_ReturnReady
  213 0000003E B672            CPSID            I
  214 00000040 B500            PUSH             {LR}
  215 00000042 4819            LDR              R0, =Flash_ReturnReady
  216 00000044 4780            BLX              R0
  217 00000046 F85D EB04       POP              {LR}
  218 0000004A B662            CPSIE            I
  219 0000004C E7FE            B                SVC_Handler
  220 0000004E                 ENDP
  221 0000004E         
  222 0000004E         PendSV_Main
                               PROC



ARM Macro Assembler    Page 6 


  223 0000004E                 EXPORT           PendSV_Main
  224 0000004E                 IMPORT           Flash_ReturnReady
  225 0000004E B672            CPSID            I
  226 00000050 B500            PUSH             {LR}
  227 00000052 4815            LDR              R0, =Flash_ReturnReady
  228 00000054 4780            BLX              R0
  229 00000056 F85D EB04       POP              {LR}
  230 0000005A B662            CPSIE            I
  231 0000005C E7FE            B                PendSV_Handler
  232 0000005E                 ENDP
  233 0000005E         
  234 0000005E         SysTick_Main
                               PROC
  235 0000005E                 EXPORT           SysTick_Main
  236 0000005E                 IMPORT           Flash_ReturnReady
  237 0000005E B672            CPSID            I
  238 00000060 B500            PUSH             {LR}
  239 00000062 4811            LDR              R0, =Flash_ReturnReady
  240 00000064 4780            BLX              R0
  241 00000066 B662            CPSIE            I
  242 00000068 4810            LDR              R0, =SysTick_Handler
  243 0000006A 4780            BLX              R0
  244 0000006C F85D EB04       POP              {LR}
  245 00000070 4770            BX               LR
  246 00000072                 ENDP
  247 00000072         
  248 00000072         isrC_main
                               PROC
  249 00000072                 EXPORT           isrC_main                  [WEA
K]
  250 00000072 E7FE            B                .
  251 00000074                 ENDP
  252 00000074         
  253 00000074         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  254 00000074         
  255 00000074         NMI_Handler
                               PROC
  256 00000074                 EXPORT           NMI_Handler                [WEA
K]
  257 00000074 E7FE            B                .
  258 00000076                 ENDP
  260 00000076         HardFault_Handler
                               PROC
  261 00000076                 EXPORT           HardFault_Handler          [WEA
K]
  262 00000076 E7FE            B                .
  263 00000078                 ENDP
  265 00000078         MemManage_Handler
                               PROC
  266 00000078                 EXPORT           MemManage_Handler          [WEA
K]
  267 00000078 E7FE            B                .
  268 0000007A                 ENDP
  270 0000007A         BusFault_Handler
                               PROC
  271 0000007A                 EXPORT           BusFault_Handler           [WEA
K]
  272 0000007A E7FE            B                .



ARM Macro Assembler    Page 7 


  273 0000007C                 ENDP
  275 0000007C         UsageFault_Handler
                               PROC
  276 0000007C                 EXPORT           UsageFault_Handler         [WEA
K]
  277 0000007C E7FE            B                .
  278 0000007E                 ENDP
  279 0000007E         SVC_Handler
                               PROC
  280 0000007E                 EXPORT           SVC_Handler                [WEA
K]
  281 0000007E E7FE            B                .
  282 00000080                 ENDP
  284 00000080         DebugMon_Handler
                               PROC
  285 00000080                 EXPORT           DebugMon_Handler           [WEA
K]
  286 00000080 E7FE            B                .
  287 00000082                 ENDP
  288 00000082         PendSV_Handler
                               PROC
  289 00000082                 EXPORT           PendSV_Handler             [WEA
K]
  290 00000082 E7FE            B                .
  291 00000084                 ENDP
  292 00000084         SysTick_Handler
                               PROC
  293 00000084                 EXPORT           SysTick_Handler            [WEA
K]
  294 00000084 E7FE            B                .
  295 00000086                 ENDP
  296 00000086         
  297 00000086 00 00           ALIGN
  298 00000088         
  299 00000088         ;*******************************************************
                       ************************
  300 00000088         ; User Stack and Heap initialization
  301 00000088         ;*******************************************************
                       ************************
  302 00000088                 IF               :DEF:__MICROLIB
  303 00000088         
  304 00000088                 EXPORT           __initial_sp
  305 00000088                 EXPORT           __heap_base
  306 00000088                 EXPORT           __heap_limit
  307 00000088         
  308 00000088                 ELSE
  323                          ENDIF
  324 00000088         
  325 00000088                 END
              00000000 
              A0880000 
              A2050000 
              10000023 
              A0881000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 



ARM Macro Assembler    Page 8 


Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=..\..\..\..\..\out_keil\mt2523_hdk\iot_sdk_demo\startup_mt2523.
d -o..\..\..\..\..\out_keil\mt2523_hdk\iot_sdk_demo\startup_mt2523.o -I\\10.19.
50.217\mtk54485\Yuan\mp3_new\gva\project\mt2523_hdk\apps\iot_sdk_demo\MDK-ARM\R
TE -IC:\Keil_v5\ARM\PACK\MediaTek\MTx\3.1.0\driver\CMSIS\Device\MTK\mt2523\Incl
ude -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__MICROLIB SETA 1" --predefine=
"__UVISION_VERSION SETA 515" --list=.\startup_mt2523.lst startup_mt2523.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 35 in file startup_mt2523.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 36 in file startup_mt2523.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00001000

Symbol: __initial_sp
   Definitions
      At line 37 in file startup_mt2523.s
   Uses
      At line 67 in file startup_mt2523.s
      At line 304 in file startup_mt2523.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 41 in file startup_mt2523.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 43 in file startup_mt2523.s
   Uses
      None
Comment: Heap_Mem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 42 in file startup_mt2523.s
   Uses
      At line 305 in file startup_mt2523.s
Comment: __heap_base used once
__heap_limit 00000800

Symbol: __heap_limit
   Definitions
      At line 44 in file startup_mt2523.s
   Uses
      At line 306 in file startup_mt2523.s
Comment: __heap_limit used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.isr_vector 00000000

Symbol: .isr_vector
   Definitions
      At line 62 in file startup_mt2523.s
   Uses
      None
Comment: .isr_vector unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 67 in file startup_mt2523.s
   Uses
      At line 63 in file startup_mt2523.s
      At line 153 in file startup_mt2523.s

__Vectors_End 00000140

Symbol: __Vectors_End
   Definitions
      At line 151 in file startup_mt2523.s
   Uses
      At line 64 in file startup_mt2523.s
      At line 153 in file startup_mt2523.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.reset_handler 00000000

Symbol: .reset_handler
   Definitions
      At line 155 in file startup_mt2523.s
   Uses
      None
Comment: .reset_handler unused
BusFault_Handler 0000007A

Symbol: BusFault_Handler
   Definitions
      At line 270 in file startup_mt2523.s
   Uses
      At line 72 in file startup_mt2523.s
      At line 271 in file startup_mt2523.s

DebugMon_Handler 00000080

Symbol: DebugMon_Handler
   Definitions
      At line 284 in file startup_mt2523.s
   Uses
      At line 79 in file startup_mt2523.s
      At line 285 in file startup_mt2523.s

FillZero 0000002E

Symbol: FillZero
   Definitions
      At line 196 in file startup_mt2523.s
   Uses
      At line 199 in file startup_mt2523.s
Comment: FillZero used once
HardFault_Handler 00000076

Symbol: HardFault_Handler
   Definitions
      At line 260 in file startup_mt2523.s
   Uses
      At line 70 in file startup_mt2523.s
      At line 261 in file startup_mt2523.s

MemManage_Handler 00000078

Symbol: MemManage_Handler
   Definitions
      At line 265 in file startup_mt2523.s
   Uses
      At line 71 in file startup_mt2523.s
      At line 266 in file startup_mt2523.s

NMI_Handler 00000074

Symbol: NMI_Handler
   Definitions
      At line 255 in file startup_mt2523.s
   Uses
      At line 69 in file startup_mt2523.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 256 in file startup_mt2523.s

PendSV_Handler 00000082

Symbol: PendSV_Handler
   Definitions
      At line 288 in file startup_mt2523.s
   Uses
      At line 231 in file startup_mt2523.s
      At line 289 in file startup_mt2523.s

PendSV_Main 0000004E

Symbol: PendSV_Main
   Definitions
      At line 222 in file startup_mt2523.s
   Uses
      At line 81 in file startup_mt2523.s
      At line 223 in file startup_mt2523.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 159 in file startup_mt2523.s
   Uses
      At line 68 in file startup_mt2523.s
      At line 160 in file startup_mt2523.s

SVC_Handler 0000007E

Symbol: SVC_Handler
   Definitions
      At line 279 in file startup_mt2523.s
   Uses
      At line 219 in file startup_mt2523.s
      At line 280 in file startup_mt2523.s

SvcCall_Main 0000003E

Symbol: SvcCall_Main
   Definitions
      At line 210 in file startup_mt2523.s
   Uses
      At line 78 in file startup_mt2523.s
      At line 211 in file startup_mt2523.s

SysTick_Handler 00000084

Symbol: SysTick_Handler
   Definitions
      At line 292 in file startup_mt2523.s
   Uses
      At line 242 in file startup_mt2523.s
      At line 293 in file startup_mt2523.s

SysTick_Main 0000005E

Symbol: SysTick_Main



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 234 in file startup_mt2523.s
   Uses
      At line 82 in file startup_mt2523.s
      At line 235 in file startup_mt2523.s

UsageFault_Handler 0000007C

Symbol: UsageFault_Handler
   Definitions
      At line 275 in file startup_mt2523.s
   Uses
      At line 73 in file startup_mt2523.s
      At line 276 in file startup_mt2523.s

isrC_main 00000072

Symbol: isrC_main
   Definitions
      At line 248 in file startup_mt2523.s
   Uses
      At line 85 in file startup_mt2523.s
      At line 86 in file startup_mt2523.s
      At line 87 in file startup_mt2523.s
      At line 88 in file startup_mt2523.s
      At line 89 in file startup_mt2523.s
      At line 90 in file startup_mt2523.s
      At line 91 in file startup_mt2523.s
      At line 92 in file startup_mt2523.s
      At line 93 in file startup_mt2523.s
      At line 94 in file startup_mt2523.s
      At line 95 in file startup_mt2523.s
      At line 96 in file startup_mt2523.s
      At line 97 in file startup_mt2523.s
      At line 98 in file startup_mt2523.s
      At line 99 in file startup_mt2523.s
      At line 100 in file startup_mt2523.s
      At line 101 in file startup_mt2523.s
      At line 102 in file startup_mt2523.s
      At line 103 in file startup_mt2523.s
      At line 104 in file startup_mt2523.s
      At line 105 in file startup_mt2523.s
      At line 106 in file startup_mt2523.s
      At line 107 in file startup_mt2523.s
      At line 108 in file startup_mt2523.s
      At line 109 in file startup_mt2523.s
      At line 110 in file startup_mt2523.s
      At line 111 in file startup_mt2523.s
      At line 112 in file startup_mt2523.s
      At line 113 in file startup_mt2523.s
      At line 114 in file startup_mt2523.s
      At line 115 in file startup_mt2523.s
      At line 116 in file startup_mt2523.s
      At line 117 in file startup_mt2523.s
      At line 118 in file startup_mt2523.s
      At line 119 in file startup_mt2523.s
      At line 120 in file startup_mt2523.s
      At line 121 in file startup_mt2523.s
      At line 122 in file startup_mt2523.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 123 in file startup_mt2523.s
      At line 124 in file startup_mt2523.s
      At line 125 in file startup_mt2523.s
      At line 126 in file startup_mt2523.s
      At line 127 in file startup_mt2523.s
      At line 128 in file startup_mt2523.s
      At line 129 in file startup_mt2523.s
      At line 130 in file startup_mt2523.s
      At line 131 in file startup_mt2523.s
      At line 132 in file startup_mt2523.s
      At line 133 in file startup_mt2523.s
      At line 134 in file startup_mt2523.s
      At line 135 in file startup_mt2523.s
      At line 136 in file startup_mt2523.s
      At line 137 in file startup_mt2523.s
      At line 138 in file startup_mt2523.s
      At line 139 in file startup_mt2523.s
      At line 140 in file startup_mt2523.s
      At line 141 in file startup_mt2523.s
      At line 142 in file startup_mt2523.s
      At line 143 in file startup_mt2523.s
      At line 144 in file startup_mt2523.s
      At line 145 in file startup_mt2523.s
      At line 146 in file startup_mt2523.s
      At line 147 in file startup_mt2523.s
      At line 148 in file startup_mt2523.s
      At line 249 in file startup_mt2523.s

16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Cache_Ctrl_Base A0880000

Symbol: Cache_Ctrl_Base
   Definitions
      At line 48 in file startup_mt2523.s
   Uses
      At line 176 in file startup_mt2523.s
Comment: Cache_Ctrl_Base used once
Cache_Disable 00000000

Symbol: Cache_Disable
   Definitions
      At line 49 in file startup_mt2523.s
   Uses
      At line 174 in file startup_mt2523.s
Comment: Cache_Disable used once
Cache_Invalid 00000003

Symbol: Cache_Invalid
   Definitions
      At line 50 in file startup_mt2523.s
   Uses
      At line 175 in file startup_mt2523.s
Comment: Cache_Invalid used once
Heap_Size 00000800

Symbol: Heap_Size
   Definitions
      At line 39 in file startup_mt2523.s
   Uses
      At line 43 in file startup_mt2523.s
Comment: Heap_Size used once
Remap_Base A0881000

Symbol: Remap_Base
   Definitions
      At line 53 in file startup_mt2523.s
   Uses
      At line 188 in file startup_mt2523.s
Comment: Remap_Base used once
Remap_Entry_HI0 10000023

Symbol: Remap_Entry_HI0
   Definitions
      At line 54 in file startup_mt2523.s
   Uses
      At line 186 in file startup_mt2523.s
Comment: Remap_Entry_HI0 used once
Remap_Entry_LO0 00000000

Symbol: Remap_Entry_LO0
   Definitions
      At line 55 in file startup_mt2523.s
   Uses
      At line 187 in file startup_mt2523.s
Comment: Remap_Entry_LO0 used once
Stack_Size 00001000

Symbol: Stack_Size



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 33 in file startup_mt2523.s
   Uses
      At line 36 in file startup_mt2523.s
Comment: Stack_Size used once
WDT_Base A2050000

Symbol: WDT_Base
   Definitions
      At line 51 in file startup_mt2523.s
   Uses
      At line 181 in file startup_mt2523.s
Comment: WDT_Base used once
WDT_Disable 00002200

Symbol: WDT_Disable
   Definitions
      At line 52 in file startup_mt2523.s
   Uses
      At line 182 in file startup_mt2523.s
Comment: WDT_Disable used once
__Vectors_Size 00000140

Symbol: __Vectors_Size
   Definitions
      At line 153 in file startup_mt2523.s
   Uses
      At line 65 in file startup_mt2523.s
Comment: __Vectors_Size used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Flash_ReturnReady 00000000

Symbol: Flash_ReturnReady
   Definitions
      At line 212 in file startup_mt2523.s
      At line 224 in file startup_mt2523.s
      At line 236 in file startup_mt2523.s
   Uses
      At line 215 in file startup_mt2523.s
      At line 227 in file startup_mt2523.s
      At line 239 in file startup_mt2523.s
Warning: Flash_ReturnReady multiply defined
Image$$STACK$$ZI$$Base 00000000

Symbol: Image$$STACK$$ZI$$Base
   Definitions
      At line 163 in file startup_mt2523.s
   Uses
      At line 194 in file startup_mt2523.s
Comment: Image$$STACK$$ZI$$Base used once
Image$$STACK$$ZI$$Limit 00000000

Symbol: Image$$STACK$$ZI$$Limit
   Definitions
      At line 164 in file startup_mt2523.s
   Uses
      At line 168 in file startup_mt2523.s
      At line 195 in file startup_mt2523.s

SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 161 in file startup_mt2523.s
   Uses
      At line 202 in file startup_mt2523.s
Comment: SystemInit used once
__main 00000000

Symbol: __main
   Definitions
      At line 162 in file startup_mt2523.s
   Uses
      At line 206 in file startup_mt2523.s
Comment: __main used once
5 symbols
377 symbols in table
