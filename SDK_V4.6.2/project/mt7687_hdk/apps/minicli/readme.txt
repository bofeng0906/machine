/* Copyright Statement:
 *
 * (C) 2005-2017 MediaTek Inc. All rights reserved.
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. ("MediaTek") and/or its
 * licensors. Without the prior written permission of MediaTek and/or its
 * licensors, any reproduction, modification, use or disclosure of MediaTek
 * Software, and information contained herein, in whole or in part, shall be
 * strictly prohibited. You may only use, reproduce, modify, or distribute
 * (as applicable) MediaTek Software if you have agreed to and been bound by
 * the applicable license agreement with MediaTek ("License Agreement") and
 * been granted explicit permission to do so within the License Agreement
 * ("Permitted User"). If you are not a Permitted User, please cease any
 * access or use of MediaTek Software immediately.
 */

/**
 * @addtogroup mt7687_hdk mt7687_hdk
 * @{
 * @addtogroup mt7687_hdk_apps apps
 * @{
 * @addtogroup mt7687_hdk_apps_minicli minicli
 * @{

@par Overview
  - Example project description
    - This project is a reference application to create a MiniCLI task with
      custom defined commands.
  - Features of the example project
    - This project creates a CLI task and waits for the user input through a
      serial port.
  - Output from the example
    - An output log is printed on the serial port window.

@par Hardware and software environment
  - Supported HDK
    - MediaTek LinkIt 7687 HDK.
  - Environment configuration
    - The output logs are communicated through a micro-USB cable to the PC
      from USB (CON5) connector on the HDK.
      - Install the mbed serial driver according to the instructions at
        https://developer.mbed.org/handbook/Windows-serial-configuration. For
        more information, please refer to section "Installing the LinkIt 7687
        HDK drivers on Microsoft Windows" on the "LinkIt 7687 HDK User Guide"
        in [sdk_root]/doc folder.
      - Use a type-A to micro-B USB cable to connect type-A USB of the PC and
        MK20 micro-B USB connector on the LinkIt 7687 HDK. For more
        information about the connector cable, please refer to
        https://en.wikipedia.org/wiki/USB#Mini_and_micro_connectors.
      - Launch a terminal emulator program, such as Tera terminal on your PC
        for data logging through UART. For the installation details, please
        refer to section "Installing Tera terminal on Microsoft Windows" on
        the "LinkIt for RTOS Get Started Guide" in [sdk_root]/doc folder.
      - COM port settings. baudrate: 115200, data bits: 8, stop bit: 1,
        parity: none and flow control: off.

@par Directory contents
  - Source and header files
    - \b src/main.c:            Main program.
    - \b src/system_mt7687.c:   The configuration file of the Cortex-M4 with
                                floating point core registers and system clock
    - \b src/sys_init.c:        This file initializes the basic hardware
                                environment for the system, including system
                                clock, UART port for logging, Pinmux, cache and
                                other necessary hardware.
    - \b src/ept_eint_var.c:    The EINT configuration file generated by Easy
                                Pinmux Tool (EPT). Please do not edit the file.
    - \b src/ept_gpio_var.c:    The GPIO configuration file generated by Easy
                                Pinmux Tool (EPT). Please do not edit the file.
    - \b inc/FreeRTOSConfig.h:  FreeRTOS feature configuration file.
    - \b inc/task_def.h:        Define the task stack size, queue length,
                                project name, and priority for the application
                                to create tasks.
    - \b inc/hal_feature_config.h:
                                MT76x7 feature configuration file.
    - \b inc/flash_map.h:       MT76x7 memory layout symbol file.
    - \b inc/ept_eint_drv.h:    The EINT configuration file generated by Easy
                                Pinmux Tool (EPT). Please do not edit the file.
    - \b inc/ept_gpio_drv.h:    The GPIO configuration file generated by Easy
                                Pinmux Tool (EPT). Please do not edit the file.
    - \b inc/sys_init.h:        The header file of sys_init.c.
    - \b inc/task_def.h:        The task configuration file.
  - Project configuration files using GCC
    - \b GCC/startup_mt7687.s:  MT76x7 startup file for GCC.
    - \b GCC/syscalls.c:        The minimal implementation of the system calls.
    - \b GCC/mt7687_hdk.cmm:    This CMM is for lakrpsur development on 7687 E2
                                EVB.
    - \b GCC/feature.mk:        Feature configuration.
    - \b GCC/Makefile:          Makefile.
    - \b GCC/mt7687_flash.ld:   Linker script.
  - Project configuration files using Keil IDE
    - \b MDK-ARM/minicli.uvprojx:  uVision5 Project File. Contains the project
                                   structure in XML format.
    - \b MDK-ARM/startup_mt7687.s:
                                   MT76x7 startup file for Keil IDE.
    - \b MDK-ARM/flash.sct:        Linker script.
  - Project configuration files using IAR
    - \b EWARM/flash.icf:         Linker configuration file.
    - \b EWARM/minicli.ewd:       Debugger settings file.
    - \b EWARM/minicli.ewp:       Project file.
    - \b EWARM/minicli.ewt:       C-STAT and C-RUN settings.
    - \b EWARM/minicli.ewd:       Workspace file.
    - \b EWARM/startup_mt7687.s:  MT7687 startup file.

@par Run the demo
  - Connect the board to the PC with a serial port cable.
  - Build the example project with the command "./build.sh mt7687_hdk
    minicli" from the SDK root folder and download the binary file to LinkIt
    7687 development board.
  - '$' shows on the screen. CLI task waits for the user input. For example,
    enter 'hello' (an example command in this project), 'Hello World' is
    printed on screen.
  - Try to add your own command.
*/
/**
 * @}
 * @}
 * @}
 */
