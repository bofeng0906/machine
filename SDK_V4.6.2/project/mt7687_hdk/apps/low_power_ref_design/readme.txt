/* Copyright Statement:
 *
 * (C) 2005-2017 MediaTek Inc. All rights reserved.
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. ("MediaTek") and/or its
 * licensors. Without the prior written permission of MediaTek and/or its
 * licensors, any reproduction, modification, use or disclosure of MediaTek
 * Software, and information contained herein, in whole or in part, shall be
 * strictly prohibited. You may only use, reproduce, modify, or distribute
 * (as applicable) MediaTek Software if you have agreed to and been bound by
 * the applicable license agreement with MediaTek ("License Agreement") and
 * been granted explicit permission to do so within the License Agreement
 * ("Permitted User"). If you are not a Permitted User, please cease any
 * access or use of MediaTek Software immediately.
 */

/**
 * @addtogroup mt7687_hdk mt7687_hdk
 * @{
 * @addtogroup mt7687_hdk_apps apps
 * @{
 * @addtogroup mt7687_hdk_apps_low_power_ref_design low power reference design
 * @{

@par Overview
  - Application description
    - This project demonstrates Wi-Fi connectivity in Station mode for low
      power consumption applications.
      - The first packet is sent out within 200ms.
      - Packet filter to wake up the MCU.
      - DTIM low power is less than 10mW.
        - See section 4.7, Power Performance Summary, of
          <sdk_root>/doc/MCU/<sdk_root>/doc/MCU/MT7687F_Datasheet.pdf.
  - Application features
    - Act as a Wi-Fi station, to connect to a Wi-Fi network.
    - Ping out/in the device.

@par Hardware and software environment
  - Supported platform
    - MediaTek LinkIt 7687 HDK.
  - HDK switches and pin configuration
    - Use the default settings for jumper and pin assignment based on LinkIt
      7687 HDK User's Guide.
    - There are three buttons on the board:
      - RST - reset.
      - EINT - external interrupt trigger.
      - RTC_INT - RTC interrupt trigger.
  - Environment configuration
    - A serial tool is required, such as hyper terminal or TeraTerm for UART
      logging.
    - COM port settings. baudrate: 115200, data bits: 8, stop bit: 1, parity:
      none and flow control: off.

@par Directory contents
  - Source and header files
    - \b src/main.c:            Entry point of the application program.
    - \b src/sys_init.c:        Aggregated initialization routines.
    - \b src/system_mt7687.c:   MT7687 system clock configuration file.
    - \b inc/flash_map.h:       MT7687 memory layout symbol file.
    - \b inc/task_def.h:        Define the task stack size, queue length,
                                project name, and priority for the application
                                to create tasks.
    - \b inc/hal_feature_config.h:
                                MT7687 HAL API feature configuration file.
    - \b inc/FreeRTOSConfig.h:  MT7687 FreeRTOS configuration file.
    - \b inc/lwipopts.h:        lwIP configuration.
    - \b inc/sys_init.h:        Prototype declaration
    - \b inc/ept_eint_drv.h:    The EINT configuration file generated by Easy
                                Pinmux Tool (EPT). Please do not edit the file.
    - \b inc/ept_gpio_drv.h:    The GPIO configuration file generated by the
                                EPT. Please do not edit the file.
    - \b inc/cli_cmds.h:        Provides the CLI commands to be used in the
                                cli_def.c source file.
  - Project configuration files using GCC.
    - \b GCC/Makefile:          GNU Makefile for this project.
    - \b GCC/feature.mk:        Generic feature options configuration file.
    - \b GCC/mt7687_flash.ld:   Linker script.
    - \b GCC/startup_mt7687.s:  MT7687 startup file.
    - \b GCC/syscalls.c:        MT7687 syscalls implementation.
    - \b src/ept_eint_var.c:    EINT configuration file generated by the EPT.
                                Please do not edit the file.
    - \b src/ept_gpio_var.c:    GPIO configuration file generated by the EPT.
                                Please do not edit the file.
    - \b src/cli_cmds.c:        CLI commands of this project.
    - \b src/cli_def.c:         CLI initialize sequence code.
  - Project configuration files using Keil IDE.
    - \b MDK-ARM/RTE/Device/7687_32M_MXIC.FLM
    - \b MDK-ARM/RTE/Device/flash.ini
    - \b MDK-ARM/RTE/RTE_Components.h
    - \b MDK-ARM/flash.sct:  Scatter file.
    - \b MDK-ARM/low_power_ref_design.uvprojx:
                             uVision5 Project File. Contains the project
                             structure in XML format.
    - \b MDK-ARM/startup_mt7687.s:
                             MT7687 startup file.

@par Run the application
  - Connect the board to a PC with a serial port cable.
  - Build the example project and download the binary file to the LinkIt 7687
    HDK.
  - Reboot the HDK, the console will show "FreeRTOS Running" message to
    indicate the HDK is booting up.
  - Use the '?' command to query the available command line options. Note
    that the command line options are still under development and subject to
    change without notice.
  - This is an example to demonstrate the Wi-Fi Station mode.
  - Example 1. Wi-Fi station mode.
    - Find your Wi-Fi access point settings: Before connecting to a Wi-Fi
      access point, the following information needs to be collected:
      -# The SSID of your Wi-Fi access point.
      -# The authentication mode of your Wi-Fi access point. In general, the
         authentication mode is WPA PSK or WPA2 PSK. To change the mode,
         please refer to Table 1 for the list of supported authentication
         modes.
      -# The password of your Wi-Fi access point.
      -# The encryption mode of your Wi-Fi access point. In general, AES or
         TKIP is used. To change the mode, please refer to Table 2 for the
         list of supported encryption modes.
    - Once the information is collected, use the following commands to
      configure the LinkIt 7687 HDK. The example code in main.c assumes
      either WPA PSK or WPA2 PSK is used for authentication, TKIP or AES for
      encryption, 'myhome' (length 6) for the SSID, and the password of the
      WPA or WPA2 is '12345678' (length 8).
      \code
      config write STA AuthMode 9
      config write STA EncrypType 8
      config write STA Ssid myhome
      config write STA SsidLen 6
      config write STA WpaPsk 12345678
      config write STA WpaPskLen 8
      config write common OpMode 1
      \endcode
    - Press the reset button on the LinkIt 7687 HDK to restart the system.
    - Boot up with the new configuration. If everything is correct, similar
      messages will be shown in the console to notify your HDK has received
      an IP address.
      \code
      DHCP got IP:10.10.10.101
      \endcode
    - PING from the LinkIt 7687 HDK (SDK v3.1.0). If the IP address is
      fetched and the network is operating, the LinkIt 7687 can ping other
      devices on the network with the following command in the console.
      \code
      ping 10.10.10.254 3 64
      The ping stops after sending three packets to 10.10.10.254.
      The ping usage is: ping <ip address> <times> <ping packet length>
      \endcode
    - Wi-Fi configuration options for AuthMode and EncrypType.
      \code
      +---+-------------------------------------+
      | 0 | open, no security                   |
      +---+-------------------------------------+
      | 4 | WPA PSK                             |
      +---+-------------------------------------+
      | 7 | WPA2 PSK                            |
      +---+-------------------------------------+
      | 9 | Support both WPA and WPA2 PSK       |
      +---+-------------------------------------+
      Table 1. Supported AuthMode(s)
      +---+------------------------+
      | 0 | WEP                    |
      +---+------------------------+
      | 1 | No encryption          |
      +---+------------------------+
      | 4 | TKIP                   |
      +---+------------------------+
      | 6 | AES                    |
      +---+------------------------+
      | 8 | Support TKIP and AES   |
      +---+------------------------+
      Table 2. Supported EncrypType(s)
      \endcode
*/
/**
 * @}
 * @}
 * @}
 */
