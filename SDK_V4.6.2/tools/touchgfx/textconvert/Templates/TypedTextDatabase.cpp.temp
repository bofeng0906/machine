/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#include <touchgfx/InternalFlashFont.hpp>
#include <touchgfx/TypedText.hpp>
#include <texts/TypedTextDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

<% fonts.each do |font| %>
extern touchgfx::InternalFlashFont& <%= font%>();
<% end %>

const touchgfx::Font* const _fonts[] = {
<% if fonts.empty? %>
   0
<% end %>
<% fonts.each do |font| %>
  &(<%= font %>()),
<% end %>
};

<% layouts.each do |layout| %>
TEXT_LOCATION_FLASH_PRAGMA
const touchgfx::TypedText::TypedTextData typedText_database_<%= layout %>[] TEXT_LOCATION_FLASH_ATTRIBUTE = {
<% if typed_texts(layout).empty?%>
  { 0, touchgfx::LEFT, touchgfx::TEXT_DIRECTION_LTR }
<% end %>
<% typed_texts(layout).each do |typed_text| %>
    { <%= fontmap["getFont_#{typed_text.typography.cpp_name}_#{typed_text.typography.font_size}_#{typed_text.typography.bpp}bpp"] %>, <%= %>touchgfx::<%= typed_text.alignment.upcase %>, <%= %>touchgfx::TEXT_DIRECTION_<%= typed_text.direction.upcase %> },
<% end %>
};

<% end %>

TEXT_LOCATION_FLASH_PRAGMA
const touchgfx::TypedText::TypedTextData* const typedTextDatabaseArray[] TEXT_LOCATION_FLASH_ATTRIBUTE =
{
<% if text_entries.languages.empty? %>
  typedText_database_DEFAULT
<% end %>
<% text_entries.languages.each do |language| %>
    typedText_database_<%= (layouts.find { |l| l == language } || 'DEFAULT') %>,
<% end %>
};

namespace TypedTextDatabase
{
  const touchgfx::TypedText::TypedTextData* getInstance(touchgfx::LanguageId id)
  {
    return typedTextDatabaseArray[id];
  }

  uint16_t getInstanceSize()
  {
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
  }
  const touchgfx::Font* const * getFonts()
  {
    return _fonts;
  }
}
